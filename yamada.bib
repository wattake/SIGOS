%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Hiroshi Yamada at 2022-07-26 09:53:19 +0900 


%% Saved with string encoding Unicode (UTF-8) 



@inproceedings{BratterudEtAl-IncludeOS,
	author = {Bratterud, Alfred and Walla, Alf-Andre and Haugerud, H{\aa}rek and Engelstad, Paal E. and Begnum, Kyrre},
	booktitle = {Proc. of the 2015 IEEE 7th International Conference on Cloud Computing Technology and Science (CloudCom '15)},
	date-added = {2022-07-26 09:52:47 +0900},
	date-modified = {2022-07-26 09:53:19 +0900},
	pages = {250-257},
	title = {IncludeOS: A Minimal, Resource Efficient Unikernel for Cloud Services},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/CloudCom.2015.89}}

@inproceedings{PailoorEtAl-SEC18,
	author = {Shankara Pailoor and Andrew Aday and Suman Jana},
	booktitle = {Pro.c of the 27th USENIX Security Symposium (USENIX Security 18)},
	date-added = {2022-07-21 10:06:07 +0900},
	date-modified = {2022-07-21 10:06:38 +0900},
	pages = {729--743},
	title = {{MoonShine}: Optimizing {OS} Fuzzer Seed Selection with Trace Distillation},
	year = {2018}}

@inproceedings{PanEtAl-SEC17,
	author = {Jianfeng Pan and Guanglu Yan and Xiaocao Fan},
	booktitle = {Proc. of the 26th USENIX Security Symposium (USENIX Security 17)},
	date-added = {2022-07-21 10:04:47 +0900},
	date-modified = {2022-07-21 10:05:07 +0900},
	pages = {149--165},
	title = {Digtool: A {Virtualization-Based} Framework for Detecting Kernel Vulnerabilities},
	year = {2017}}

@inproceedings{SchumiloEtAl-kAFL,
	author = {Sergej Schumilo and Cornelius Aschermann and Robert Gawlik and Sebastian Schinzel and Thorsten Holz},
	booktitle = {Proc. of the 26th USENIX Security Symposium (USENIX Security 17)},
	date-added = {2022-07-21 10:03:29 +0900},
	date-modified = {2022-07-21 10:03:57 +0900},
	pages = {167--182},
	title = {{kAFL}: {Hardware-Assisted} Feedback Fuzzing for {OS} Kernels},
	year = {2017}}

@misc{Syzkaller,
	date-added = {2022-07-21 10:01:23 +0900},
	date-modified = {2022-07-21 10:02:37 +0900},
	title = {Syzkaller: an unsupervised, coverage-guided Linux system call fuzzer},
	url = {url{https://opensource.google.com/projects/syzkaller}},
	year = {2019},
	bdsk-url-1 = {url%7Bhttps://opensource.google.com/projects/syzkaller%7D}}

@inproceedings{TalebiEtAl-SEC21,
	author = {Seyed Mohammadjavad Seyed Talebi and Zhihao Yao and Ardalan Amiri Sani and Zhiyun Qian and Daniel Austin},
	booktitle = {Proc. of the 30th USENIX Security Symposium (USENIX Security '21)},
	date-added = {2022-07-21 09:58:08 +0900},
	date-modified = {2022-07-21 09:58:40 +0900},
	pages = {2381--2398},
	title = {Undo Workarounds for Kernel Bugs},
	year = {2021}}

@inproceedings{ChouEtAl-SOSP01,
	abstract = {We present a study of operating system errors found by automatic, static, compiler analysis applied to the Linux and OpenBSD kernels. Our approach differs from previous studies that consider errors found by manual inspection of logs, testing, and surveys because static analysis is applied uniformly to the entire kernel source, though our approach necessarily considers a less comprehensive variety of errors than previous studies. In addition, automation allows us to track errors over multiple versions of the kernel source to estimate how long errors remain in the system before they are fixed.We found that device drivers have error rates up to three to seven times higher than the rest of the kernel. We found that the largest quartile of functions have error rates two to six times higher than the smallest quartile. We found that the newest quartile of files have error rates up to twice that of the oldest quartile, which provides evidence that code "hardens" over time. Finally, we found that bugs remain in the Linux kernel an average of 1.8 years before being fixed.},
	author = {Chou, Andy and Yang, Junfeng and Chelf, Benjamin and Hallem, Seth and Engler, Dawson},
	booktitle = {Proc. of the Eighteenth ACM Symposium on Operating Systems Principles (SOSP'01)},
	date-added = {2022-07-21 09:43:25 +0900},
	date-modified = {2022-07-21 09:43:56 +0900},
	pages = {73--88},
	title = {An Empirical Study of Operating Systems Errors},
	year = {2001}}

@inproceedings{PalixEtAl-ASPLOS11,
	abstract = {In 2001, Chou et al. published a study of faults found by applying a static analyzer to Linux versions 1.0 through 2.4.1. A major result of their work was that the drivers directory contained up to 7 times more of certain kinds of faults than other directories. This result inspired a number of development and research efforts on improving the reliability of driver code. Today Linux is used in a much wider range of environments, provides a much wider range of services, and has adopted a new development and release model. What has been the impact of these changes on code quality? Are drivers still a major problem?To answer these questions, we have transported the experiments of Chou et al. to Linux versions 2.6.0 to 2.6.33, released between late 2003 and early 2010. We find that Linux has more than doubled in size during this period, but that the number of faults per line of code has been decreasing. And, even though drivers still accounts for a large part of the kernel code and contains the most faults, its fault rate is now below that of other directories, such as arch (HAL) and fs (file systems). These results can guide further development and research efforts. To enable others to continually update these results as Linux evolves, we define our experimental protocol and make our checkers and results available in a public archive.},
	author = {Palix, Nicolas and Thomas, Ga\"{e}l and Saha, Suman and Calv\`{e}s, Christophe and Lawall, Julia and Muller, Gilles},
	booktitle = {Proc. of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '11)},
	date-added = {2022-07-21 09:35:55 +0900},
	date-modified = {2022-07-21 09:36:27 +0900},
	pages = {305--318},
	title = {Faults in Linux: Ten Years Later},
	year = {2011}}

@inproceedings{MehrabEtAl-Kite,
	abstract = {Converged multi-level secure (MLS) systems, such as Qubes OS or SecureView, heavily rely on virtualization and service virtual machines (VMs). Traditionally, driver domains - isolated VMs that run device drivers - and daemon VMs use full-blown general-purpose OSs. It seems that specialized lightweight OSs, known as unikernels, would be a better fit for those. Surprisingly, to this day, driver domains can only be built from Linux. We discuss how unikernels can be beneficial in this context - they improve security and isolation, reduce memory overheads, and simplify software configuration and deployment. We specifically propose to use unikernels that borrow device drivers from existing general-purpose OSs.We present Kite which implements network and storage unikernel-based VMs and serve two essential classes of devices. We compare our approach against Linux using a number of typical micro- and macrobenchmarks used for networking and storage. Our approach achieves performance similar to that of Linux. However, we demonstrate that the number of system calls and ROP gadgets can be greatly reduced with our approach compared to Linux. We also demonstrate that our approach has resilience to an array of CVEs (e.g., CVE-2021-35039, CVE-2016-4963, and CVE-2013-2072), smaller image size, and improved startup time. Finally, unikernelizing is doable for the remaining (non-driver) service VMs as evidenced by our unikernelized DHCP server.},
	author = {Mehrab, A K M Fazla and Nikolaev, Ruslan and Ravindran, Binoy},
	booktitle = {Proc. of the Seventeenth European Conference on Computer Systems (EuroSys'22)},
	date-added = {2022-07-19 08:05:29 +0900},
	date-modified = {2022-07-19 08:05:58 +0900},
	pages = {384--401},
	title = {Kite: Lightweight Critical Service Domains},
	year = {2022}}

@inproceedings{LefeuvreEtAl-FlexOS,
	abstract = {At design time, modern operating systems are locked in a specific safety and isolation strategy that mixes one or more hardware/software protection mechanisms (e.g. user/kernel separation); revisiting these choices after deployment requires a major refactoring effort. This rigid approach shows its limits given the wide variety of modern applications' safety/performance requirements, when new hardware isolation mechanisms are rolled out, or when existing ones break. We present FlexOS, a novel OS allowing users to easily specialize the safety and isolation strategy of an OS at compilation/deployment time instead of design time. This modular LibOS is composed of fine-grained components that can be isolated via a range of hardware protection mechanisms with various data sharing strategies and additional software hardening. The OS ships with an exploration technique helping the user navigate the vast safety/performance design space it unlocks. We implement a prototype of the system and demonstrate, for several applications (Redis/Nginx/SQLite), FlexOS' vast configuration space as well as the efficiency of the exploration technique: we evaluate 80 FlexOS configurations for Redis and show how that space can be probabilistically subset to the 5 safest ones under a given performance budget. We also show that, under equivalent configurations, FlexOS performs similarly or better than existing solutions which use fixed safety configurations.},
	author = {Lefeuvre, Hugo and B\u{a}doiu, Vlad-Andrei and Jung, Alexander and Teodorescu, Stefan Lucian and Rauch, Sebastian and Huici, Felipe and Raiciu, Costin and Olivier, Pierre},
	booktitle = {Proc. of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS'22)},
	date-added = {2022-07-19 08:01:55 +0900},
	date-modified = {2022-07-19 08:02:42 +0900},
	pages = {467--482},
	title = {FlexOS: Towards Flexible OS Isolation},
	year = {2022}}

@inproceedings{OlivierEtAl-VEE19,
	abstract = {Unikernels are minimal single-purpose virtual machines. They are highly popular in the research domain due to the benefits they provide. A barrier to their widespread adoption is the difficulty/impossibility to port existing applications to current unikernels. HermiTux is the first unikernel providing binary-compatibility with Linux applications. It is composed of a hypervisor and lightweight kernel layer emulating OS interfaces at load- and runtime in accordance with the Linux ABI. HermiTux relieves application developers from the burden of porting software, while providing unikernel benefits such as security through hardware-assisted virtualized isolation, swift boot time, and low disk/memory footprint. Fast system calls and kernel modularity are enabled through binary rewriting and analysis techniques, as well as shared library substitution. Compared to other unikernels, HermiTux boots faster and has a lower memory/disk footprint. We demonstrate that over a range of native C/C++/Fortran/Python Linux applications, HermiTux performs similarly to Linux in most cases: its performance overhead averages 3% in memory- and compute-bound scenarios.},
	author = {Olivier, Pierre and Chiba, Daniel and Lankes, Stefan and Min, Changwoo and Ravindran, Binoy},
	booktitle = {Proc. of the 15th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE'19)},
	date-added = {2022-07-19 08:00:25 +0900},
	date-modified = {2022-07-19 08:00:59 +0900},
	pages = {59--73},
	title = {A Binary-Compatible Unikernel},
	year = {2019}}

@inproceedings{WilliamsEtAl-SoCC18,
	abstract = {System virtualization (e.g., the virtual machine abstraction) has been established as the de facto standard form of isolation in multi-tenant clouds. More recently, unikernels have emerged as a way to reuse VM isolation while also being lightweight by eliminating the general purpose OS (e.g., Linux) from the VM. Instead, unikernels directly run the application (linked with a library OS) on the virtual hardware. In this paper, we show that unikernels do not actually require a virtual hardware abstraction, but can achieve similar levels of isolation when running as processes by leveraging existing kernel system call whitelisting mechanisms. Moreover, we show that running unikernels as processes reduces hardware requirements, enables the use of standard process debugging and management tooling, and improves the already impressive performance that unikernels exhibit.},
	author = {Williams, Dan and Koller, Ricardo and Lucina, Martin and Prakash, Nikhil},
	booktitle = {Proc. of the ACM Symposium on Cloud Computing (SoCC'18)},
	date-added = {2022-07-19 07:40:05 +0900},
	date-modified = {2022-07-19 07:40:59 +0900},
	pages = {199--211},
	title = {Unikernels as Processes},
	year = {2018}}

@inproceedings{ShenEtAl-ASPLOS19,
	abstract = {"Cloud-native" container platforms, such as Kubernetes, have become an integral part of production cloud environments. One of the principles in designing cloud-native applications is called Single Concern Principle, which suggests that each container should handle a single responsibility well. In this paper, we propose X-Containers as a new security paradigm for isolating single-concerned cloud-native containers. Each container is run with a Library OS (LibOS) that supports multi-processing for concurrency and compatibility. A minimal exokernel ensures strong isolation with small kernel attack surface. We show an implementation of the X-Containers architecture that leverages Xen paravirtualization (PV) to turn Linux kernel into a LibOS. Doing so results in a highly efficient LibOS platform that does not require hardware-assisted virtualization, improves inter-container isolation, and supports binary compatibility and multi-processing. By eliminating some security barriers such as seccomp and Meltdown patch, X-Containers have up to 27X higher raw system call throughput compared to Docker containers, while also achieving competitive or superior performance on various benchmarks compared to recent container platforms such as Google's gVisor and Intel's Clear Containers.},
	author = {Shen, Zhiming and Sun, Zhen and Sela, Gur-Eyal and Bagdasaryan, Eugene and Delimitrou, Christina and Van Renesse, Robbert and Weatherspoon, Hakim},
	booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
	date-added = {2022-07-19 07:38:44 +0900},
	date-modified = {2022-07-19 07:39:08 +0900},
	pages = {121--135},
	title = {X-Containers: Breaking Down Barriers to Improve Performance and Isolation of Cloud-Native Containers},
	year = {2019}}

@inproceedings{ZhangEtAl-Kylinx,
	author = {Yiming Zhang and Jon Crowcroft and Dongsheng Li and Chengfen Zhang and Huiba Li and Yaozheng Wang and Kai Yu and Yongqiang Xiong and Guihai Chen},
	booktitle = {Proc. of the 2018 USENIX Annual Technical Conference (USENIX ATC '18)},
	date-added = {2022-07-19 07:36:40 +0900},
	date-modified = {2022-07-19 07:37:07 +0900},
	pages = {173--186},
	title = {{KylinX}: A Dynamic Library Operating System for Simplified and Efficient Cloud Virtualization},
	year = {2018}}

@inproceedings{MartinsEtAl-NSDI14,
	author = {Joao Martins and Mohamed Ahmed and Costin Raiciu and Vladimir Olteanu and Michio Honda and Roberto Bifulco and Felipe Huici},
	booktitle = {Proc. of the 11th USENIX Symposium on Networked Systems Design and Implementation (NSDI 14)},
	date-added = {2022-07-19 07:30:38 +0900},
	date-modified = {2022-07-19 07:31:24 +0900},
	pages = {459--473},
	title = {{ClickOS} and the Art of Network Function Virtualization},
	year = {2014}}

@inproceedings{KuenzerEtAl-SYSTOR19,
	abstract = {Recent research has shown that unikernels, lightweight virtual machines tailored to specific applications, have great potential in terms of performance, tiny boot times, small memory consumption, and a reduced trusted compute base. Creating and optimizing them, however, is currently a painful, time-consuming process that often needs redoing for every application. With Unikraft, we introduce a system for automatically building unikernels that drastically reduces this time without negatively impacting performance.},
	author = {Kuenzer, S. and Santhanam, S. and Volchkov, Y. and Schmidt, F. and Huici, F. and Nider, Joel and Rapoport, Mike and Lupu, Costin},
	booktitle = {Proc. of the 12th ACM International Conference on Systems and Storage (SYSTOR'19)},
	date-added = {2022-07-19 07:29:13 +0900},
	date-modified = {2022-07-19 07:29:47 +0900},
	pages = {195},
	title = {Unleashing the Power of Unikernels with Unikraft},
	year = {2019}}

@inproceedings{MadhavepeddyEtAl-Jitsu,
	author = {Anil Madhavapeddy and Thomas Leonard and Magnus Skjegstad and Thomas Gazagnaire and David Sheets and Dave Scott and Richard Mortier and Amir Chaudhry and Balraj Singh and Jon Ludlam and Jon Crowcroft and Ian Leslie},
	booktitle = {12th USENIX Symposium on Networked Systems Design and Implementation (NSDI '15)},
	date-added = {2022-07-19 07:20:57 +0900},
	date-modified = {2022-07-19 07:21:34 +0900},
	pages = {559--573},
	title = {Jitsu: {Just-In-Time} Summoning of Unikernels},
	year = {2015}}

@inproceedings{SartakovEtAl-ASPLOS21,
	abstract = {Library OSs have been proposed to deploy applications isolated inside containers, VMs, or trusted execution environments. They often follow a highly modular design in which third-party components are combined to offer the OS functionality needed by an application, and they are customised at compilation and deployment time to fit application requirements. Yet their monolithic design lacks isolation across components: when applications and OS components contain security-sensitive data (e.g., cryptographic keys or user data), the lack of isolation renders library OSs open to security breaches via malicious or vulnerable third-party components. We describe CubicleOS, a library OS that isolates components in the system while maintaining the simple, monolithic development approach of library composition. CubicleOS allows isolated components, called cubicles , to share data dynamically with other components. It provides spatial memory isolation at the granularity of function calls by using Intel MPK at user-level to isolate components. At the same time, it supports zero-copy data access across cubicles with feature-rich OS functionality. Our evaluation shows that CubicleOS introduces moderate end-to-end performance overheads in complex applications: 2\texttimes{} for the I/O-intensive NGINX web server with 8&nbsp;partitions, and 1.7--8\texttimes{} for the SQLite database engine with 7&nbsp;partitions.},
	author = {Sartakov, Vasily A. and Vilanova, Llu\'{\i}s and Pietzuch, Peter},
	booktitle = {Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS'21)},
	date-added = {2022-07-17 09:48:36 +0900},
	date-modified = {2022-07-17 09:49:25 +0900},
	pages = {546--558},
	title = {CubicleOS: A Library OS with Software Componentisation for Practical Isolation},
	year = {2021}}

@article{KanteeEtAl-rumprun,
	author = {Antti Kantee and Justin Cormack},
	date-added = {2022-07-17 09:37:55 +0900},
	date-modified = {2022-07-17 09:40:22 +0900},
	journal = {USENIX; login: magazine},
	number = {5},
	pages = {11-17},
	title = {Rump Kernels No OS? No Problem!},
	volume = {39},
	year = {2014}}

@inproceedings{KivityEtAl-OSv,
	author = {Avi Kivity and Dor Laor and Glauber Costa and Pekka Enberg and Nadav Har{\textquoteright}El and Don Marti and Vlad Zolotarov},
	booktitle = {2014 USENIX Annual Technical Conference (USENIX ATC '14)},
	date-added = {2022-07-17 09:36:13 +0900},
	date-modified = {2022-07-17 09:36:45 +0900},
	pages = {61--72},
	title = {{OSv{\textemdash}Optimizing} the Operating System for Virtual Machines},
	year = {2014}}

@inproceedings{MadhavapeddyEtAl-Unikernel,
	abstract = {We present unikernels, a new approach to deploying cloud services via applications written in high-level source code. Unikernels are single-purpose appliances that are compile-time specialised into standalone kernels, and sealed against modification when deployed to a cloud platform. In return they offer significant reduction in image sizes, improved efficiency and security, and should reduce operational costs. Our Mirage prototype compiles OCaml code into unikernels that run on commodity clouds and offer an order of magnitude reduction in code size without significant performance penalty. The architecture combines static type-safety with a single address-space layout that can be made immutable via a hypervisor extension. Mirage contributes a suite of type-safe protocol libraries, and our results demonstrate that the hypervisor is a platform that overcomes the hardware compatibility issues that have made past library operating systems impractical to deploy in the real-world.},
	author = {Madhavapeddy, Anil and Mortier, Richard and Rotsos, Charalampos and Scott, David and Singh, Balraj and Gazagnaire, Thomas and Smith, Steven and Hand, Steven and Crowcroft, Jon},
	booktitle = {Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
	date-added = {2022-07-17 09:34:55 +0900},
	date-modified = {2022-07-17 09:35:35 +0900},
	pages = {461--472},
	title = {Unikernels: Library Operating Systems for the Cloud},
	year = {2013}}

@inproceedings{KuenzerEtAl-Unikraft,
	abstract = {Unikernels are famous for providing excellent performance in terms of boot times, throughput and memory consumption, to name a few metrics. However, they are infamous for making it hard and extremely time consuming to extract such performance, and for needing significant engineering effort in order to port applications to them. We introduce Unikraft, a novel micro-library OS that (1) fully modularizes OS primitives so that it is easy to customize the unikernel and include only relevant components and (2) exposes a set of composable, performance-oriented APIs in order to make it easy for developers to obtain high performance.Our evaluation using off-the-shelf applications such as nginx, SQLite, and Redis shows that running them on Unikraft results in a 1.7x-2.7x performance improvement compared to Linux guests. In addition, Unikraft images for these apps are around 1MB, require less than 10MB of RAM to run, and boot in around 1ms on top of the VMM time (total boot time 3ms-40ms). Unikraft is a Linux Foundation open source project and can be found at www.unikraft.org.},
	author = {Kuenzer, Simon and B\u{a}doiu, Vlad-Andrei and Lefeuvre, Hugo and Santhanam, Sharan and Jung, Alexander and Gain, Gaulthier and Soldani, Cyril and Lupu, Costin and Teodorescu, \c{S}tefan and R\u{a}ducanu, Costi and Banu, Cristian and Mathy, Laurent and Deaconescu, R\u{a}zvan and Raiciu, Costin and Huici, Felipe},
	booktitle = {Proc. of the Sixteenth European Conference on Computer Systems (EuroSys '21)},
	date-added = {2022-07-17 09:33:20 +0900},
	date-modified = {2022-07-17 09:34:12 +0900},
	pages = {376--394},
	title = {Unikraft: Fast, Specialized Unikernels the Easy Way},
	year = {2021}}

@inproceedings{LeEtAl-VEE11,
	author = {Le, Michael and Tamir, Yuval},
	booktitle = {7th ACM Int'l Conf. on Virtual Execution Environments (VEE'11)},
	date-added = {2022-07-17 07:55:38 +0900},
	date-modified = {2022-07-17 07:55:38 +0900},
	pages = {63--74},
	title = {ReHype: Enabling VM Survival Across Hypervisor Failures},
	year = {2011}}

@inproceedings{BovenziEtAl-ISSRE13,
	author = {Bovenzi, Antonio and Alonso, Javier and Yamada, Hiroshi and Russo, Stefano and Trivedi, Kishor S},
	booktitle = {2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE)},
	date-added = {2022-07-17 07:55:21 +0900},
	date-modified = {2022-07-17 07:55:21 +0900},
	organization = {IEEE},
	pages = {61--70},
	title = {Towards fast OS rejuvenation: An experimental evaluation of fast OS reboot techniques},
	year = {2013}}

@inproceedings{KouraiEtAl-Roothammer,
	author = {Kourai, Kenichi and Chiba, Shigeru},
	booktitle = {37th annual IEEE/IFIP international conference on dependable systems and networks (DSN'07)},
	date-added = {2022-07-17 07:54:54 +0900},
	date-modified = {2022-07-17 07:54:54 +0900},
	organization = {IEEE},
	pages = {245--255},
	title = {A fast rejuvenation technique for server consolidation with virtual machines},
	year = {2007}}

@article{KouraiEtAl-TDSC,
	author = {Kourai, Kenichi and Chiba, Shigeru},
	date-added = {2022-07-17 07:54:54 +0900},
	date-modified = {2022-07-17 07:54:54 +0900},
	journal = {IEEE Transactions on Dependable and Secure Computing (TDSC)},
	number = {6},
	pages = {839--851},
	publisher = {IEEE},
	title = {Fast Software Rejuvenation of Virtual Machine Monitors},
	volume = {8},
	year = {2010}}

@inproceedings{KouraiEtAl-cachemind,
	author = {Kourai, Kenichi},
	booktitle = {2010 International Conference on Dependable Systems and Networks Workshops (DSN-W)},
	date-added = {2022-07-17 07:54:54 +0900},
	date-modified = {2022-07-17 07:54:54 +0900},
	organization = {IEEE},
	pages = {86--92},
	title = {Cachemind: Fast performance recovery using a virtual machine monitor},
	year = {2010}}

@article{CotroneoEtAl-Surv14,
	abstract = {Software aging is a phenomenon plaguing many long-running complex software systems, which exhibit performance degradation or an increasing failure rate. Several strategies based on the proactive rejuvenation of the software state have been proposed to counteract software aging and prevent failures. This survey article provides an overview of studies on Software Aging and Rejuvenation (SAR) that have appeared in major journals and conference proceedings, with respect to the statistical approaches that have been used to forecast software aging phenomena and to plan rejuvenation, the kind of systems and aging effects that have been studied, and the techniques that have been proposed to rejuvenate complex software systems. The analysis is useful to identify key results from SAR research, and it is leveraged in this article to highlight trends and open issues.},
	articleno = {8},
	author = {Cotroneo, Domenico and Natella, Roberto and Pietrantuono, Roberto and Russo, Stefano},
	date-added = {2022-07-17 07:51:45 +0900},
	date-modified = {2022-07-17 07:52:38 +0900},
	journal = {J. Emerg. Technol. Comput. Syst.},
	month = {jan},
	number = {1},
	numpages = {34},
	title = {A Survey of Software Aging and Rejuvenation Studies},
	volume = {10},
	year = {2014}}

@inproceedings{CotroneoEtAl-rejuvenation-survey,
	author = {Cotroneo, Domenico and Natella, Roberto and Pietrantuono, Roberto and Russo, Stefano},
	booktitle = {2011 IEEE Third International Workshop on Software Aging and Rejuvenation},
	date-added = {2022-07-17 07:50:42 +0900},
	date-modified = {2022-07-17 07:50:52 +0900},
	organization = {IEEE},
	pages = {1--6},
	title = {Software Aging and Rejuvenation: Where we are and where we are going},
	year = {2011}}

@inproceedings{HuangEtAl-rejuvenation,
	author = {Huang, Yennun and Kintala, Chandra and Kolettis, Nick and Fulton, N Dudley},
	booktitle = {Proceedings of the IEEE 25th Int'l Symp. on Fault-Tolerant Computing (FTCS '95)},
	date-added = {2022-07-17 07:48:46 +0900},
	date-modified = {2022-07-17 07:50:34 +0900},
	pages = {381--390},
	title = {Software Rejuvenation: Analysis, Module and Applications},
	year = {1995}}

@inproceedings{CandeaEtAl-Microreboot,
	author = {Candea, George and Kawamoto, Shinichi and Fujiki, Yuichi and Friedman, Greg and Fox, Armando},
	booktitle = {USENIX Association OSDI '04: 6th Symposium on Operating Systems Design and Implementation},
	date-added = {2022-07-17 07:48:26 +0900},
	date-modified = {2022-07-17 07:56:36 +0900},
	pages = {31--44},
	title = {Microreboot--a Technique for Cheap Recovery},
	year = {2004}}

@article{JumonjiEtAl-IEICE2021,
	author = {Yuto Jumonji and Hiroshi Yamada},
	date-added = {2022-07-177:43:34 +0900},
	date-modified = {2022-07-17 07:44:46 +0900},
	journal = {IEICE Trans. on Information and Systems},
	number = {12},
	pages = {2164-2172},
	title = {Efficent Reboot-Based Recovery of In-Memory Databases},
	volume = {E104.D},
	year = {2021}}

@inproceedings{JumonjiEtAl-WoSAR17,
	author = {Jumonji, Yuto and Yamada, Hiroshi},
	booktitle = {2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
	date-added = {2022-07-17 07:42:42 +0900},
	date-modified = {2022-07-17 07:42:42 +0900},
	organization = {IEEE},
	pages = {280--285},
	title = {Efficient Software Rejuvenation of In-memory Key-Value Storages},
	year = {2017}}



@misc{Issues-Unikraft,
	author = {{{Unikraft}}},
	note = {{\url{https://github.com/unikraft/unikraft/issues}}},
	title = {{{Issues ･ unikraft/unikraft}}}}


@misc{Unikraft-memleak,
	author = {{{Unikraft}}},
	note = {{\url{https://github.com/unikraft/unikraft/issues/689}}},
	title = {{{lib/ukallocbbuddy: fix a memory leak}}}}


@misc{Issues-OSv,
	author = {{{Cloudius Systems}}},
	note = {{\url{https://github.com/cloudius-systems/osv/issues}}},
	title = {{{Issues ･ cloudius-systems/osv}}}}


@misc{Issues-Mirage,
	author = {{{MirageOS}}},
	note = {{\url{https://github.com/cloudius-systems/mirage/issues}}},
	title = {{{Issues ･ mirage/mirage}}}}

@misc{Mirage-memleak,
	author = {{{MirageOS}}},
	note = {{\url{https://github.com/cloudius-systems/mirage/issues/406}}},
	title = {{{unikernels generated with mirage-seal run out of memory after a relatively small number of requests}}}}


@misc{hyper-v,
	author = {{{Microsoft}}},
	date-added = {2022-05-29 13:55:29 +0900},
	date-modified = {2022-05-29 13:55:29 +0900},
	note = {{\url{https://www.microsoft.com/en-us/server-cloud/solutions/virtualization.aspx}}},
	title = {{{Windows Server Hyper-V}}}}

@misc{vmware-esxi,
	author = {{VMware Inc.}},
	date-added = {2022-05-29 13:55:14 +0900},
	date-modified = {2022-05-29 13:55:14 +0900},
	note = {{\url{http://http://www.vmware.com/products/vsphere}}},
	title = {{{VMware vSphere ESXi}}}}

@misc{Oracle-VBox,
	author = {{ORACLE}},
	date-added = {2022-05-29 13:54:55 +0900},
	date-modified = {2022-05-29 13:54:55 +0900},
	note = {{\url{http://www.virualbox.org}}},
	title = {VirtualBox},
	year = {2007}}

@inproceedings{KivityEtAl-kvm,
	author = {Avi Kivity and Yaniv Kamay and Dor Laor and Uri Lublin and Anthony Liguori},
	booktitle = {{Proc. of the Linux Symposium}},
	date-added = {2022-05-29 13:54:40 +0900},
	date-modified = {2022-05-29 13:54:40 +0900},
	pages = {225--230},
	title = {{kvm: the Linux Virtual Machine Monitor}},
	year = {2007}}

@inproceedings{WangEtAl-VEE15,
	author = {Hui Wang and Canturk Isci and Lavanya Subramanian and Jongmoo Choi and Depei Qian and Onur Mutlu},
	booktitle = {{Proc. of the 11th ACM International Conference on Virtual Execution Environments (VEE '15)}},
	date-added = {2022-05-29 13:52:39 +0900},
	date-modified = {2022-05-29 13:52:39 +0900},
	pages = {93--106},
	title = {{A-DRM: Architecture-aware Distributed Resource Management of Virtualized Clusters}},
	year = {2015}}

@inproceedings{WangEtAl-INFOCOM11,
	author = {Meng Wang and Xiaoqiao Meng and Li Zhang},
	booktitle = {{Proc. of the 30th IEEE International Conference on Computer Communications (INFOCOM '11)}},
	date-added = {2022-05-29 13:52:05 +0900},
	date-modified = {2022-05-29 13:52:05 +0900},
	pages = {71 -75},
	title = {{Consolidating virtual machines with dynamic bandwidth demand in data centers}},
	year = {2011}}

@inproceedings{MengEtAl-INFOCOM10,
	author = {Xiaoqiao Meng and Pappas, V. and Li Zhang},
	booktitle = {{Proc. of the 29th IEEE International Conference on Computer Communications (INFOCOM '10)}},
	date-added = {2022-05-29 13:52:05 +0900},
	date-modified = {2022-05-29 13:52:05 +0900},
	memo = {month = {march}, volume = {}, number = {}, keywords = {data center network architecture;data center network characteristics;network scalability;routing protocols;traffic patterns;traffic-aware virtual machine placement;two-tier approximate algorithm;computer centres;routing protocols;virtual machines;}, doi = {10.1109/INFCOM.2010.5461930}, ISSN = {0743-166X},},
	pages = {1 -9},
	title = {{Improving the Scalability of Data Center Networks with Traffic-aware Virtual Machine Placement}},
	year = {2010}}

@misc{AmazonRDS,
	author = {{Amazon Web Services}},
	date-added = {2022-05-29 13:40:55 +0900},
	date-modified = {2022-05-29 13:40:55 +0900},
	note = {\url{https://aws.amazon.com/rds/}},
	title = {{Amazon Relational Database Service (Amazon RDS)}}}

@inproceedings{FernandoEtAl-INFOCOM20,
	author = {Fernando, Dinuni and Yang, Ping and Lu, Hui},
	booktitle = {IEEE INFOCOM 2020 - IEEE Conference on Computer Communications},
	date-added = {2022-05-29 09:59:44 +0900},
	date-modified = {2022-05-29 09:59:44 +0900},
	pages = {1818-1827},
	title = {SDN-based Order-aware Live Migration of Virtual Machines},
	year = {2020}}

@inproceedings{LiEtAl-INFOCOM17,
	author = {Li, Chunguang and Feng, Dan and Hua, Yu and Xia, Wen and Qin, Leihua and Huang, Yue and Zhou, Yukun},
	booktitle = {IEEE INFOCOM 2017 - IEEE Conference on Computer Communications},
	date-added = {2022-05-29 09:56:37 +0900},
	date-modified = {2022-05-29 09:58:06 +0900},
	pages = {1-9},
	title = {BAC: Bandwidth-aware compression for efficient live migration of virtual machines},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/INFOCOM.2017.8056950}}

@inproceedings{CuiEtAl-VEE13,
	author = {Lei Cui and Jianxin Li and Bo Li,Jinpeng Huai and Chunming Hu and Tianyu Wo and Hussain Al-Aqrabi and Lu Liu},
	booktitle = {Proc. of the 9th ACM International Conference on Virtual Execution Environments (VEE '13)},
	date-added = {2022-05-29 09:48:37 +0900},
	date-modified = {2022-05-29 09:48:37 +0900},
	pages = {63--72},
	title = {{VMScatter: Migrate Virtual Machines to Many Hosts}},
	year = {2013}}

@inproceedings{HermenierEtAl-Entropy,
	author = {Fabien Hermenier and Xavier Lorca and Jean-Marc Menaud and Gilles Muller and Julia Lawall},
	booktitle = {{Proc. of the 5th ACM International Conference on Virtual Execution Environments (VEE '09)}},
	date-added = {2022-05-29 09:46:09 +0900},
	date-modified = {2022-05-29 09:46:09 +0900},
	pages = {41--50},
	title = {{Entropy: a Consolidation Manager for Clusters}},
	year = {2009}}

@inproceedings{GovindanEtAl-ASPLOS12,
	author = {Sriram Govindan and Di Wang and Anand Sivasubramaniam and Bhuvan Urgaonkar},
	booktitle = {{Proc. of the 17th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '12)}},
	date-added = {2022-05-29 09:39:13 +0900},
	date-modified = {2022-05-29 09:39:13 +0900},
	pages = {75--86},
	title = {{Leveraging Stored Energy for Handling Power Emergencies in Aggressively Provisioned Datacenters}},
	year = {2012}}

@inproceedings{KleinEtAl-SeL409,
	abstract = {Complete formal verification is the only known way to guarantee that a system is free of programming errors.We present our experience in performing the formal, machine-checked verification of the seL4 microkernel from an abstract specification down to its C implementation. We assume correctness of compiler, assembly code, and hardware, and we used a unique design approach that fuses formal and operating systems techniques. To our knowledge, this is the first formal proof of functional correctness of a complete, general-purpose operating-system kernel. Functional correctness means here that the implementation always strictly follows our high-level abstract specification of kernel behaviour. This encompasses traditional design and implementation safety properties such as the kernel will never crash, and it will never perform an unsafe operation. It also proves much more: we can predict precisely how the kernel will behave in every possible situation.seL4, a third-generation microkernel of L4 provenance, comprises 8,700 lines of C code and 600 lines of assembler. Its performance is comparable to other high-performance L4 kernels.},
	author = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
	booktitle = {Proc. of the ACM SIGOPS 22nd Symposium on Operating Systems Principles (SOSP '09)},
	date-added = {2022-05-25 09:39:19 +0900},
	date-modified = {2022-05-25 09:40:04 +0900},
	pages = {207--220},
	title = {SeL4: Formal Verification of an OS Kernel},
	year = {2009}}

@misc{EC2,
	date-added = {2022-05-24 10:33:48 +0900},
	date-modified = {2022-05-24 10:33:48 +0900},
	note = {\url{http://aws.amazon.com/ec2/}},
	title = {{Amazon Elastic Compute Cloud}}}

@misc{xv6,
	author = {Frans Kaashoek and Robert Morris and Russ Cox},
	date-added = {2022-05-24 10:15:25 +0900},
	date-modified = {2022-05-24 10:19:01 +0900},
	note = {\url{https://github.com/mit-pdos/xv6-riscv}},
	title = {Xv6},
	year = {2006}}

@misc{yahoo-container,
	author = {Yukinori Sakashita},
	date-added = {2022-05-24 10:08:40 +0900},
	date-modified = {2022-05-24 10:12:33 +0900},
	note = {\url{https://www.ipsj.or.jp/dp/contents/publication/47/S1203-S03.html}},
	title = {{The Design and Operation of Large-scale Container with Multi-Container Orchestration}},
	year = {2021}}

@inproceedings{RuprechtEtAl-VEE18,
	author = {Ruprecht, Adam and Jones, Danny and Shiraev, Dmitry and Harmon, Greg and Spivak, Maya and Krebs, Michael and Baker-Harvey, Miche and Sanderson, Tyler},
	booktitle = {{Proc. of the 14th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '18)}},
	date-added = {2022-05-21 08:40:05 +0900},
	date-modified = {2022-05-21 08:40:05 +0900},
	pages = {45--56},
	title = {{VM Live Migration At Scale}},
	year = {2018}}

@inproceedings{XuEtAl-VEE16,
	author = {Xin Xu and Bhavesh Davda},
	booktitle = {{Proc. of the12th ACM International Conference on Virtual Execution Environments (VEE '16)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {65--77},
	title = {{SRVM: Hypervisor Support for Live Migration with Passthrough SR-IOV Network Devices}},
	year = {2016}}

@inproceedings{NathanEtAl-VEE16,
	author = {Senthil Nathan and Umesh Bellur and Purushottam Kulkarni},
	booktitle = {{Proc. of the12th ACM International Conference on Virtual Execution Environments(VEE '16)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {37--49},
	title = {{On Selecting the Right Optimizations for Virtual Machine Migration}},
	year = {2016}}

@inproceedings{MishimaEtAl-Madeus,
	author = {Takeshi Mishima and Yasuhiro Fujiwara},
	booktitle = {{Proc. of the 2015 ACM International Conference on Magement of Data (SIGMOD '15)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {315--329},
	title = {{Madeus: Database Live Migration Middleware Under Heavy Workload for Cloud Environment}},
	year = {2015}}

@inproceedings{KouraiEtAl-APSys2015,
	author = {Kenichi Kourai and Hiroki Ooba},
	booktitle = {{Proc. of the 6th ACM Asia-Pacific Workshop on Systems (APSys '15)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {7:1--7:8},
	title = {{Zero-copy Migration for Lightweight Software Rejuvenation of Virtualized Systems}},
	year = {2015}}

@inproceedings{HouEtAl-EuroSys2015,
	author = {Kai-Yuan Hou and Kang Shin and Jan-Lung Sung},
	booktitle = {{Proc. of the 10th ACM SIGOPS European Conf. on Computer Systems (EuroSys '15)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {15:1--15:15},
	title = {{Application-assisted Live Migration of Virtual Machines with Java Applications}},
	year = {2015}}

@inproceedings{ZhengEtAl-VEE14,
	author = {Zheng, Jie and Ng, Tze Sing Eugene and Sripanidkulchai, Kunwadee and Liu, Zhaolei},
	booktitle = {{Proc. of the 10th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '14)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {153--164},
	title = {{COMMA: Coordinating the Migration of Multi-tier Applications}},
	year = {2014}}

@article{XuEtAl-iAware,
	author = {Fei Xu and Fangming Liu and Linghui Liu and Hai Jin and Bo Li and Baochun Li},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	journal = {IEEE Transactions on Computers},
	number = {12},
	pages = {3012--3025},
	title = {{iAware: Making Live Migration of Virtual Machines Interference-Aware in the Cloud}},
	volume = {63},
	year = {2014}}

@inproceedings{NaoiEtAl-GMigrate,
	author = {Yoshiki Naoi and Hiroshi Yamada},
	booktitle = {{Poster Session at the ACM Symposium on Cloud Computing (SoCC '14)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	title = {A GPU-Accelerated VM Live Migration for Big Memory Workloads},
	year = {2014}}

@article{MedinaEtAl-SURVEY14,
	author = {Medina, Violeta and Garc\'{\i}a, Juan Manuel},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	journal = {{ACM Computing Survey}},
	number = {3},
	pages = {30:1--30:33},
	title = {{A Survey of Migration Mechanisms of Virtual Machines}},
	volume = {46},
	year = {2014}}

@inproceedings{MashtizadehEtAl-ATC14,
	author = {Ali Jos{\'e} Mashtizadeh and Min Cai and Gabriel Tarasuk-Levin and Ricardo Koller and Tal Garfinkel and Sreekanth Setty},
	booktitle = {{Proc. of the 2014 USENIX Conference on Annual Technical Conference (USENIX ATC '14)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {97--108},
	title = {{XvMotion: Unified Virtual Machine Migration over Long Distance}},
	year = {2014}}

@inproceedings{KotoEtAl-CloudCom14,
	author = {Akane Koto and Kenji Kono and Hiroshi Yamada},
	booktitle = {{Proc. of the 2014 IEEE 6th International Conference on Cloud Computing Technology and Science (CloudCom14)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {226--233},
	title = {{A Guidline for Selecting Live Migration Policies and Implementations in Clouds}},
	year = {2014}}

@inproceedings{GhorbaniEtAl-SoCC14,
	author = {Soudeh Ghorbani and Cole Schlesinger and Matthew Monaco and Eric Keller and Matthew Caesar and Jennifer Rexford and David Walker},
	booktitle = {{Proc. of the ACM Symposium on Cloud Computing (SoCC '14)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {3:1--3:14},
	title = {{Transparent, Live Migration of a Software-Defined Network}},
	year = {2014}}

@inproceedings{ZhouEtAl-VEE13,
	author = {Ruijin Zhou and Fang Liu and Chao Li and Tao Li},
	booktitle = {{Proceedings of the 9th ACM International Conference on Virtual Execution Environments (VEE '13)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {73--84},
	title = {{Optimizing Virtual Machine Live Storage Migration in Heterogeneous Storage Environment}},
	year = {2013}}

@inproceedings{SongEtAl-VEE13,
	author = {Xiang Song and Jicheng Shi and Ran Liu and Jian Yang and Haibo Chen},
	booktitle = {Proc. of the 9th ACM International Conference on Virtual Execution Environments (VEE '13)},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {85-96},
	title = {{Parallelizing Live Migration of Virtual Machines}},
	year = {2013}}

@inproceedings{RaiEtAl-ATC13,
	author = {Anshul Rai and Ramachandran Ramjee and Ashok Anand and Venkata N. Padmanabhan and George Varghese},
	booktitle = {Proc. of the 2013 USENIX Conference on Annual Technical Conference (USENIX ATC '13)},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {25-36},
	title = {{MiG: Efficient Migration of Desktop VMs Using Semantic Compression}},
	year = {2013}}

@inproceedings{LuEtAl-SYSTOR13,
	author = {Peng Lu and Antonio Barbalace and Binoy Ravindran},
	booktitle = {{Proc. of the 6th International Systems and Storage Conference (SYSTOR '13)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {2:1--2:11},
	title = {{HSG-LM: Hybrid-Copy Speculative Guest OS Live Migration without Hypervisor}},
	year = {2013}}

@inproceedings{JoEtAl-VEE13,
	author = {Changyeon Jo and Erik Gustafsson and Jeongseok Son and Bernhard Egger},
	booktitle = {{Proc. of the 9th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '13)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {41--50},
	title = {{Efficient Live Migration of Virtual Machines Using Shared Storage}},
	year = {2013}}

@inproceedings{ChiangEtAl-VEE13,
	author = {Jui-Hao Chiang and Han-Lin Li and Tzi-cker Chiueh},
	booktitle = {Proc. of the 9th ACM International Conference on Virtual Execution Environments (VEE '13)},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {51-62},
	title = {{Introspection-based Memory De-duplication and Migration}},
	year = {2013}}

@inproceedings{PanEtAl-VEE12,
	author = {Zhenhao Pan and Yaozu Dong and Yu Chen and Lei Zhang and Zhijiao Zhang},
	booktitle = {{Proc. of the 8th ACM International Conference on Virtual Execution Environments (VEE '12)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {109--120},
	title = {{CompSC: Live Migration with Pass-through Devices}},
	year = {2012}}

@inproceedings{KotoEtAl-APSys,
	author = {Akane Koto and Hiroshi Yamada and Kei Ohmura and Kenji Kono},
	booktitle = {{Proc. of the 3rd ACM Asia-Pacific Conference on Systems (APSys '12)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {7:1--7:6},
	title = {{Towards Unobtrusive VM Live Migration for Cloud Computing Platforms}},
	year = {2012}}

@inproceedings{BilaEtAl-Jettison,
	author = {Nilton Bila and Eyal de Lara and Kaustubh Joshi and H.~Andr\'{e}s Lagar-Cavilla and Matti Hiltunen and Mahadev Satyanarayanan},
	booktitle = {{Proc. of the 7th ACM European Conference on Computer Systems (EuroSys '12)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {211--224},
	title = {{Jettison: Efficient Idle Desktop Consolidation with Partial Migration}},
	year = {2012}}

@inproceedings{BarkerEtAl-EDBT12,
	author = {Barker, Sean and Chi, Yun and Moon, Hyun Jin and Hacig\"{u}m\"{u}\c{s}, Hakan and Shenoy, Prashant},
	booktitle = {{Proc. of the 15th International Conference on Extending Database Technology (EDBT '12)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {432--443},
	title = {{"Cut Me Some Slack": Latency-aware Live Migration for Databases}},
	year = {2012}}

@inproceedings{LimEtAl-HotCloud11,
	author = {Seung-Hwan Lim and Jae-Seok Huh and Youngjae Kim and Chita R.~Das},
	booktitle = {{Proc. of the 3rd USENIX Workshop on Hot Topics in Cloud Computing (HotCloud '11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	month = {Jun.},
	pages = {5 pages},
	title = {{Migration, Assignment, and Scheduling of Jobs in Virtualized Environment}},
	year = {2011}}

@inproceedings{BreitgandEtAl-hotice11,
	author = {David Breitgand and Gilad Kutiel and Danny Raz},
	booktitle = {{Proceedings of Workshop on Hot Topics in Management of Internet, Cloud, and Enterprise Networks and Services (HotICE '11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	month = {Mar.},
	title = {{Cost-Aware Live Migration of Services in the Cloud}},
	year = {2011}}

@inproceedings{ZhengEtAl-VEE11,
	author = {Jie Zheng and Tze Sing Eugene Ng and Kunwadee Sripanidkulchai},
	booktitle = {{Proceedings of the 7th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {133--144},
	title = {{Workload-aware Live Storage Migration for Clouds}},
	year = {2011}}

@inproceedings{WoodEtAl-VEE11,
	author = {Timothy Wood and K. K. Ramakrishnan and Prashant Shenoy and Jacobus van der Merwe},
	booktitle = {{Proc. of the 7th ACM International Conference on Virtual Execution Environments (VEE'11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {121-132},
	title = {{CloudNet: Dynamic Pooling of Cloud Resources by Live WAN Migration of Virtual Machines}},
	year = {2011}}

@inproceedings{SvardEtAl-VEE11,
	author = {Petter Sv\"{a}ard and Benoit Hudzia and Johan Tordsson and Erik Elmroth},
	booktitle = {{Proc. of the 7th ACM International Conference on Virtual Excution Environments (VEE '11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {111--120},
	title = {{Evaluation of Delta Compression Techniques for Efficient Live Migration of Large Virtual Machines}},
	year = {2011}}

@inproceedings{MashtizadehEtAl-ATC11,
	author = {Ali Mashtizadeh and Emr{\'e} and Tal Garfinkel and Min Cai},
	booktitle = {{Proc. of the 2011 USENIX Conference on USENIX Annual Technical Conference (USENIX ATC'11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {187--200},
	title = {{The Design and Evolution of Live Storage Migration in VMware ESX}},
	year = {2011}}

@article{HirofuchiEtAl-Yabusame,
	author = {Takahiro Hirofuchi and Isaku Yamahata},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	journal = {KVM Forum 2011},
	title = {{Yabusame: Postcopy Live Migration for Qemu/KVM}},
	year = {2011}}

@article{DasEtAl-VLDB11,
	author = {Das, Sudipto and Nishimura, Shoji and Agrawal, Divyakant and El Abbadi, Amr},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	journal = {{Proc. of the VLDB Endowment}},
	number = {8},
	pages = {494--505},
	title = {{Albatross: Lightweight Elasticity in Shared Storage Databases for the Cloud using Live Data Migration}},
	volume = {4},
	year = {2011}}

@inproceedings{AaronEtAl-Zephyr,
	author = {Aaron J.~Elmore and Sudipto Das and Divyakant Agrawal and Amr El Abbadi},
	booktitle = {{Proc. of the 2011 ACM International Conference on Management of Data (SIGMOD '11)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {301--312},
	title = {{Zephyr: Live Migration in Shared Nothing Databases for Elastic Cloud Platforms}},
	year = {2011}}

@inproceedings{BilaEtAl-PartialMigration,
	author = {Nilton Bila and Eyal de Lara and Matti Hiltunen and Kaustubh Joshi and H.~Andr\'{e}s Lagar-Cavilla and M. Satyanarayanan},
	booktitle = {{Proc. of the 2nd USENIX Workshop on Hot Topics in Cloud Computing (HotCloud '10)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	month = {Jun.},
	title = {{The Case for Energy-Oriented Partial Desktop Migration}},
	year = {2010}}

@inproceedings{ZhangEtAl-CLUSTER10,
	author = {Xiang Zhang and Zhigang Huo and Jie Ma and Dan Meng},
	booktitle = {Proc. of the IEEE International Conference on Cluster Computing (CLUSTER '10)},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {88--96},
	title = {{Exploiting Data Deduplication to Accelerate Live Virtual Machine Migration}},
	year = {2010}}

@inproceedings{StuartEtAl-VTDC09,
	author = {Stuart Hacking and Beno\^{\i}t Hudzia},
	booktitle = {{Proc. of the 3rd International Workshop on Virtualization Technologies in Distributed Computing (VTDC '09)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {51--58},
	title = {{Improving the Live Migration Process of Large Enterprise Applications}},
	year = {2009}}

@inproceedings{LiuEtAl-HPDC09,
	author = {Haikun Liu and Hai Jin and Xiaofei Liao and Liting Hu and Chen Yu},
	booktitle = {{Proc. of the 18th ACM International Symposium on High Performance Distributed Computing (HPDC '09)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {101--110},
	title = {{Live Migration of Virtual Machine Based on Full System Trace and Replay}},
	year = {2009}}

@inproceedings{JinEtAl-CLUSTER09,
	author = {Hai Jin and Li Deng and Song Wu and Xuanhua Shi and Xiaodong Pan},
	booktitle = {{Proc. of 2009 IEEE International Conference on Cluster Computing (Cluster '09)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {1--10},
	title = {{Live Virtual Machine Migration with Adaptive Memory Compression}},
	year = {2009}}

@inproceedings{HirofuchiEtAl-VTDC09,
	author = {Takahiro Hirofuchi and Hidemoto Nakada and Hirotaka Ogawa and Satoshi Itoh and Satoshi Sekiguchi},
	booktitle = {{Proc. of the 3rd International Workshop on Virtualization Technologies in Distributed Computing (VTDC '09)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {67--74},
	title = {{A Live Storage Migration Mechanism over WAN and its Performance Evaluation}},
	year = {2009}}

@conference{HinesEtAl-VEE09,
	author = {Michael R.~Hines and Kartik Gopalan},
	booktitle = {{Proc. of the 5th ACM International Conference on Virtual Execution Environments (VEE '09)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {51--60},
	title = {{Post-Copy Based Live Virtual Macine Migration Using Adaptie Pre-Paging and Dynamic Self-Ballooning}},
	year = {2009}}

@inproceedings{VermaEtAl-pMapper,
	author = {Akshat Verma and Puneet Ahuja and Anindya Neogi},
	booktitle = {{Proc. of the 9th ACM/IFIP/USENIX International Conference on Middleware (Middleware '08)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {243--264},
	title = {{pMapper: Power and Migration Cost Aware Application Placement in Virtualized Systems}},
	year = {2008}}

@inproceedings{KumarEtAl-VEE08,
	author = {Sanjay Kumar and Karsten Schwan},
	booktitle = {{Proc. of the 4th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '08)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {31--40},
	title = {{Netchannel: A VMM-level Mechanism for Continuous, Transparent Device Access During VM Migration}},
	year = {2008}}

@inproceedings{KadavEtAl-WIOV,
	author = {Kadav, Asim and Swift, Michael M.},
	booktitle = {{Proc. of the 1st Workshop on I/O Virtualization (WIOV '08)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {7--13},
	title = {{Live Migration of Direct-access Devices}},
	year = {2008}}

@conference{BradfordEtAl-VEE07,
	author = {Robert Bradford and Evangelos Kotsovinos and Anja Feldmann and Harald Schi\"oberg},
	booktitle = {{Proceedings of the 3rd ACM International Conference on Virtual Execution Environments (VEE '07)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	month = {Jun.},
	pages = {169--179},
	title = {{Live Wide-Area Migration of Virtual Machines Including Local Persistent State}},
	year = {2007}}

@inproceedings{WoodEtAl-Sandpiper,
	author = {Timothy Wood and Arun Venkataramani and Mazin Yousif},
	booktitle = {{Proc. of the 4th USENIX Symposium on Networked Systems Design and Implementation (NSDI '07)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {229--242},
	title = {{Black-box and Gray-box Strategies for Virtual Machine Migration}},
	year = {2007}}

@inproceedings{HuangEtAl-Cluster07,
	author = {W. Huang and Q. Gao and J. Liu and D. K. Panda},
	booktitle = {{In Proc. of the 2007 IEEE International Conference on Cluster Computing (Cluster '07)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {11--20},
	title = {"High performance virtual machine migration with RDMA over modern interconnects"},
	year = {2007}}

@inproceedings{ClarkEtAl-LM,
	author = {Christopher Clark and Keir Fraser and Steven Hand and Jacob Gorm Hansen and Eric Jul and Christian Limpach and Ian Pratt and Andrew Warfield},
	booktitle = {{Proc. of the 2nd USENIX Symposium on Networked Systems Design and Implementation (NSDI '05)}},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	pages = {273--286},
	title = {{Live Migration of Virtual Machines}},
	year = {2005}}

@article{MiloEtAl-Survey00,
	author = {Milo\'{\j}i\v{c}i\'{c}, Dejan S. and Douglis, Fred and Paindaveine, Yves and Wheeler, Richard and Zhou, Songnian},
	date-added = {2022-05-21 08:39:23 +0900},
	date-modified = {2022-05-21 08:39:23 +0900},
	journal = {ACM Computer Survey},
	month = {Sep.},
	number = {3},
	pages = {241--299},
	title = {{Process Migration}},
	volume = {32},
	year = {2000}}

@inproceedings{YamakitaEtAl-PBR,
	author = {Kazuya Yamakita and Hiroshi Yamada and Kenji Kono},
	booktitle = {Proc. of the 41st Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN '11)},
	date-added = {2022-04-27 09:49:37 +0900},
	date-modified = {2022-04-27 09:49:52 +0900},
	pages = {169--180},
	title = {{Phase-based Reboot: Reusing Operating System Execution Phases for Cheap Reboot-based Recovery}},
	year = {2011}}

@inproceedings{BhatEtAl-OSIRIS,
	author = {Koustubha Bhat and Dirk Vogt and Erik van der Kouwe and Ben Gras and Lionel Sambuc and Andrew S. Tanenbaum and Herbert Bos and Cristiano Giuffrida},
	booktitle = {Proc. of the 46th Annual IEEE/IFIP International Conference on Dependabile Systems and Networks (DSN '16)},
	date-added = {2022-04-24 10:34:10 +0900},
	date-modified = {2022-04-24 10:34:38 +0900},
	pages = {25--36},
	title = {{OSIRIS: Efficient and Consistent Recovery of Compartmentalized Operating Systems}},
	year = {2016}}

@misc{kexec,
	date-added = {2022-04-24 09:29:40 +0900},
	date-modified = {2022-04-24 11:12:05 +0900},
	note = {\url{http://www.ibm.com/developerworks/linux/library/l-kexec.html}},
	title = {Reboot Linux faster using kexec}}

@misc{CRIU,
	date-added = {2022-04-23 11:19:08 +0900},
	date-modified = {2022-04-23 11:19:08 +0900},
	title = {{CRIU: Checkpoint/Restore In Userspace}},
	url = {https://criu.org/Main_Page},
	bdsk-url-1 = {%7B%5Curl%20https://criu.org/Main_Page%7D}}

@inproceedings{RiekerEtAl-DMTCP,
	author = {Michael Rieker and Jason Ansel and Gene Cooperman},
	booktitle = {{Proc. of 2006 International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA '06)}},
	date-added = {2022-04-23 11:18:39 +0900},
	date-modified = {2022-04-23 11:18:39 +0900},
	month = {Jun.},
	pages = {492--498},
	title = {{Transparent User-Level Checkpointing for the Native POSIX Thread Library for Linux}},
	year = {2006}}

@techreport{DuellEtAl-BLCR,
	author = {Jason Duell and Paul Hargrove and Eric Roman},
	date-added = {2022-04-23 11:18:28 +0900},
	date-modified = {2022-04-23 11:18:28 +0900},
	institution = {Berkeley Lab Technical Report, LBNL-49659},
	month = {May},
	number = {8},
	title = {{Requirements for Linux Checkpoint/Restart}},
	volume = {1},
	year = {2002}}

@inproceedings{VogtEtAl-LMC,
	author = {Dirk Vogt and Cristiano Giuffrida and Herbert Bos and Andrew S.~Tanenbaum},
	booktitle = {{Proc. of the 45th IEEE/IFIP International Conference on Dependable Systems and Networks (DSN '15)}},
	date-added = {2022-04-23 11:18:15 +0900},
	date-modified = {2022-04-23 11:18:15 +0900},
	month = {Sep.},
	pages = {474--484},
	title = {{Lightweight Memory Checkpointing}},
	year = {2015}}

@inproceedings{SiniavineEtAl-SKU,
	author = {Maxim Siniavine and Ashvin Goel},
	booktitle = {Proc. of the 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN '13)},
	date-added = {2022-04-23 11:10:31 +0900},
	date-modified = {2022-04-23 11:17:18 +0900},
	pages = {1--12},
	title = {{Seamless Kernel Updates}},
	year = {2013}}

@inproceedings{KashyapEtAl-KUP,
	author = {Sanidhya Kashyap and Changwoo Min and Byoungyoung Lee and Taesoo Kim and Pavel Emelyanov},
	booktitle = {{Proc. of the 2016 USENIX Annual Technical Conference (ATC '16)}},
	date-added = {2022-04-23 11:09:48 +0900},
	date-modified = {2022-04-23 11:09:48 +0900},
	month = {Jun.},
	pages = {605--619},
	title = {{Instant OS Updates via Userspace Checkpoint-and-Restart}},
	year = {2016}}

@inproceedings{TeradaEtAl-Dwarf,
	author = {Ken Terada and Hiroshi Yamada},
	booktitle = {{Proc. of the 12th European Dependable Computing Conference (EDCC '16)}},
	date-added = {2022-04-23 11:09:21 +0900},
	date-modified = {2022-04-23 11:09:21 +0900},
	month = {Sep.},
	pages = {208--217},
	title = {{Dwarf: Shortening Downtime of Reboot-based Kernel Updates}},
	year = {2016}}

@inproceedings{YamadaEtAl-ShadowR,
	abstract = {Operating system (OS) reboots are an essential part of updating kernels and applications on laptops and desktop PCs. Long downtime during OS reboots severely disrupts users' computational activities. This long disruption discourages the users from conducting OS reboots, failing to enforce them to conduct software updates. This paper presents ShadowReboot, a virtual machine monitor (VMM)-based approach that shortens downtime of OS reboots in software updates. ShadowReboot conceals OS reboot activities from user's applications by spawning a VM dedicated to an OS reboot and systematically producing the rebooted state where the updated kernel and applications are ready for use. ShadowReboot provides an illusion to the users that the guest OS travels forward in time to the rebooted state. ShadowReboot offers the following advantages. It can be used to apply patches to the kernels and even system configuration updates. Next, it does not require any special patch requiring detailed knowledge about the target kernels. Lastly, it does not require any target kernel modification. We implemented a prototype in VirtualBox 4.0.10 OSE. Our experimental results show that ShadowReboot successfully updated software on unmodified commodity OS kernels and shortened the downtime of commodity OS reboots on five Linux distributions (Fedora, Ubuntu, Gentoo, Cent, and SUSE) by 91 to 98%.},
	author = {Yamada, Hiroshi and Kono, Kenji},
	booktitle = {Proc. of the 9th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '13)},
	date-added = {2022-04-23 11:08:11 +0900},
	date-modified = {2022-04-23 11:08:44 +0900},
	pages = {121--130},
	title = {Traveling Forward in Time to Newer Operating Systems Using ShadowReboot},
	year = {2013}}

@inproceedings{SmithEtAl-Phoenix,
	author = {Rebecca Smith and Scott Rixner},
	booktitle = {Proc. of the 2015 USENIX Annual Technical Conference (USENIX ATC '15)},
	date-added = {2022-04-23 09:36:58 +0900},
	date-modified = {2022-04-23 09:37:22 +0900},
	pages = {125--137},
	title = {{Surviving Peripheral Failures in Embedded Systems}},
	year = {2015}}

@inproceedings{KadavEtAl-FGFT,
	author = {Kadav, Asim and Renzelmann, Matthew J. and Swift, Michael M.},
	booktitle = {Proc. of the 18th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '13)},
	date-added = {2022-04-23 09:34:46 +0900},
	date-modified = {2022-04-23 09:35:05 +0900},
	pages = {473--484},
	title = {{Fine-Grained Fault Tolerance using Device Checkpoints}},
	year = {2013}}

@inproceedings{TsalapatisEtAl-Aurora,
	abstract = {Applications on modern operating systems manage their ephemeral state in memory and persistent state on disk. Ensuring consistency between them is a source of significant developer effort and application bugs. We present the Aurora single level store, an OS that eliminates the distinction between ephemeral and persistent application state.Aurora continuously persists entire applications with millisecond granularity to provide persistence as an OS service. Aurora revists the problem of application checkpointing through the lens of a single level store. Aurora supports transparent and customized applications. The RocksDB database using Aurora's APIs achieved a 75% throughput improvement while removing 40% of its code.},
	author = {Tsalapatis, Emil and Hancock, Ryan and Barnes, Tavian and Mashtizadeh, Ali Jos\'{e}},
	booktitle = {Proc. of the ACM SIGOPS 28th Symposium on Operating Systems Principles (SOSP '21)},
	date-added = {2022-04-23 09:32:08 +0900},
	date-modified = {2022-04-23 09:32:53 +0900},
	pages = {788--803},
	title = {The Aurora Single Level Store Operating System},
	year = {2021}}

@inproceedings{LenharthEtAl-RDomain,
	author = {Andrew Lenharth and Vikram Adve and Samuel T.~King},
	booktitle = {{Proc. of the 14th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '09)}},
	date-added = {2022-04-23 09:25:28 +0900},
	date-modified = {2022-04-23 09:25:46 +0900},
	pages = {49--60},
	title = {Recovery Domains: An Organizing Principle for Recoverable Operating Systems},
	year = {2009}}

@inproceedings{SwiftEtAl-ShadowD,
	author = {Michael M. Swift and Muthukaruppan Annamalai and Braian N.~Bershad and Henry M. Levy},
	booktitle = {{Proc. of the 6th USENIX Symposium on Operating Systems Design and Implementation (OSDI '04)}},
	date-added = {2022-04-23 09:23:52 +0900},
	date-modified = {2022-04-23 09:24:02 +0900},
	pages = {1--16},
	title = {{Recovering Device Drivers}},
	year = {2004}}

@inproceedings{SwiftEtAl-Nooks,
	author = {Michael M.~Swift and Brian N.~Bershad and Henry M.~Levy},
	booktitle = {{Proc. of the 19th ACM Symposium on Operating Systems Principles (SOSP '03)}},
	date-added = {2022-04-23 09:22:46 +0900},
	date-modified = {2022-04-23 09:23:05 +0900},
	pages = {207--222},
	title = {{Improving the Reliability of Commodity Operating Systems}},
	year = {2003}}

@inproceedings{SundararamanEtAl-Membrane,
	author = {Swaminathan Sundararaman and Sriram Subramanian and Abhishek Rajimwale and Andrea C.~Arpaci-Dusseau and Remzi H. ~Arpaci-Dusseau and Michael M.~Swift},
	booktitle = {Proc. of the 8th USENIX Conference on File and Storage Technologies (FAST '10)},
	date-added = {2022-04-23 09:12:37 +0900},
	date-modified = {2022-04-23 09:12:47 +0900},
	pages = {281--294},
	title = {{Membrane: Operating System Support for Restartable File Systems}},
	year = {2010}}

@inproceedings{DepoutovitchEtAl-otherworld,
	author = {Alex Depoutovitch and Michael Stumm},
	booktitle = {{Proc. of the 5th ACM European Conference on Computer Systems (EuroSys '10)}},
	date-added = {2022-04-23 09:11:55 +0900},
	date-modified = {2022-04-23 09:12:02 +0900},
	pages = {181--194},
	title = {{Otherworld - Giving Applications a Change to Servive OS Kernel Crashes}},
	year = {2010}}

@inproceedings{LuEtAl-LLFI,
	author = {Lu, Qining and Farahani, Mostafa and Wei, Jiesheng and Thomas, Anna and Pattabiraman, Karthik},
	booktitle = {{Proc. of the 2015 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)}},
	date-added = {2022-04-12 10:15:22 +0900},
	date-modified = {2022-04-12 10:15:22 +0900},
	pages = {11-16},
	title = {LLFI: An Intermediate Code-Level Fault Injection Tool for Hardware Faults},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/QRS.2015.13}}

@inproceedings{GuptaEtAl-HPCA18,
	author = {M. Gupta and V. Sridharan and D. Roberts and A. Prodromou and A. Venkat and D. Tullsen and R. Gupta},
	booktitle = {Proceedings of the 2018 IEEE International Symposium on High Performance Computer Architecture},
	date-added = {2022-04-12 08:43:52 +0900},
	date-modified = {2022-04-12 08:43:52 +0900},
	doi = {10.1109/HPCA.2018.00056},
	keywords = {embedded systems;memory architecture;microprocessor chips;multiprocessing systems;power aware computing;shared memory systems;first-class concern;single event upsets;access counts;program execution error;memory systems;highly reliable memory;page risk;page placement strategies;program annotation;reliability-aware data placement techniques;heuristic-based reliability-aware data placement;static placement;performance degradation;dynamic reliability-aware migration scheme;performance loss;performance cost;system reliability;architectural vulnerability factor;heterogeneous memory architectures;heterogeneous memory architecture;Reliability;Random access memory;Memory architecture;Bandwidth;Memory management;Transient analysis;Error correction codes;Memory;Heterogenous Memory Architecture;Reliability},
	month = {Feb},
	pages = {583-595},
	series = {HPCA '18},
	title = {Reliability-Aware Data Placement for Heterogeneous Memory Architecture},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/HPCA.2018.00056}}

@inproceedings{KruijifEtAl-ISCA10,
	acmid = {1816026},
	address = {New York, NY, USA},
	author = {de Kruijf, Marc and Nomura, Shuou and Sankaralingam, Karthikeyan},
	booktitle = {Proceedings of the 37th Annual International Symposium on Computer Architecture},
	date-added = {2022-04-12 08:43:40 +0900},
	date-modified = {2022-04-12 08:43:40 +0900},
	doi = {10.1145/1815961.1816026},
	isbn = {978-1-4503-0053-7},
	keywords = {reliability, software recovery},
	location = {Saint-Malo, France},
	numpages = {12},
	pages = {497--508},
	publisher = {ACM},
	series = {ISCA '10},
	title = {Relax: An Architectural Framework for Software Recovery of Hardware Faults},
	url = {http://doi.acm.org/10.1145/1815961.1816026},
	year = {2010},
	bdsk-url-1 = {http://doi.acm.org/10.1145/1815961.1816026},
	bdsk-url-2 = {https://doi.org/10.1145/1815961.1816026}}

@inproceedings{HariEtAl-MICRO09,
	author = {Hari, Siva Kumar Sastry and Li, Man-Lap and Ramachandran, Pradeep and Choi, Byn and Adve, Sarita V.},
	booktitle = {{Proc. of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO '09)}},
	date-added = {2022-04-12 08:43:26 +0900},
	date-modified = {2022-04-12 08:43:26 +0900},
	pages = {122-132},
	title = {{mSWAT: Low-cost hardware fault detection and diagnosis for multicore systems}},
	year = {2009}}

@inproceedings{HarendraEtAl-FAST17,
	address = {Santa Clara, CA},
	author = {Harendra Kumar and Yuvraj Patel and Ram Kesavan and Sumith Makam},
	booktitle = {Proceedings of the 15th {USENIX} Conference on File and Storage Technologies},
	date-added = {2022-04-12 08:43:12 +0900},
	date-modified = {2022-04-12 08:43:12 +0900},
	isbn = {978-1-931971-36-2},
	month = feb,
	pages = {197--212},
	publisher = {{USENIX} Association},
	series = {FAST '17},
	title = {High Performance Metadata Integrity Protection in the {WAFL} Copy-on-Write File System},
	url = {https://www.usenix.org/conference/fast17/technical-sessions/presentation/kumar},
	year = {2017},
	bdsk-url-1 = {https://www.usenix.org/conference/fast17/technical-sessions/presentation/kumar}}

@inproceedings{LuEtAl-ATC19,
	acmid = {3358884},
	address = {Berkeley, CA, USA},
	author = {Zhang, Lu and Swanson, Steven},
	booktitle = {Proceedings of the 2019 USENIX Conference on Usenix Annual Technical Conference},
	date-added = {2022-04-12 08:42:58 +0900},
	date-modified = {2022-04-12 08:42:58 +0900},
	isbn = {978-1-939133-03-8},
	location = {Renton, WA, USA},
	numpages = {15},
	pages = {897--911},
	publisher = {USENIX Association},
	series = {USENIX ATC '19},
	title = {Pangolin: A Fault-tolerant Persistent Memory Programming Library},
	url = {http://dl.acm.org/citation.cfm?id=3358807.3358884},
	year = {2019},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=3358807.3358884}}

@inproceedings{WeEtAl-APSys16,
	author = {Wu, Xingbo and Ni, Fan and Zhang, Li and Wang, Yandong and Ren, Yufei and Hack, Michel and Shao, Zili and Jiang, Song},
	booktitle = {{Proc. of the 7th ACM Asia-Pacific Workshop on Systems (APSys '16)}},
	date-added = {2022-04-12 08:42:48 +0900},
	date-modified = {2022-04-12 08:42:48 +0900},
	pages = {18:1--18:7},
	title = {{An NVM-based Key-Value Cache}},
	year = {2016}}

@inproceedings{NiEtAl-SC16,
	author = {Xiang Ni and Laxmikant V. Kal{\'{e}}},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/conf/sc/NiK16},
	booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, {SC} 2016, Salt Lake City, UT, USA, November 13-18, 2016},
	date-added = {2022-04-12 08:42:35 +0900},
	date-modified = {2022-04-12 08:42:35 +0900},
	doi = {10.1109/SC.2016.28},
	pages = {335--346},
	timestamp = {Wed, 16 Oct 2019 14:14:57 +0200},
	title = {FlipBack: automatic targeted protection against silent data corruption},
	url = {https://doi.org/10.1109/SC.2016.28},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/SC.2016.28}}

@inproceedings{DidehbanEtAl-ICCAD17,
	author = {M. {Didehban} and A. {Shrivastava} and S. R. D. {Lokam}},
	booktitle = {Proceedings of the 2017 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)},
	date-added = {2022-04-12 08:42:24 +0900},
	date-modified = {2022-04-12 08:42:24 +0900},
	doi = {10.1109/ICCAD.2017.8203792},
	issn = {1558-2434},
	month = {Nov},
	pages = {297-304},
	title = {NEMESIS: A software approach for computing in presence of soft errors},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICCAD.2017.8203792}}

@inproceedings{TaranovEtAl-EuroSys18,
	acmid = {3190536},
	address = {New York, NY, USA},
	articleno = {39},
	author = {Taranov, Konstantin and Alonso, Gustavo and Hoefler, Torsten},
	booktitle = {Proceedings of the Thirteenth EuroSys Conference},
	date-added = {2022-04-12 08:42:10 +0900},
	date-modified = {2022-04-12 08:42:10 +0900},
	doi = {10.1145/3190508.3190536},
	isbn = {978-1-4503-5584-1},
	keywords = {key-value store, reed-solomon, replication, resilience management},
	location = {Porto, Portugal},
	numpages = {14},
	pages = {39:1--39:14},
	publisher = {ACM},
	series = {EuroSys '18},
	title = {Fast and Strongly-consistent Per-item Resilience in Key-value Stores},
	url = {http://doi.acm.org/10.1145/3190508.3190536},
	year = {2018},
	bdsk-url-1 = {http://doi.acm.org/10.1145/3190508.3190536},
	bdsk-url-2 = {https://doi.org/10.1145/3190508.3190536}}

@inproceedings{LiEtAl-MemSys16,
	acmid = {2989091},
	address = {New York, NY, USA},
	author = {Li, Yin and Wang, Hao and Zhao, Xiaoqing and Sun, Hongbin and Zhang, Tong},
	booktitle = {Proceedings of the Second International Symposium on Memory Systems},
	date-added = {2022-04-12 08:42:00 +0900},
	date-modified = {2022-04-12 08:42:00 +0900},
	doi = {10.1145/2989081.2989091},
	isbn = {978-1-4503-4305-3},
	keywords = {Error Correction, In-memory Key-value Store, Memory Fault Tolerance},
	location = {Alexandria, VA, USA},
	numpages = {11},
	pages = {268--278},
	publisher = {ACM},
	series = {MEMSYS '16},
	title = {{Applying Software-based Memory Error Correction for In-Memory Key-Value Store: Case Studies on Memcached and RAMCloud}},
	url = {http://doi.acm.org/10.1145/2989081.2989091},
	year = {2016},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2989081.2989091},
	bdsk-url-2 = {https://doi.org/10.1145/2989081.2989091}}

@inproceedings{OngaroEtAl-RAFT14,
	author = {Diego Ongaro and John Ousterhout},
	booktitle = {{Proc. of the 2014 USENIX Annual Technical Conference, (USENIX ATC '14)}},
	date-added = {2022-04-12 08:41:15 +0900},
	date-modified = {2022-04-12 08:41:15 +0900},
	pages = {305--319},
	title = {{In Search of an Understandable Consensus Algorithm}},
	year = {2014}}

@inproceedings{BoloskyEtAl-NSDI11,
	abstract = {Conventional wisdom holds that Paxos is too expensive to use for high-volume, high-throughput,
data-intensive applications. Consequently, fault-tolerant storage systems typically
rely on special hardware, semantics weaker than sequential consistency, a limited
update interface (such as append-only), primary-backup replication schemes that serialize
all reads through the primary, clock synchronization for correctness, or some combination
thereof. We demonstrate that a Paxos-based replicated state machine implementing a
storage service can achieve performance close to the limits of the underlying hardware
while tolerating arbitrary machine restarts, some permanent machine or disk failures
and a limited set of Byzantine faults. We also compare it with two versions of primary-backup.
The replicated state machine can serve as the data store for a file system or storage
array. We present a novel algorithm for ensuring read consistency without logging,
along with a sketch of a proof of its correctness.},
	author = {Bolosky, William J. and Bradshaw, Dexter and Haagens, Randolph B. and Kusters, Norbert P. and Li, Peng},
	booktitle = {{Proc. of the 8th USENIX Conference on Networked Systems Design and Implementation (NSDI '11)}},
	date-added = {2022-04-12 08:41:04 +0900},
	date-modified = {2022-04-12 08:41:04 +0900},
	pages = {141--154},
	title = {{Paxos Replicated State Machines as the Basis of a High-Performance Data Store}},
	year = {2011}}

@inbook{BudhirajaEtAl-93,
	address = {USA},
	author = {Budhiraja, Navin and Marzullo, Keith and Schneider, Fred B. and Toueg, Sam},
	booktitle = {Distributed Systems (2nd Ed.)},
	date-added = {2022-04-12 08:40:54 +0900},
	date-modified = {2022-04-12 08:40:54 +0900},
	isbn = {0201624273},
	numpages = {18},
	pages = {199--216},
	publisher = {ACM Press/Addison-Wesley Publishing Co.},
	title = {{The Primary-Backup Approach}},
	year = {1993}}

@inproceedings{SastryEtAl-ASPLOS12,
	author = {Siva Kumar Sastry Hari and Sarita V. Adve and Helia Naeimi and Pradeep Ramachandran},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/conf/asplos/HariANR12},
	booktitle = {Proceedings of the 17th International Conference on Architectural Support for Programming Languages and Operating Systems, {ASPLOS} 2012, London, UK, March 3-7, 2012},
	date-added = {2022-04-12 08:40:41 +0900},
	date-modified = {2022-04-12 08:40:41 +0900},
	doi = {10.1145/2150976.2150990},
	pages = {123--134},
	timestamp = {Tue, 06 Nov 2018 11:07:42 +0100},
	title = {Relyzer: exploiting application-level fault equivalence to analyze application resiliency to transient faults},
	url = {https://doi.org/10.1145/2150976.2150990},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1145/2150976.2150990}}

@inproceedings{AshrafEtAl-SC15,
	author = {R. A. {Ashraf} and R. {Gioiosa} and G. {Kestor} and R. F. {DeMara} and C. {Cher} and P. {Bose}},
	booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, {SC} 2015},
	date-added = {2022-04-12 08:40:27 +0900},
	date-modified = {2022-04-12 08:40:27 +0900},
	doi = {10.1145/2807591.2807670},
	issn = {2167-4337},
	month = {Nov},
	pages = {1-12},
	title = {Understanding the propagation of transient errors in HPC applications},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2807591.2807670}}

@inproceedings{TangEtAl-DSN06,
	abstract = {The Solaris 10 operating system includes a number of new features for predictive self-healing. One such feature is the ability of the fault management software to diagnose memory errors and drive automatic memory page retirement (MPR), intended to reduce the negative impact of permanent memory faults that generate either correctable or uncorrectable errors on system reliability, availability, and serviceability (RAS). The MPR technique allows memory pages suffering from correctable errors and relocatable clean pages suffering from uncorrectable errors to be removed from use in the virtual memory system without interrupting user applications. It also allows relocatable dirty pages associated with uncorrectable errors to be isolated with limited impact on affected user processes, avoiding an outage for the entire system. This study applies analytical models, with parameters calibrated by field experience, to quantify the reduction that can be made by this operating system self-healing technique on the system interruptions, yearly downtime, and number of services introduced by hardware permanent faults, for typical low-end and mid-range server systems. The results show that significant improvements can be made on these three system RAS metrics by deploying the MPR capability},
	author = {{Dong Tang} and P. {Carruthers} and Z. {Totari} and M. W. {Shapiro}},
	booktitle = {International Conference on Dependable Systems and Networks (DSN'06)},
	date-added = {2022-04-12 08:40:14 +0900},
	date-modified = {2022-04-12 08:40:14 +0900},
	doi = {10.1109/DSN.2006.13},
	issn = {2158-3927},
	keywords = {fault tolerant computing;operating systems (computers);paged storage;program diagnostics;Solaris 10 operating system;predictive self-healing;fault management software;memory error diagnosis;automatic memory page retirement;permanent memory fault;system reliability;system availability;system serviceability;virtual memory system;system interruption;hardware fault;Retirement;Hardware;Operating systems;Error correction;Sun;Memory management;Availability;Error correction codes;Reliability;Analytical models},
	month = {June},
	pages = {365-370},
	title = {Assessment of the Effect of Memory Page Retirement on System RAS Against Hardware Faults},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1109/DSN.2006.13}}

@inproceedings{BorchertEtAl-DSN13,
	abstract = {Recent studies indicate that the number of system failures caused by main memory errors is much higher than expected. In contrast to the commonly used hardware-based countermeasures, for example using ECC memory, software-based fault-tolerance measures are much more flexible and can exploit application knowledge, such as the criticality of specific data structures. This paper presents a software-based memory error protection approach, which we used to harden the eCos operating system in a case study. The main benefits of our approach are the flexibility to choose from an extensible toolbox of easily pluggable error detection and correction schemes as well as its very low runtime overhead, which totals in a range of 0.09-1.7 %. The implementation is based on aspect-oriented programming and exploits the object-oriented program structure of eCos to identify well-suited code locations for the insertion of generative fault-tolerance measures.},
	author = {C. {Borchert} and H. {Schirmeier} and O. {Spinczyk}},
	booktitle = {2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
	date-added = {2022-04-12 08:40:03 +0900},
	date-modified = {2022-04-12 08:40:03 +0900},
	pages = {1-12},
	title = {Generative software-based memory error detection and correction for operating system data structures},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/DSN.2013.6575308}}

@article{MesserEtAl-TC04,
	abstract = {It is widely understood that most system downtime is accounted for by programming errors and administration time. However, a growing body of work has indicated an increasing cause of downtime may stem from transient errors in computer system hardware due to external factors, such as cosmic rays. This work indicates that moving to denser semiconductor technologies at lower voltages has the potential to increase these transient errors. In this paper, we investigate the susceptibility of commodity operating systems and applications on commodity PC processors to these soft-errors and we introduce ideas regarding the improved recovery from these transient errors in software. Our results indicate that, for the Linux kernel and a Java virtual machine running sample workloads, many errors are not activated, mostly due to overwriting. In addition, given current and upcoming microprocessor support, our results indicate that those errors activated, which would normally lead to system reboot, need not be fatal to the system if software knowledge is used for simple software recovery. Together, they indicate the benefits of simple memory soft error recovery handling in commodity processors and software.},
	author = {A. {Messer} and P. {Bernadat} and G. {Fu} and D. {Chen} and Z. {Dimitrijevic} and D. {Lie} and D. D. {Mannaru} and A. {Riska} and D. {Milojicic}},
	date-added = {2022-04-12 08:39:40 +0900},
	date-modified = {2022-04-12 08:39:40 +0900},
	journal = {IEEE Transactions on Computers},
	number = {12},
	pages = {1557-1568},
	title = {Susceptibility of commodity systems and software to memory soft errors},
	volume = {53},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1109/TC.2004.119}}

@inproceedings{NikolaouEtAl-MICRO15,
	abstract = {Total Cost of Ownership (TCO) is a key optimization metric for the design of a datacenter. This paper proposes, for the first time, a framework for modeling the implications of DRAM failures and DRAM error protection techniques on the TCO of a datacenter. The framework captures the effects and interactions of several key parameters including: the choice of DRAM protection technique (e.g. single vs dual channel Chipkill), device width (×4 or ×8), memory size, power, FITs for various failure modes, the performance, power and temperature overheads of a protection technique for a given service and mixes of collocated services. The usefulness of the proposed framework is demonstrated through several case studies that identify the best DRAM protection technique in each case, in terms of TCO. Interestingly, our analysis reveals that among the three DRAM protection techniques considered, there is no one that is always superior to all the others. Moreover, each technique is better than the others for some cases. This underlines the importance and the need of the proposed framework for making optimal memory protection data-center design decisions. As part of this work, we analyze and report the performance and power with single channel and dual channel Chipkill on real hardware when running a web search benchmark alone and collocated with benchmarks of varying memory intensity. This analysis reveals that the choice of memory protection can have serious performance and TCO ramifications depending on the memory characteristics of collocated services. Other analysis reveals that, for the datacenter and services assumed in this study, when using Chipkill protection it can be beneficial for TCO to use DRAM with 100× the failure rate of a baseline DRAM as long as the cost per DIMM is at least a dollar less compared to the baseline.},
	author = {P. {Nikolaou} and Y. {Sazeides} and L. {Ndreu} and M. {Kleanthous}},
	booktitle = {2015 48th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)},
	date-added = {2022-04-12 08:39:11 +0900},
	date-modified = {2022-04-12 08:39:11 +0900},
	doi = {10.1145/2830772.2830804},
	issn = {2379-3155},
	keywords = {computer centres;DRAM chips;optimisation;DRAM failures;protection techniques;datacenter TCO;total cost of ownership;optimization metric;DRAM error protection techniques;key parameters;protection technique;collocated services;optimal memory protection data-center design decisions;memory intensity;Random access memory;Servers;Error correction codes;Reliability;Measurement;Hardware;Benchmark testing;Total Cost of Ownership;Datacenters;Online and Offline services;co-running services;reliability;DRAM},
	month = {Dec},
	pages = {572-584},
	title = {Modeling the implications of DRAM failures and protection techniques on datacenter TCO},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2830772.2830804}}

@inproceedings{LevyEtAl-SC18,
	acmid = {3291714},
	address = {Piscataway, NJ, USA},
	articleno = {43},
	author = {Levy, Scott and Ferreira, Kurt B. and DeBardeleben, Nathan and Siddiqua, Taniya and Sridharan, Vilas and Baseman, Elisabeth},
	booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage, and Analysis},
	date-added = {2022-04-12 08:38:48 +0900},
	date-modified = {2022-04-12 08:38:48 +0900},
	doi = {10.1109/SC.2018.00046},
	location = {Dallas, Texas},
	numpages = {12},
	pages = {43:1--43:12},
	publisher = {IEEE Press},
	series = {SC '18},
	title = {Lessons Learned from Memory Errors Observed over the Lifetime of Cielo},
	url = {https://doi.org/10.1109/SC.2018.00046},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/SC.2018.00046}}

@inproceedings{SangchoolieEtAl-DSN17,
	author = {B. Sangchoolie and K. Pattabiraman and J. Karlsson},
	booktitle = {Proceedings of the 2017 47th Annual IEEE/IFIP International Conference on Dependable Systems and Networks},
	date-added = {2022-04-12 08:38:23 +0900},
	date-modified = {2022-04-12 08:38:23 +0900},
	doi = {10.1109/DSN.2017.30},
	keywords = {flip-flops;particle-induced soft errors;multiple-bit errors;single bit-flips;silent data corruptions;single-bit errors;Hardware;Transient analysis;Resilience;Registers;Software;Data models;Benchmark testing;fault injection;transient hardware faults;single/multiple bit-flip errors;error space pruning},
	month = {June},
	pages = {97-108},
	series = {DSN '17},
	title = {One Bit is (Not) Enough: An Empirical Study of the Impact of Single and Multiple Bit-Flip Errors},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/DSN.2017.30}}

@inproceedings{KimEtAl-ISCA14,
	abstract = {Memory isolation is a key property of a reliable and secure computing system-an access to one memory address should not have unintended side effects on data stored in other addresses. However, as DRAM process technology scales down to smaller dimensions, it becomes more difficult to prevent DRAM cells from electrically interacting with each other. In this paper, we expose the vulnerability of commodity DRAM chips to disturbance errors. By reading from the same address in DRAM, we show that it is possible to corrupt data in nearby addresses. More specifically, activating the same row in DRAM corrupts data in nearby rows. We demonstrate this phenomenon on Intel and AMD systems using a malicious program that generates many DRAM accesses. We induce errors in most DRAM modules (110 out of 129) from three major DRAM manufacturers. From this we conclude that many deployed systems are likely to be at risk. We identify the root cause of disturbance errors as the repeated toggling of a DRAM row's wordline, which stresses inter-cell coupling effects that accelerate charge leakage from nearby rows. We provide an extensive characterization study of disturbance errors and their behavior using an FPGA-based testing platform. Among our key findings, we show that (i) it takes as few as 139K accesses to induce an error and (ii) up to one in every 1.7K cells is susceptible to errors. After examining various potential ways of addressing the problem, we propose a low-overhead solution to prevent the errors.},
	author = {Y. {Kim} and R. {Daly} and J. {Kim} and C. {Fallin} and J. H. {Lee} and D. {Lee} and C. {Wilkerson} and K. {Lai} and O. {Mutlu}},
	booktitle = {2014 ACM/IEEE 41st International Symposium on Computer Architecture (ISCA)},
	date-added = {2022-04-12 08:37:25 +0900},
	date-modified = {2022-04-12 08:37:25 +0900},
	doi = {10.1109/ISCA.2014.6853210},
	issn = {1063-6897},
	keywords = {DRAM chips;field programmable gate arrays;memory bit flipping;DRAM disturbance errors;memory isolation;secure computing system;reliable computing system;memory address;DRAM process technology;DRAM cells;DRAM chips;Intel;AMD systems;malicious program;DRAM modules;DRAM accesses;intercell coupling effects;charge leakage;FPGA-based testing platform;DRAM chips;Testing;Organizations;Timing;Artificial intelligence;Acceleration},
	month = {June},
	pages = {361-372},
	title = {Flipping bits in memory without accessing them: An experimental study of DRAM disturbance errors},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/ISCA.2014.6853210}}

@misc{GoogleCE,
	date-added = {2022-04-12 08:34:53 +0900},
	date-modified = {2022-04-12 08:34:53 +0900},
	note = {\url{https://cloud.google.com/compute/}},
	title = {{Google Compute Engine}}}

@inproceedings{NishtalaEtAl-NSDI13,
	author = {Rajesh Nishtala and Hans Fugal and Steven Grimm and Marc Kwiatkowski and Herman Lee and Harry C.~Li and Ryan McElroy and Mike Paleczny and Daniel Peek and Paul Saab and David Stafford and Tony Tung and Venkateshwaran Venkataramani},
	booktitle = {{Proc. of the 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI '13)}},
	date-added = {2022-04-12 08:34:30 +0900},
	date-modified = {2022-04-12 08:34:30 +0900},
	pages = {385--398},
	title = {{Scaling Memcache at Facebook}},
	year = {2013}}

@inproceedings{BergEtAl-OSDI20,
	author = {Benjamin Berg and Daniel S. Berger and Sara McAllister and Isaac Grosof and Sathya Gunasekar and Jimmy Lu and Michael Uhlar and Jim Carrig and Nathan Beckmann and Mor Harchol-Balter and Gregory R. Ganger},
	booktitle = {14th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 20)},
	date-added = {2022-04-12 08:33:22 +0900},
	date-modified = {2022-04-12 08:33:22 +0900},
	pages = {753--768},
	title = {{The CacheLib Caching Engine: Design and Experiences at Scale}},
	year = {2020},
	bdsk-url-1 = {https://www.usenix.org/conference/osdi20/presentation/berg}}

@inproceedings{VinckEtAl-EuroSys22,
	abstract = {Multi-Variant Execution Environments (MVEEs) are a powerful tool for protecting legacy software against memory corruption attacks. MVEEs employ software diversity to run multiple variants of the same program in lockstep, whilst providing them with the same inputs and comparing their behavior. Well-constructed variants will behave equivalently under normal operating conditions but diverge when under attack. The MVEE detects these divergences and takes action before compromised variants can damage the host system.Existing MVEEs replicate inputs at the system call boundary, and therefore do not support programs that use shared-memory IPC with other processes, since shared memory pages can be read from and written to directly without system calls.We analyzed modern applications, ranging from web servers, over media players, to browsers, and observe that they rely heavily on shared memory, in some cases for their basic functioning and in other cases for enabling more advanced functionality. It follows that modern applications cannot enjoy the security provided by MVEEs unless those MVEEs support shared-memory IPC.This paper first identifies the requirements for supporting shared-memory IPC in an MVEE. We propose a design that involves techniques to identify and instrument accesses to shared memory pages, as well as techniques to replicate I/O through shared-memory IPC. We implemented these techniques in a prototype MVEE and report our findings through an evaluation of a range of benchmark programs. Our contributions enable the use of MVEEs on a far wider range of programs than previously supported. By overcoming one of the major remaining limitations of MVEEs, our contributions can help to bolster their real-world adoption.},
	author = {Vinck, Jonas and Abrath, Bert and Coppens, Bart and Voulimeneas, Alexios and De Sutter, Bjorn and Volckaert, Stijn},
	booktitle = {Proceedings of the Seventeenth European Conference on Computer Systems},
	date-added = {2022-04-11 07:50:45 +0900},
	date-modified = {2022-04-11 07:51:11 +0900},
	pages = {99--116},
	title = {Sharing is Caring: Secure and Efficient Shared Memory Support for MVEEs},
	year = {2022}}

@inproceedings{SridharanEtAl-ASPLOS15,
	acmid = {2694348},
	address = {New York, NY, USA},
	author = {Sridharan, Vilas and DeBardeleben, Nathan and Blanchard, Sean and Ferreira, Kurt B. and Stearley, Jon and Shalf, John and Gurumurthi, Sudhanva},
	booktitle = {Proceedings of the Twentieth International Conference on Architectural Support for Programming Languages and Operating Systems},
	date-added = {2022-04-06 14:23:07 +0900},
	date-modified = {2022-04-06 14:23:07 +0900},
	doi = {10.1145/2694344.2694348},
	isbn = {978-1-4503-2835-7},
	keywords = {field studies, large-scale systems, reliability},
	location = {Istanbul, Turkey},
	numpages = {14},
	pages = {297--310},
	publisher = {ACM},
	series = {ASPLOS '15},
	title = {Memory Errors in Modern Systems: The Good, The Bad, and The Ugly},
	url = {http://doi.acm.org/10.1145/2694344.2694348},
	year = {2015},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2694344.2694348},
	bdsk-url-2 = {https://doi.org/10.1145/2694344.2694348}}

@inproceedings{PatelEtAl-DSN19,
	abstract = {Experimental characterization of DRAM errors is a powerful technique for understanding DRAM behavior and provides valuable insights for improving overall system performance, energy efficiency, and reliability. Unfortunately, recent DRAM technology scaling issues are forcing manufacturers to adopt on-die error-correction codes (ECC), which pose a significant challenge for DRAM error characterization studies by obfuscating raw error distributions using undocumented, proprietary, and opaque error-correction hardware. As we show in this work, errors observed in devices with on-die ECC no longer follow expected, well-studied distributions (e.g., lognormal retention times) but rather depend on the particular ECC scheme used. In this work, we develop Error-correction INference (EIN), a new statistical inference methodology that overcomes the inability to understand the error characteristics of DRAM devices with ondie ECC. EIN uses maximum a posteriori (MAP) estimation over statistical models that we develop to represent ECC operation to: i) reverse-engineer the ECC scheme and ii) infer the pre-correction error rates given only the post-correction errors. We design and publicly release EINSim, a flexible open-source simulator that can apply EIN to a wide variety ofDRAM devices and standards. We evaluate EIN through the first experimental error-characterization study of DRAM devices with on-die ECC in open literature. Using the data-retention error rates of 232 (82) LPDDR4 devices with (without) on-die ECC across a wide range of temperatures, refresh rates, and test patterns, we show that EIN enables: i) reverse-engineering the on-die ECC scheme, which we find to be a single-error correction Hamming code with (n = 136, k = 128, d = 3), ii) inferring pre-correction error rates given only post-correction errors, and iii) recovering the well-studied pre-correction error distributions that on-die ECC obfuscates.},
	author = {M. {Patel} and J. S. {Kim} and H. {Hassan} and O. {Mutlu}},
	booktitle = {2019 49th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
	date-added = {2022-04-06 14:22:30 +0900},
	date-modified = {2022-04-06 14:22:30 +0900},
	pages = {13-25},
	title = {{Understanding and Modeling On-Die Error Correction in Modern DRAM: An Experimental Study Using Real Devices}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/DSN.2019.00017}}

@article{SEC-DED,
	address = {USA},
	author = {Hsiao, M. Y.},
	date-added = {2022-04-06 14:22:22 +0900},
	date-modified = {2022-04-06 14:22:22 +0900},
	doi = {10.1147/rd.144.0395},
	issn = {0018-8646},
	issue_date = {July 1970},
	journal = {IBM J. Res. Dev.},
	month = jul,
	number = {4},
	numpages = {7},
	pages = {395--401},
	publisher = {IBM Corp.},
	title = {A Class of Optimal Minimum Odd-Weight-Column SEC-DED Codes},
	url = {https://doi.org/10.1147/rd.144.0395},
	volume = {14},
	year = {1970},
	bdsk-url-1 = {https://doi.org/10.1147/rd.144.0395}}

@article{ECC,
	address = {USA},
	author = {Chen, C. L. and Hsiao, M. Y.},
	date-added = {2022-04-06 14:21:53 +0900},
	date-modified = {2022-04-06 14:21:53 +0900},
	doi = {10.1147/rd.282.0124},
	issn = {0018-8646},
	issue_date = {March 1984},
	journal = {IBM J. Res. Dev.},
	month = mar,
	number = {2},
	numpages = {11},
	pages = {124--134},
	publisher = {IBM Corp.},
	title = {Error-Correcting Codes for Semiconductor Memory Applications: A State-of-the-Art Review},
	url = {https://doi.org/10.1147/rd.282.0124},
	volume = {28},
	year = {1984},
	bdsk-url-1 = {https://doi.org/10.1147/rd.282.0124}}

@inproceedings{ZhangEtAl-HPCA17,
	abstract = {Multi Level Cell (MLC) Phase Change Memory (PCM) is an enhancement of PCM technology, which provides higher capacity by allowing multiple digital bits to be stored in a single PCM cell. However, the retention time of MLC PCM is limited by the resistance drift problem and refresh operations are required. Previous work shows that there exists a trade-off between write latency and retention-a write scheme with more SET iterations and smaller current provides a longer retention time but at the cost of a longer write latency. Otherwise, a write scheme with fewer SET iterations achieves high performance for writes but requires a greater number of refresh operations due to its significantly reduced retention time, and this hurts the lifetime of MLC PCM. In this paper, we show that only a small part of memory (i.e., hot memory regions) will be frequently accessed in a given period of time. Based on such an observation, we propose Region Retention Monitor (RRM), a novel structure that records and predicts the write frequency of memory regions. For every incoming memory write operation, RRM select a proper write latency for it. Our evaluations show that RRM helps the system improves the balance between system performance and memory lifetime. On the performance side, the system with RRM bridges 77.2% of the performance gap between systems with long writes and systems with short writes. On the lifetime side, a system with RRM achieves a lifetime of 6.4 years, while systems using only long writes and short writes achieve lifetimes of 10.6 and 0.3 years, respectively. Also, we can easily control the aggressiveness of RRM through an attribute called hot threshold. A more aggressively configured RRM can achieve the performance which is only 3.5% inferior than the system using static short writes, while still achieve a lifetime of 5.78 years.},
	author = {M. {Zhang} and L. {Zhang} and L. {Jiang} and Z. {Liu} and F. T. {Chong}},
	booktitle = {Proc. of the IEEE International Symposium on High Performance Computer Architecture (HPCA '17)},
	date-added = {2022-04-06 14:21:40 +0900},
	date-modified = {2022-04-06 14:21:40 +0900},
	pages = {385-396},
	title = {Balancing Performance and Lifetime of MLC PCM by Using a Region Retention Monitor},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/HPCA.2017.45}}

@inproceedings{ZhangEtAl-ISCA16,
	abstract = {Emerging resistive memory technologies, such as PCRAM and ReRAM, have been proposed as promising replacements for DRAM-based main memory, due to their better scalability, low standby power, and non-volatility. However, limited write endurance is a major drawback for such resistive memory technologies. Wear leveling (balancing the distribution of writes) and wear limiting (reducing the number of writes) have been proposed to mitigate this disadvantage, but both techniques only manage a fixed budget of writes to a memory system rather than increase the number available. In this paper, we propose a new type of wear limiting technique, Mellow Writes, which reduces the wearout of individual writes rather than reducing the number of writes. Mellow Writes is based on the fact that slow writes performed with lower dissipated power can lead to longer endurance (and therefore longer lifetimes). For non-volatile memories, an N1 to N3 times endurance can be achieved if the write operation is slowed down by N times. We present three microarchitectural mechanisms (BankAware Mellow Writes, Eager Mellow Writes, and Wear Quota) that selectively perform slow writes to increase memory lifetime while minimizing performance impact. Assuming a factor N2 advantage in cell endurance for a factor N slower write, our best Mellow Writes mechanism can achieve 2.58× lifetime and 1.06× performance of the baseline system. In addition, its performance is almost the same as a system aggressively optimized for performance (at the expense of endurance). Finally, Wear Quota guarantees a minimal lifetime (e.g., 8 years) by forcing more slow writes in presence of heavy workloads. We also perform sensitivity analysis on the endurance advantage factor for slow writes, from N1 to N3, and find that our technique is still useful for factors as low as N1.},
	author = {L. {Zhang} and B. {Neely} and D. {Franklin} and D. {Strukov} and Y. {Xie} and F. T. {Chong}},
	booktitle = {2016 ACM/IEEE 43rd Annual International Symposium on Computer Architecture (ISCA)},
	date-added = {2022-04-06 14:21:30 +0900},
	date-modified = {2022-04-06 14:21:30 +0900},
	doi = {10.1109/ISCA.2016.52},
	issn = {1063-6897},
	keywords = {DRAM chips;resistive RAM;sensitivity analysis;sensitivity analysis;cell endurance;wear quota;eager mellow writes;bank aware mellow writes;microarchitectural mechanisms;write operation;nonvolatile memories;wear limiting technique;wear leveling;limited write endurance;standby power;scalability;DRAM-based main memory;resistive memory technologies;selective slow write backs;resistive memory lifetime;Limiting;Phase change random access memory;Nonvolatile memory;Performance evaluation;Memory management;Analytical models;non-volatile memory;endurance;write latency},
	month = {June},
	pages = {519-531},
	title = {Mellow Writes: Extending Lifetime in Resistive Memories through Selective Slow Write Backs},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/ISCA.2016.52}}

@inproceedings{MezaEtAl-DSN15,
	author = {J. Meza, Q. Wu, S. Kumar and O. Mutlu},
	booktitle = {Proceedings of the 2015 45th Annual IEEE/IFIP International Conference on Dependable Systems and Networks},
	date-added = {2022-04-06 14:21:09 +0900},
	date-modified = {2022-04-06 14:21:09 +0900},
	doi = {10.1109/DSN.2015.57},
	keywords = {DRAM chips;error correction codes;Pareto distribution;memory reliability;nonDRAM memory failures;Pareto distribution;modern DDR3 communication protocol;DIMM;Facebook;ECC mechanisms;error correcting codes;DRAM devices;dynamic random-access memory;large-scale production data centers;memory errors;Servers;Random access memory;Sockets;Error analysis;Memory management;Market research;Reliability;DRAM;main memory;reliability;warehouse-scale computing},
	month = {June},
	pages = {415-426},
	series = {DSN '15},
	title = {Revisiting Memory Errors in Large-Scale Production Data Centers: Analysis and Modeling of New Trends from the Field},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/DSN.2015.57}}

@inproceedings{LiEtAl-ATC10,
	acmid = {1855846},
	address = {Berkeley, CA, USA},
	author = {Li, Xin and Huang, Michael C. and Shen, Kai and Chu, Lingkun},
	booktitle = {Proceedings of the 2010 USENIX Conference on USENIX Annual Technical Conference},
	date-added = {2022-04-06 14:20:53 +0900},
	date-modified = {2022-04-06 14:20:53 +0900},
	location = {Boston, MA},
	numpages = {1},
	pages = {6--6},
	publisher = {USENIX Association},
	series = {USENIXATC'10},
	title = {A Realistic Evaluation of Memory Hardware Errors and Software System Susceptibility},
	url = {http://dl.acm.org/citation.cfm?id=1855840.1855846},
	year = {2010},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=1855840.1855846}}

@inproceedings{SchroederEtAl-SIGMETRICS09,
	acmid = {1555372},
	address = {New York, NY, USA},
	author = {Schroeder, Bianca and Pinheiro, Eduardo and Weber, Wolf-Dietrich},
	booktitle = {Proceedings of the Eleventh International Joint Conference on Measurement and Modeling of Computer Systems},
	date-added = {2022-04-06 14:20:36 +0900},
	date-modified = {2022-04-06 14:20:36 +0900},
	doi = {10.1145/1555349.1555372},
	isbn = {978-1-60558-511-6},
	keywords = {data corruption, dimm, dram, dram reliability, ecc, empirical study, hard error, large-scale systems, memory, soft error},
	location = {Seattle, WA, USA},
	numpages = {12},
	pages = {193--204},
	publisher = {ACM},
	series = {SIGMETRICS '09},
	title = {DRAM Errors in the Wild: A Large-scale Field Study},
	url = {http://doi.acm.org/10.1145/1555349.1555372},
	year = {2009},
	bdsk-url-1 = {http://doi.acm.org/10.1145/1555349.1555372},
	bdsk-url-2 = {https://doi.org/10.1145/1555349.1555372}}

@misc{NX-2021,
	author = {Canonical Ltd.},
	date-added = {2022-04-06 10:08:01 +0900},
	date-modified = {2022-04-06 10:08:58 +0900},
	note = {\url{https://wiki.ubuntu.com/Security/Features}},
	title = {Ubuntu Security Features},
	year = {2021}}

@misc{NX,
	author = {LWN.net.},
	date-added = {2022-04-06 10:03:44 +0900},
	date-modified = {2022-04-06 10:06:45 +0900},
	note = {\url{https://lwn.net/Articles/87814/}},
	title = {x86 NX support},
	year = {2004}}

@inproceedings{NikolaevEtAl-Adelie,
	abstract = {While address space layout randomization (ASLR) has been extensively studied for user-space programs, the corresponding OS kernel's KASLR support remains very limited, making the kernel vulnerable to just-in-time (JIT) return-oriented programming (ROP) attacks. Furthermore, commodity OSs such as Linux restrict their KASLR range to 32 bits due to architectural constraints (e.g., x86-64 only supports 32-bit immediate operands for most instructions), which makes them vulnerable to even unsophisticated brute-force ROP attacks due to low entropy. Most in-kernel pointers remain static, exacerbating the problem when pointers are leaked.  Adelie, our kernel defense mechanism, overcomes KASLR limitations, increases KASLR entropy, and makes successful ROP attacks on the Linux kernel much harder to achieve. First, Adelie enables the position-independent code (PIC) model so that the kernel and its modules can be placed anywhere in the 64-bit virtual address space, at any distance apart from each other. Second, Adelie implements stack re-randomization and address encryption on modules. Finally, Adelie enables efficient continuous KASLR for modules by using the PIC model to make it (almost) impossible to inject ROP gadgets through these modules regardless of gadget's origin.  Since device drivers (typically compiled as modules) are often developed by third parties and are typically less tested than core OS parts, they are also often more vulnerable. By fully re-randomizing device drivers, the last two contributions together prevent most JIT ROP attacks since vulnerable modules are very likely to be a starting point of an attack. Furthermore, some OS instances in virtualized environments are specifically designated to run device drivers, where drivers are the primary target of JIT ROP attacks. Using a GCC plugin that we developed, we automatically modify different kinds of kernel modules. Since the prior art tackles only user-space programs, we solve many challenges unique to the kernel code. Our evaluation shows high efficiency of Adelie's approach: the overhead of the PIC model is completely negligible and re-randomization cost remains reasonable for typical use cases.},
	author = {Nikolaev, Ruslan and Nadeem, Hassan and Stone, Cathlyn and Ravindran, Binoy},
	booktitle = {Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
	date-added = {2022-04-06 09:52:40 +0900},
	date-modified = {2022-04-06 09:53:07 +0900},
	pages = {483--498},
	title = {Adelie: Continuous Address Space Layout Re-Randomization for Linux Drivers},
	year = {2022}}

@inproceedings{AoyamaEtAl-SAC22,
	author = {Naoki Aoyama and Hiroshi Yamada},
	booktitle = {{Proc. of the 37th ACM Symposium on Applied Computing (SAC '22)}},
	date-added = {2022-02-16 14:22:50 +0900},
	date-modified = {2022-02-16 14:22:50 +0900},
	series = {To appear.},
	title = {{Copying Values v.s. References for Memory Page Compaction in Virtualized Systems}},
	year = {2022}}

@inproceedings{GoelEtAl-SIGMOD14,
	author = {Goel, Aakash and Chopra, Bhuwan and Gerea, Ciprian and M{\'a}t{\'a}ni, Dhr{\'u}v and Metzler, Josh and Ul Haq, Fahim and Wiener, Janet},
	booktitle = {{Proc. of the 2014 ACM SIGMOD international conference on Management of data (SIGMOD '14)}},
	date-added = {2022-01-28 13:50:21 +0900},
	date-modified = {2022-01-28 13:50:45 +0900},
	pages = {541--549},
	title = {{Fast Database Restarts at Facebook}},
	year = {2014}}

@inproceedings{OlszewskiEtAl-Kendo,
	abstract = {Although chip-multiprocessors have become the industry standard, developing parallel applications that target them remains a daunting task. Non-determinism, inherent in threaded applications, causes significant challenges for parallel programmers by hindering their ability to create parallel applications with repeatable results. As a consequence, parallel applications are significantly harder to debug, test, and maintain than sequential programs.This paper introduces Kendo: a new software-only system that provides deterministic multithreading of parallel applications. Kendo enforces a deterministic interleaving of lock acquisitions and specially declared non-protected reads through a novel dynamically load-balanced deterministic scheduling algorithm. The algorithm tracks the progress of each thread using performance counters to construct a deterministic logical time that is used to compute an interleaving of shared data accesses that is both deterministic and provides good load balancing. Kendo can run on today's commodity hardware while incurring only a modest performance cost. Experimental results on the SPLASH-2 applications yield a geometric mean overhead of only 16% when running on 4 processors. This low overhead makes it possible to benefit from Kendo even after an application is deployed. Programmers can start using Kendo today to program parallel applications that are easier to develop, debug, and test.},
	author = {Olszewski, Marek and Ansel, Jason and Amarasinghe, Saman},
	booktitle = {{Proc. of the 14th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '09)}},
	date-added = {2022-01-28 13:36:46 +0900},
	date-modified = {2022-01-28 13:36:46 +0900},
	pages = {97--108},
	title = {{Kendo: Efficient Deterministic Multithreading in Software}},
	year = {2009}}

@inproceedings{LiuEtAl-SOSP11,
	abstract = {Multithreaded programming is notoriously difficult to get right. A key problem is non-determinism, which complicates debugging, testing, and reproducing errors. One way to simplify multithreaded programming is to enforce deterministic execution, but current deterministic systems for C/C++ are incomplete or impractical. These systems require program modification, do not ensure determinism in the presence of data races, do not work with general-purpose multithreaded programs, or run up to 8.4\texttimes{} slower than pthreads.This paper presents Dthreads, an efficient deterministic multithreading system for unmodified C/C++ applications that replaces the pthreads library. Dthreads enforces determinism in the face of data races and deadlocks. Dthreads works by exploding multithreaded applications into multiple processes, with private, copy-on-write mappings to shared memory. It uses standard virtual memory protection to track writes, and deterministically orders updates by each thread. By separating updates from different threads, Dthreads has the additional benefit of eliminating false sharing. Experimental results show that Dthreads substantially outperforms a state-of-the-art deterministic runtime system, and for a majority of the benchmarks evaluated here, matches and occasionally exceeds the performance of pthreads.},
	author = {Liu, Tongping and Curtsinger, Charlie and Berger, Emery D.},
	booktitle = {{Proc. of the 23rd ACM Symposium on Operating Systems Principles (SOSP '11)}},
	date-added = {2022-01-28 13:32:33 +0900},
	date-modified = {2022-01-28 13:33:26 +0900},
	pages = {327--336},
	title = {{Dthreads: Efficient Deterministic Multithreading}},
	year = {2011}}

@misc{NetApp-Redis1,
	author = {NetApp},
	date-added = {2022-01-28 11:46:33 +0900},
	date-modified = {2022-01-28 11:48:11 +0900},
	month = {Nov.},
	note = {\url{https://security.netapp.com/advisory/ntap-20211104-0003/}},
	title = {"October 2021 Redis Vulnerabilities in NetApp Products"},
	year = {2021}}

@misc{TRENDMICRO-REDIS2,
	author = {David Fiser},
	date-added = {2022-01-28 11:45:10 +0900},
	date-modified = {2022-01-28 11:46:06 +0900},
	month = {Apr.},
	note = {\url{https://www.trendmicro.com/en_us/research/20/d/more-than-8-000-unsecured-redis-instances-found-in-the-cloud.html}},
	title = {"More Than 8,000 Unsecured Redis Instances Found in the Cloud"},
	year = {2020}}

@misc{TRENDMICRO-REDIS1,
	author = {David Fiser and Jaromir Horejsi},
	date-added = {2022-01-28 11:43:12 +0900},
	date-modified = {2022-01-28 11:44:52 +0900},
	keywords = {TREND MICRO},
	month = {Apr.},
	note = {\url{https://www.trendmicro.com/en_us/research/20/d/exposed-redis-instances-abused-for-remote-code-execution-cryptocurrency-mining.html}},
	title = {"Exposed Redis Instances Abused for Remote Code Execution, Cryptocurrency Mining"},
	year = {2020}}

@article{Chipkill,
	author = {Dell, Timothy J},
	journal = {IBM Microelectronics division},
	pages = {1--23},
	title = {A white paper on the benefits of chipkill-correct ECC for PC server main memory},
	volume = {11},
	year = {1997}}

@misc{IntelAP,
	author = {{Intel Corporation}},
	date-added = {2021-11-16 08:52:46 +0900},
	date-modified = {2021-11-16 08:54:01 +0900},
	note = {\url{https://www.intel.com/content/www/us/en/developer/articles/technical/address-range-partial-memory-mirroring.html}},
	title = {{Intel Address Range Partial Memory Mirroring}},
	year = {Accessed: 2021-11-16}}

@article{MeaneyEtAl-RAIM12,
	author = {Meaney, P. J. and Lastras-Montano, L. A. and Papazova, V. K. and Stephens, E. and Johnson, J. S. and Alves, L. C. and O'Connor, J. A. and Clarke, W. J.},
	date-added = {2021-11-16 08:50:11 +0900},
	date-modified = {2021-11-16 08:50:35 +0900},
	journal = {IBM Journal of Research and Development},
	number = {1.2},
	pages = {4:1-4:11},
	title = {{IBM zEnterprise redundant array of independent memory subsystem}},
	volume = {56},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1147/JRD.2011.2177106}}

@inproceedings{SchirmeierEtAl-RAMpage11,
	author = {Schirmeier, Horst and Neuhalfen, Jens and Korb, Ingo and Spinczyk, Olaf and Engel, Michael},
	booktitle = {{Proc. of the 2011 IEEE 17th Pacific Rim International Symposium on Dependable Computing (PRDC '11)}},
	date-added = {2021-11-16 07:48:51 +0900},
	date-modified = {2021-11-16 07:49:26 +0900},
	pages = {89-98},
	title = {{RAMpage: Graceful Degradation Management for Memory Errors in Commodity Linux Servers}},
	year = {2011}}

@inproceedings{HwangEtAl-ASPLOS12,
	abstract = {Main memory is one of the leading hardware causes for machine crashes in today's datacenters.
Designing, evaluating and modeling systems that are resilient against memory errors
requires a good understanding of the underlying characteristics of errors in DRAM
in the field. While there have recently been a few first studies on DRAM errors in
production systems, these have been too limited in either the size of the data set
or the granularity of the data to conclusively answer many of the open questions on
DRAM errors. Such questions include, for example, the prevalence of soft errors compared
to hard errors, or the analysis of typical patterns of hard errors. In this paper,
we study data on DRAM errors collected on a diverse range of production systems in
total covering nearly 300 terabyte-years of main memory. As a first contribution,
we provide a detailed analytical study of DRAM error characteristics, including both
hard and soft errors. We find that a large fraction of DRAM errors in the field can
be attributed to hard errors and we provide a detailed analytical study of their characteristics.
As a second contribution, the paper uses the results from the measurement study to
identify a number of promising directions for designing more resilient systems and
evaluates the potential of different protection mechanisms in the light of realistic
error patterns. One of our findings is that simple page retirement policies might
be able to mask a large number of DRAM errors in production systems, while sacrificing
only a negligible fraction of the total DRAM in the system.},
	author = {Hwang, Andy A. and Stefanovici, Ioan A. and Schroeder, Bianca},
	booktitle = {{Proc. of the 17th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '12)}},
	date-added = {2021-11-11 09:57:35 +0900},
	date-modified = {2021-11-11 09:58:07 +0900},
	pages = {111--122},
	title = {{Cosmic Rays Don't Strike Twice: Understanding the Nature of DRAM Errors and the Implications for System Design}},
	year = {2012}}

@inproceedings{AtikogluEtAl-SIGMETRICS12,
	abstract = {Key-value stores are a vital component in many scale-out enterprises, including social
networks, online retail, and risk analysis. Accordingly, they are receiving increased
attention from the research community in an effort to improve their performance, scalability,
reliability, cost, and power consumption. To be effective, such efforts require a
detailed understanding of realistic key-value workloads. And yet little is known about
these workloads outside of the companies that operate them. This paper aims to address
this gap.To this end, we have collected detailed traces from Facebook's Memcached
deployment, arguably the world's largest. The traces capture over 284 billion requests
from five different Memcached use cases over several days. We analyze the workloads
from multiple angles, including: request composition, size, and rate; cache efficacy;
temporal patterns; and application use cases. We also propose a simple model of the
most representative trace to enable the generation of more realistic synthetic workloads
by the community.Our analysis details many characteristics of the caching workload.
It also reveals a number of surprises: a GET/SET ratio of 30:1 that is higher than
assumed in the literature; some applications of Memcached behave more like persistent
storage than a cache; strong locality metrics, such as keys accessed many millions
of times a day, do not always suffice for a high hit rate; and there is still room
for efficiency and hit rate improvements in Memcached's implementation. Toward the
last point, we make several suggestions that address the exposed deficiencies.},
	author = {Atikoglu, Berk and Xu, Yuehai and Frachtenberg, Eitan and Jiang, Song and Paleczny, Mike},
	booktitle = {{Proc. of the 12th ACM SIGMETRICS/PERFORMANCE Joint International Conference on Measurement and Modeling of Computer Systems (SIGMETRICS '12)}},
	date-added = {2021-11-09 09:35:30 +0900},
	date-modified = {2021-11-09 09:36:11 +0900},
	pages = {53--64},
	title = {{Workload Analysis of a Large-Scale Key-Value Store}},
	year = {2012}}

@inproceedings{YangEtAl-OSDI20,
	author = {Yang, Juncheng and Yue, Yao and Rashmi, KV},
	booktitle = {{Proc. of the 14th USENIX Symposium on Operating Systems Design and Implementation (OSDI '20)}},
	date-added = {2021-11-09 09:32:27 +0900},
	date-modified = {2021-11-09 09:32:58 +0900},
	pages = {191--208},
	title = {{A large scale analysis of hundreds of in-memory cache clusters at Twitter}},
	year = {2020}}

@inproceedings{ChoiEtAl-EuroSys21,
	abstract = {The advent of Persistent Memory (PM) devices enables systems to actively persist information
at low costs, including program state traditionally in volatile memory. However, this
trend poses a reliability challenge in which multiple classes of soft faults that
go away after restart in traditional systems turn into hard (recurring) faults in
PM systems. In this paper, we first characterize this rising problem with an empirical
study of 28 real-world bugs. We analyze how they cause hard faults in PM systems.
We then propose Arthas, a tool to effectively recover PM systems from hard faults.
Arthas checkpoints PM states via fine-grained versioning and uses program slicing
of fault instructions to revert problematic PM states to good versions. We evaluate
Arthas on 12 real-world hard faults from five large PM systems. Arthas successfully
recovers the systems for all cases while discarding 10\texttimes{} less data on average compared
to state-of-the-art checkpoint-rollback solutions.},
	author = {Choi, Brian and Burns, Randal and Huang, Peng},
	booktitle = {{Proc. of the Sixteenth European Conference on Computer Systems (EuroSys '21)}},
	date-added = {2021-11-09 09:23:37 +0900},
	date-modified = {2021-11-09 09:24:09 +0900},
	pages = {441--457},
	title = {{Understanding and Dealing with Hard Faults in Persistent Memory Systems}},
	year = {2021}}

@inproceedings{LiangEtAl-SoCC16,
	abstract = {With the proliferation of software and hardware support for persistent memory (PM)
like PCM and NV-DIMM, we envision that PM will soon become a standard component of
commodity cloud, especially for those applications demanding high performance and
low latency. Yet, current virtualization software lacks support to efficiently virtualize
and manage PM to improve cost-effectiveness, performance, and endurance.In this paper,
we make the first case study on extending commodity hypervisors to virtualize PM.
We explore design spaces to abstract PM, including load/store accessible guest-physical
memory and a block device. We design and implement a system, namely VPM, which provides
both full-virtualization as well as a para-virtualization interface that provide persistence
hints to the hypervisor. By leveraging the fact that PM has similar characteristics
with DRAM except for persistence, VPM supports transparent data migration by leveraging
the two-dimensional paging (e.g., EPT) to adjust the mapping between guest PM to host
physical memory (DRAM or PM). Finally, VPM provides efficient crash recovery by properly
bookkeeping guest PM's states as well as key hypervisor-based states into PM in an
epoch-based consistency approach. Experimental results with VPM implemented on KVM
and Linux using simulated PCM and NVDIMM show that VPM achieves a proportional consolidation
of PM with graceful degradation of performance. Our para-virtualized interface further
improves the consolidation ratio with less overhead for some workloads.},
	author = {Liang, Liang and Chen, Rong and Chen, Haibo and Xia, Yubin and Park, KwanJong and Zang, Binyu and Guan, Haibing},
	booktitle = {{Proc. of the Seventh ACM Symposium on Cloud Computing (SoCC '16)}},
	date-added = {2021-11-01 08:08:34 +0900},
	date-modified = {2021-11-01 08:09:17 +0900},
	pages = {126--140},
	title = {{A Case for Virtualizing Persistent Memory}},
	year = {2016}}

@misc{thp,
	author = {{The kernel development community}},
	date-added = {2021-10-24 10:11:32 +0900},
	date-modified = {2021-10-24 10:12:47 +0900},
	note = {\url{https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html}},
	title = {{Transparent Hugepage Support}},
	year = {Accessed: 2021-10-21}}

@inproceedings{HuaEtAl-EPTI,
	author = {Zhichao Hua and Dong Du and Yubin Xia and Haibo Chen and Binyu Zang},
	booktitle = {{Proc. of the 2018 USENIX Annual Technical Conference (USENIX ATC '18)}},
	date-added = {2021-10-23 10:49:57 +0900},
	date-modified = {2021-10-23 10:50:40 +0900},
	pages = {255--266},
	title = {{EPTI: Efficient Defence against Meltdown Attack for Unpatched VMs}},
	year = {2018}}

@inproceedings{MilosEtAl-Satori,
	author = {Grzegorz Mi{\l}o{\'s} and Derek G. Murray and Steven Hand and Michael A. Fetterman},
	booktitle = {{Proc. of the 2009 USENIX Annual Technical Conference (USENIX ATC '09)}},
	date-added = {2021-10-23 10:42:08 +0900},
	date-modified = {2021-10-23 10:43:54 +0900},
	pages = {1-14},
	title = {{Satori: Enlightened Page Sharing}},
	year = {2009}}

@article{corba,
	author = {Steve Vinoski},
	date-added = {2021-10-22 09:18:11 +0900},
	date-modified = {2021-10-22 09:18:57 +0900},
	journal = {{IEEE Communications Magazine}},
	number = {2},
	pages = {46-55},
	title = {CORBA: integrating diverse applications within distributed heterogeneous environments},
	volume = {35},
	year = {1997}}

@misc{javarmi,
	author = {Oracle},
	date-added = {2021-10-22 08:39:53 +0900},
	date-modified = {2021-10-22 08:44:03 +0900},
	note = {\url{https://docs.oracle.com/javase/8/docs/technotes/guides/rmi/index.html}},
	title = {{The Jave Remote Method Invocation API (Java RMI)}},
	year = {Accessed: 2021-10-21}}

@article{BirrellEtAl-RPC,
	author = {Birrell, Andrew D. and Nelson, Bruce Jay},
	date-added = {2021-10-22 08:33:20 +0900},
	date-modified = {2021-10-22 08:34:39 +0900},
	journal = {{ACM Trans. Comput. Syst.}},
	number = {1},
	pages = {39--59},
	title = {{Implementing Remote Procedure Calls}},
	volume = {2},
	year = {1984}}

@misc{kvm,
	author = {Red Hat OpenShift Online},
	date-added = {2021-10-22 08:20:27 +0900},
	date-modified = {2021-10-22 08:22:05 +0900},
	note = {\url{https://linux-kvm.org/page/Main_Page}},
	title = {LINUX KVM},
	year = {Accessed 2021-10-21}}

@article{Goldberg-VM,
	author = {Robert P.~Goldberg},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {IEEE Computer Magazine},
	number = {6},
	pages = {34--45},
	priority = {2},
	title = {Survey of Virtual Machine Research},
	volume = {7},
	year = {1974}}

@inproceedings{RashidEtAl-Accent,
	author = {Richard F.~Rashid and George G.~Robertson},
	booktitle = {Proc. of the 8th ACM Symposium on Operating Systems Principles (SOSP '81)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {64--75},
	title = {{Accent: A communication oriented network operating system kernel}},
	year = {1981}}

@misc{Discard,
	author = {{J.~Postel}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {http://www.rfc-editor.org/rfc/rfc863.txt},
	title = {{RFC863: Discard Protocol}},
	year = {1983}}

@inproceedings{AccettaEtAl-Mach,
	author = {Mike Accetta and Robert Baron and William Bolosky and David Golub and Richard Rashid and Avadis Tevanian and Michael Young},
	booktitle = {Proc. of Summer USENIX Conference},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {93--112},
	title = {{Mach: A new kernel foundation for UNIX Development}},
	year = {1986}}

@inproceedings{MichaelEtAl-Condor88,
	author = {Michael J.~Litzkow and Miron Livny and Matt W.~Mutka},
	booktitle = {Proc. of the 8th International Conference on Distributed Computing Systems (ICDCS '88)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {104--111},
	title = {{Condor - A Hunter of Idle Workstations}},
	year = {1988}}

@inproceedings{PhillipEtAl-Stealth,
	author = {Phillip Krueger and Rohit Chawla},
	booktitle = {{Proc. of the 11th International Conference on Distributed Computing Systems}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {May},
	pages = {336--343},
	title = {{The Stealth Distributed Scheduler}},
	year = {1991}}

@inproceedings{DruschelEtAl-Lipto,
	author = {Peter Druschel and Larry L.~Peterson and Norman C.~Hutchinson},
	booktitle = {Proc. of the 12th IEEE International Conference on Distributed Computing Systems (ICDCS '92)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {512--520},
	title = {{Beyond Micro-Kernel Design: Decoupling Modularity and Protection in Lipto}},
	year = {1992}}

@inproceedings{LiedtkeEtAl-IPC,
	author = {{Jochen Liedtke}},
	booktitle = {Proc. of the 14th ACM Symposium on Operating Systems Principles (SOSP '93)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {175--188},
	title = {{Improving IPC by Kernel Design}},
	year = {1993}}

@inproceedings{BrakmoEtAl-Vegas,
	author = {Lawrence S.~Brakmo and Sean W.~O'Malley and Larry L.~Peterson},
	booktitle = {Proc. of the ACM Conference on Communications architechtures, protocols and applications (SIGCOMM '94)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Aug.},
	pages = {24--35},
	title = {{TCP Vegas: New Techniques for Congestion Detection and Avoidance}},
	year = {1994}}

@inproceedings{Waldspurger94-Lottery,
	author = {Carl A.~Waldspurger and William E.~Weihl},
	booktitle = {Proc. of the 1st USENIX Symposium on Operating System Design and Implementation (OSDI '94)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Nov.},
	pages = {1--12},
	title = {{Lottery Scheduling: Flexible Proportional-Share Resource Management}},
	year = {1994}}

@techreport{Waldspurger-Stride,
	author = {Cart A.~Waldpurger and William E.~Weihl},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	institution = {MIT/LCS/TM-528, Massachusetts Institute of Technology},
	title = {{Stride Scheduling: Deterministic Proportional-Share Resource Management}},
	year = {1995}}

@misc{apache,
	author = {{The Apache Software Foundation}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {{\url{http://www.apache.org/}}},
	title = {Apache {HTTP} Server},
	year = {1995}}

@inproceedings{EnglerEtAl-hotos,
	author = {Dawson R.~Engler and M. Frans Kaashoek},
	booktitle = {Proc. of the 5th Workshop on Hot Topics in Operating Systems (HotOS-V)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {May},
	pages = {78},
	publisher = {IEEE Computer Society},
	title = {{Exterminate All Operating System Abstractions}},
	year = {1995}}

@inproceedings{EdwardsEtAl-UTCP,
	author = {Aled Edwards and Steve Muir},
	booktitle = {Proc. of the ACM Conference on Applications, Technologies, Architectures, and Protocols for Computer Communication (SIGCOMM '95)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Aug.},
	pages = {196--205},
	title = {{Experiences implementing a high performance TCP in user-space}},
	year = {1995}}

@inproceedings{Liedtke-L4,
	author = {{Jochen Liedtke}},
	booktitle = {{Proc. of the 15th ACM Symposium on Operating Systems Principles (SOSP '95)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {237--250},
	title = {{On $\mu$-Kernel Construction}},
	year = {1995}}

@inproceedings{EnglerEtAl-Exokernel,
	author = {Dawson R.~Engler and M. Frans Kaashoek and James O'Toole},
	booktitle = {Proc. of the 15th ACM Symposium on Operating Systems Principles (SOSP'95)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {251-266},
	title = {{Exokernel: An Operating System Architecture for Application-Level Resource Management}},
	year = {1995}}

@inproceedings{BershadEtAl-Spin,
	author = {Braian N.~Bershad and Stefan Savage and Przemyslaw Pardyak and Emin Gun Sirer and Marc E.~Fiuczynski and David Becker and Craig Chambers and Susan Eggers},
	booktitle = {Proc. of the 15th ACM Symposium on Operating Systems Principles (SOSP '95)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {267--283},
	title = {{Extensibility, Safety and Performance in the {SPIN} Operating System}},
	year = {1995}}

@article{BressoudEtAl-ft,
	author = {Thomas C. Bressoud and Fred B. Schneider},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {ACM Transaction Computer System},
	month = {Feb.},
	number = {1},
	pages = {80--107},
	title = {{Hypervisor-Based Fault Tolerance}},
	volume = {14},
	year = {1996}}

@inproceedings{SeltzerEtAl-Vino,
	author = {Margo I.~Seltzer and Yasuhiro Endo and Christopher Small and Keith A.~Smith},
	booktitle = {Proc. of the 2nd USENIX Symposium on Operating Systems Design and Implementation (OSDI '96)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {213--227},
	title = {{Dealing With Disaster: Surviving Misbehaved Kernel Extensions}},
	year = {1996}}

@misc{token-bucket,
	author = {S.~Shenker and J.~Wroclawski},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {http://www.rfc-editor.org/rfc/rfc2216.txt},
	title = {{RFC2216: Network Element Service Specification Template}},
	year = {1997}}

@inproceedings{KaashoekEtAl-Exokernel,
	author = {M. Frans Kaashoek and Dawson R. Engler and Gregory R. Ganger and H{\'e}ctor M. Brice{\~n}o and Russell Hunt and David Mazi{\`e}res and Thomas Pinckney and Robert Grimm and John Jannotti and Kenneth Mackenzie},
	booktitle = {{Proc. of the 16th ACM Symposium on Operating Systems Principles (SOSP '97)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {52--65},
	title = {{Application Performance and Flexibility on Exokernel Systems}},
	year = {1997}}

@inproceedings{HartigEtAl-micro,
	author = {Hermann H\H{a}rtig and Michael Hohmuth and Jochen Liedtke and Sebastian Sch\H{o}nberg and Jean Wolter},
	booktitle = {Proc. of the 16th ACM Symposium on Operating Systems Principles (SOSP '97)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {66--77},
	title = {{The Performance of $\mu$-Kernel-Based Systems}},
	year = {1997}}

@inproceedings{BugnionEtAl-Disco,
	author = {Edouard Bugnion and Scott Devine and Mendel Rosenblum},
	booktitle = {{Proc. of the 16th ACM Symposium on Operating Systems Principles (SOSP '97)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {143--156},
	title = {{Disco: Running Commodity Operating Systems on Scalable Multiprocessors}},
	year = {1997}}

@inproceedings{VergheseEtAl-PI,
	author = {Ben Verghese and Anoop Gupta and Mendel Rosenblum},
	booktitle = {Proc. of the 8th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '98)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {181--192},
	title = {{Performance Isolation: Sharing and Isolation in Shared-Memory Multiprocessors}},
	year = {1998}}

@misc{RFC2581,
	author = {M.~Allman and V.~Paxson and W.~Stevens},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {http://www.rfc-editor.org/rfc/rfc2581.txt},
	title = {{RFC2581: TCP Congestion Control}},
	year = {1999}}

@inproceedings{TamchesEtAl-KernInst,
	author = {Ariel Tamches and Barton P. Miller},
	booktitle = {{Proc. of the 3rd USENIX Symposium on Operating Systems Design and Implementation (OSDI '99)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Feb.},
	pages = {117-130},
	title = {{Fine-Grained Dynamic Instrumentation of Commodity Operating System Kernels}},
	year = {1999}}

@inproceedings{SteereEtAl-Feedback,
	author = {David C.~Steere and Ashvin Goel and Joshua Gruenberg and Dylan McNamee and Calton Pu and Jonathan Walpole},
	booktitle = {Proc. of the 3rd USENIX Symposium on Operating System Design and Implementation (OSDI '99)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Feb.},
	pages = {145--158},
	title = {{A Feedback-driven Proportion Allocator for Real-Rate Scheduling}},
	year = {1999}}

@inproceedings{BangaEtAl-RContainer,
	author = {Gaurav Banga and Peter Druschel and Jeffrey C. Mogul},
	booktitle = {Proc. of the 3rd USENIX Symposium on Operating System Design and Implementation (OSDI '99)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Feb.},
	pages = {45--58},
	title = {{Resource Containers: A New Facility for Resource Management in Server Systems}},
	year = {1999}}

@inproceedings{Waldspurger99-Lottery,
	author = {David Petrou and John W.~Milford and Garth A.~Gibson},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '99)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {1-14},
	title = {{Implementing Lottery Scheduling: Matching the Specializations in Traditional Schedulers}},
	year = {1999}}

@inproceedings{DouceurEtAl-MSManners,
	author = {John R.~Douceur and William J.~Bolosky},
	booktitle = {Proc. of the 17th ACM Symposium on Operating Systems Principles (SOSP '99)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {247--260},
	title = {{Progress-based regulation of Low-importance processes}},
	year = {1999}}

@article{RyuEtAl-LingerLonger,
	author = {Kyung D.~Ryu and Jeffery K.~Hollingsworth and Peter J.~Keleher},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	pages = {683--698},
	title = {{Exploiting Fine Grained Idle Periods in Networks of Workstations}},
	volume = {11},
	year = {2000}}

@inproceedings{SullivanEtAl-ExLottery,
	author = {David G.~Sullivan and Margo I.~Saltzer},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '00)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {337--350},
	title = {{{Isolation with Flexibility: {A} Resource Management Framework for Central Servers}}},
	year = 2000}

@inproceedings{ChangEtAl-WSand,
	author = {Fangzhe Chang and Ayal Itzkovitz and Vijay Karamcheti},
	booktitle = {Proc. of the 4th USENIX Windows System Symposium (WSS 2000)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Aug.},
	pages = {25--36},
	title = {{User-level Resource-constrained Sandboxing}},
	year = {2000}}

@inproceedings{LumbEtAl00-FDisk,
	author = {Christopher R.~Lumb and Jiri Schindler and Gregory R.~Ganger and David F.~Nagle},
	booktitle = {Proc. of the 4th USENIX Symposium on Operating System Design and Implementation (OSDI '00)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {87-102},
	title = {{Towards Higher Disk Head Utilization: Extracting Free Bandwidth From Busy Disk Drives}},
	year = {2000}}

@inproceedings{BrownEtAl-Mhogs,
	author = {Angela Demke Brown and Todd C.~Mowry},
	booktitle = {Proc. of the 4th USENIX Symposium on Operating System Design and Implementation (OSDI'00)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {31-44},
	title = {{Taming the Memory Hogs: Using Compiler-Inserted Releases to Manage Physical Memory Intelligently}},
	year = {2000}}

@article{KorpelaEtAl-Seti,
	author = {Eric Korpela and Dan Werthimer and David Anderson and Jeff Cobb and Matt Lebofsky},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {IEEE Computing in Science and Engineering},
	number = {1},
	optmonth = {Jan./Feb.},
	pages = {78--83},
	title = {{SETI@HOME-Massively Distributed Computing for SETI}},
	volume = {3},
	year = {2001}}

@inproceedings{ElyEtAl-Apline,
	author = {David Ely and Stefan Savage and David Wetherall},
	booktitle = {Proc. of the 3rd USENIX Symposium on Internet Technologies and System (USITS '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {171--184},
	title = {{Apline: A User-Level Infrastructure for Network Protocol Development}},
	year = {2001}}

@inproceedings{SugermanEtAl-VMIO,
	author = {Jeremy Sugerman and Ganesh Venkitachalam and Beng-Hong Lim},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {1--14},
	title = {{Virtualizing I/O Devices on VMware Workstation's Hosted Virtual Machine Monitor}},
	year = {2001}}

@inproceedings{NiehEtAl-VTRR,
	author = {Jason ~Nieh and Chris ~Vaill and Hua ~Zhong},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {245--259},
	title = {{Virtual-Time Round-Robin : An O(1) Proportional Share Scheduler}},
	year = 2001}

@inproceedings{Moore-Dprobes,
	author = {Richard J. Moore},
	booktitle = {Proc. of the FREENIX Track: the USENIX Annual Technical Conference (FREENIX '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {297-308},
	title = {{A Universal Dynamic Trace for Linux and other Operating Systems}},
	year = {2001}}

@inproceedings{ChenEtAl-SemanticGap,
	author = {Peter M. Chen and Brian D. Noble},
	booktitle = {Proc. of the 8th Workshop on Hot Topics in Operating Systems (HotOS-VIII)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {133-138},
	title = {{When Virtual is Better than Real.}},
	year = {2001}}

@inproceedings{Condor,
	author = {James Frey and Todd Tannenbaum and Miron Livny and Ian Foster and Steven Tuecke},
	booktitle = {Proc. of the 10th IEEE International Symposium on High Performance Distributed Computing (HPDC '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Aug.},
	pages = {55--63},
	title = {{Condor-G:A Computation Management Agent for Multi-Institutional Grids}},
	year = {2001}}

@inproceedings{IyerEtAl-Anticipatory,
	author = {Sitaram Iyer and Peter Druschel},
	booktitle = {Proc. of the 18th ACM Symposium on Operating Systems Principles (SOSP '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {117--130},
	title = {{Anticipatory scheduling: a disk scheduling framework to overcome deceptive idleness in synchronous I/O}},
	year = {2001}}

@inproceedings{Arpaci-DusseauEtAl-Graybox,
	author = {Andrea C.~Arpaci-Dusseau and Remzi H. ~Arpaci-Dusseau},
	booktitle = {Proc. of the 18th ACM Symposium on Operating Systems Principles (SOSP '01)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {43--56},
	title = {{Information and Control in Gray-Box Systems}},
	year = {2001}}

@inproceedings{RyuEtAl-RWindow,
	author = {Kyung D.~Ryu and Jeffery K.~Hollingsworth and Peter J.~Keleher},
	booktitle = {Proc. of the ACM/IEEE Conference on Supercomputing (SC '01) (CDROM)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Nov.},
	pages = {3--3},
	title = {{Efficient Network and I/O Throttling for Fine-Grain Cycle Stealing}},
	year = {2001}}

@inproceedings{LumbEtAl02-FSched,
	author = {Christopher R.~Lumb and Jiri Schindler and Gregory R.~Ganger},
	booktitle = {Proc. of the 1st USENIX Symposium on File and Storage Technologies (FAST '02)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jan.},
	pages = {10-22},
	title = {{Freeblock Scheduling Outside of Disk Firmware}},
	year = {2002}}

@article{LarsonEtAl-Folding,
	author = {Stefan M. Larson and Christopher D. Snow and Michael Shirts and Vijay S. Pande},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {Computational Genomics},
	publisher = {Horizon Press},
	title = {{Folding@Home and Genome@Home: Using distributed computing to tackle previously intractable problems in computational biology}},
	year = {2002}}

@article{gnutella,
	author = {Matei Ripeanu and Ian Foster and Adriana Iamnitchi},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {IEEE Internet Computing Journal},
	month = {Feb.},
	number = {1},
	pages = {50--57},
	publisher = {Springer-Verlag},
	title = {{Mapping the Gnutella Network: Properties of Large-Scale Peer-to-Peer Systems and Implications for System Design}},
	volume = {6},
	year = 2002}

@inproceedings{BurnettEtAl-Dust,
	author = {Nathan C.~Burnett and John Bent and Andrea C.~Arpaci-Dusseau and Remzi H.~Arpaci-Dusseau},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '02)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {29--44},
	title = {{Exploiting Gray-Box Knowledge of Buffer-Cache Management}},
	year = {2002}}

@inproceedings{WhitakerEtAl-Denali,
	author = {Andrew Whitaker and Marianne Shaw and Steven D. Gribble},
	booktitle = {Proc. of the 5th USENIX Symposium on Operating System Design and Implementation (OSDI '02)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {195--209},
	title = {{Scale and Performance in the Denali Isolation Kernel}},
	year = {2002}}

@inproceedings{VenkataramaniEtAl-TCPNice,
	author = {Arun Venkataramani and Ravi Kokku and Mike Dahlin},
	booktitle = {Proc. of the 5th USENIX Symposium on Operating System Design and Implementation (OSDI '02)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {329--344},
	title = {{TCP Nice: A Mechanism for Background Transfers}},
	year = {2002}}

@inproceedings{GeorgeEtAl02-Revirt,
	author = {George W.~Dunlap and Samuel T.~King and Sukru Cinar and Murtaza A.~Basrai and Peter M. Chen},
	booktitle = {Proc. of the 5th USENIX Symposium on Operating System Design and Implementation (OSDI '02)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {211--224},
	title = {{Revirt: Enabling Intrusion Analysis Through Virtual-Machine Logging and Replay}},
	year = {2002}}

@article{DynysEtAl-OSSurvey,
	author = {G. Denys and F. Piessens and F. Matthijs},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {ACM Computer Survey},
	month = {Dec.},
	number = {4},
	pages = {450--468},
	title = {{A Survey of Customizability in Operating Systems Research}},
	volume = {34},
	year = {2002}}

@inproceedings{Xuxian03-soda,
	address = {Washington, DC, USA},
	author = {Xuxian Jiang and Dongyan Xu},
	booktitle = {Proc. of the 12th IEEE International Symposium on High Performance Distributed Computing (HPDC'03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	pages = {174--183},
	publisher = {IEEE Computer Society},
	title = {SODA: A Service-On-Demand Architecture for Application Service Hosting Utility Platforms},
	year = {2003}}

@article{ChienEtAl-Entropia,
	author = {Andrew Chien and Brad Calder Stephen Elbert and Karan Bhatia},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {Journal of Parallel and Distributed Computing},
	pages = {597--610},
	title = {{Entropia: architecture and performance of an enterprise desktop grid system}},
	volume = {63},
	year = {2003}}

@artcle{wataru-03,
	author = {Wataru Kaneko and Kenji Kono and Kentaro Shimizu},
	booktitle = {Proc. of International Conference on Parallel and Distributed Processing and Networks},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Feb.},
	pages = {622--699},
	title = {{Preemptive Resource Management: Defending against Resource Monopolizing DoS}},
	year = {2003}}

@inproceedings{grid-vm,
	author = {Renato J.~Figueiredo and Peter A.~Dinda and Jose A.~B.~Fortes},
	booktitle = {Proc. of the 23rd IEEE International Conference on Distributed Computing Systems (ICDCS 2003)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {May},
	pages = {550--559},
	title = {{A Case For Grid Computing On Virtual Machines}},
	year = {2003}}

@inproceedings{PopoviciEtAl-Mimic,
	author = {Florentina I. Popovici and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {297--310},
	title = {{Robust, Portable I/O Scheduling with the Disk Mimic}},
	year = {2003}}

@inproceedings{NugentEtAl-Place,
	author = {James Nugent and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {311--324},
	title = {{Controlling your PLACE in the File System with Gray-box Techniques}},
	year = {2003}}

@inproceedings{GhiasEtAl-USP,
	author = {S.~Ghias and S.~Zeadally},
	booktitle = {Proc. of the 8th IEEE Symposium on Computers and Communications},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {30--35},
	title = {{Design and Implementaion of a User-level Prioritization Service}},
	year = {2003}}

@inproceedings{ChenEtAl-Ebased,
	author = {Zhifeng Chen and Yuanyuan Zho and Kai Li},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {269--282},
	title = {{Eviction-based Cache Placement for Storage Caches}},
	year = {2003}}

@inproceedings{KingEtAl-Back,
	author = {Samuel T. King and Peter M. Chen},
	booktitle = {{Proc. of the 19th ACM Symposium on Operating Systems Principles (SOSP '03)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {223--236},
	title = {{Backtracking Intrusions}},
	year = {2003}}

@inproceedings{GhemawatEtAl-GFS,
	author = {Sanjay Ghemawat and Howard Gobioff and Shun-Tak Leung},
	booktitle = {{Proc. of the 19th ACM Symposium on Operating Systems Principles (SOSP '03)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {29--43},
	title = {{The Google File System}},
	year = {2003}}

@inproceedings{GarfinkelEtAl-Terra,
	author = {Tal Garfinkel and Ben Pfaff and Jim Chow and Mendel Rosenblum and Dan Boneh},
	booktitle = {Proc. of the 19th ACM Symposium on Operating Systems Principles (SOSP '03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {193--206},
	title = {{Terra: A Virtual-Machine Based Platform for Trusted Computing}},
	year = {2003}}

@inproceedings{BarhamEtAl-Xen,
	author = {Paul Barham and Boris Dragovic and Keir Fraser and Steven Hand and Tim Harris and Alex Ho and Rolf Neugebauer and Ian Pratt and Andrew Warfield},
	booktitle = {Proc. of the 19th ACM Symposium on Operating Systems Principles (SOSP '03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {164--177},
	title = {{Xen and Art of Virtualization}},
	year = {2003}}

@inproceedings{Arpaci-DusseauEtAl-Infokernel,
	author = {Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau and Nathan C. Burnett and Timothy E. Denehy and Thomas J. Engle and Haryadi S. Gunawi and James Nugent and Florentina I. Popovici},
	booktitle = {Proc. of the 19th ACM Symposium on Operating Systems Principles (SOSP '03)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {90--105},
	title = {{Transforming Policies into Mechanisms with Infokernel}},
	year = {2003}}

@manual{Sun-Consoli,
	address = {http://www.sun.com/datacenter/consolidation/solaris10\_whitepaper.pdf},
	author = {{Sun Microsystems}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	title = {{Consolidating Applications with Solaris Containers (White Paper)}},
	year = {2004}}

@inproceedings{GuptaEtAl-Uucs,
	author = {Ashish Gupta and Bin Lin and Peter A. Dinda},
	booktitle = {Proc. of the 13th IEEE International Symposium on High Performance Distributed Computing (HPDC '04)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	pages = {214--224},
	title = {{Measuring and Understanding User Comfort With Resource Borrowing}},
	year = {2004}}

@inproceedings{UhligEtAl-PBalloon,
	author = {Volkmar Uhlig and Joshua LeVasseur and Espen Skoglund and Uwe Dannowski},
	booktitle = {Proc. of the 3rd USENIX Virtual Machine Research and Technology Symposium (VM '04)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {May},
	pages = {43--56},
	title = {{Towards Scalable Multiprocessor Virtual Machines}},
	year = 2004}

@inproceedings{YaopingEtAl-Debox,
	author = {Yaoping Ruan and Vivek Pai},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '04)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {1--14},
	title = {{Making the ``Box'' Transparent: System Call Performance as a First-class Result}},
	year = 2004}

@inproceedings{CantrillEtAl-DTrace,
	author = {Bryan Cantrill and Michael W.~Shapiro and Adam H.~Leventhal},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '04)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {15--28},
	title = {{Dynamic Instrumentation of Production Systems}},
	year = {2004}}

@inproceedings{NewhouseEtAl04-ALPS,
	author = {Travis Newhouse and Joseph Pasquale},
	booktitle = {Proc. of IEEE International Conference on Service Computing (SCC '04)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Sep.},
	pages = {311--318},
	title = {{A User-Level Framework for Scheduling within Service Execution Environments}},
	year = {2004}}

@inproceedings{FraserEtAl-Safehardware,
	author = {Keir Fraser and Steven H and Rolf Neugebauer and Ian Pratt and Andrew Warfield and Mark Williamson},
	booktitle = {Proc. of the 1st Workshop on Operating System and Architectural Support for the on demand IT InfraStructure (OASIS)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	title = {{Safe Hardware Access with the Xen Virtual Machine Monitor}},
	year = {2004}}

@inproceedings{GunawiEtAl-icTCP,
	author = {Haryadi S. Gunawi and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
	booktitle = {Proc. of the 6th USENIX Symposium on Operating Systems Design and Implementation (OSDI '04)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	title = {{Deploying Safe User-Level Network Services with icTCP}},
	year = {2004}}

@inproceedings{ButtEtAl-Buffercache,
	author = {Ali Raza Butt and Chris Gniady and Y.~Charlie Hu},
	booktitle = {Proc. of the 2005 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {157-168},
	title = {{The Performance Impact of Kernel Prefetching on Buffer Cache Replacement Algorithms}},
	year = {2005}}

@article{ArmstrongEtAl-IBM,
	author = {W. J. Armstrong and R. L. Arndt and D. C. Boutcher and R. G. Kovacs and D. Larson and K. A. Lucke and N. Nayar and R. C. Swanberg},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	journal = {IBM Journal of Research and Development},
	month = {Jul.},
	number = {4/5},
	pages = {523--532},
	title = {{Advanced Virtualization Capabilities of POWER5 Systems}},
	volume = {49},
	year = {2005}}

@inproceedings{JoshiEtAl-Introvirt,
	author = {Ashlesha Joshi and Samuel T. King and George W. Dunlap and Peter M. Chen},
	booktitle = {Proc. of the 20th ACM Symposium on Operating Systems Principles (SOSP '05)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {91--104},
	title = {{Detecting Past and Present Intrusions through Vulnerability-Specific Predicates}},
	year = 2005}

@inproceedings{EggertEtAl-Idletime,
	author = {Lars Eggert and Joseph D.~Touch},
	booktitle = {Proc. of the 20th ACM Symposium on Operating Systems Principles (SOSP '05)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {249--262},
	title = {{Idletime Scheduling with Preemption Intervals}},
	year = {2005}}

@inproceedings{VrableEtAl-Potemkin,
	author = {Michael Vrable and Justin Ma and Jay Chen and David Moore and Erik Vandekieft and Alex Snoeren and Geoffrey Voelker and Stefan Savage},
	booktitle = {{Proc. of the 20th ACM Symposium on Operating Systems Principles (SOSP '05)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {148--162},
	title = {{Scalability, Fidelity, and Containment in the Potemkin Virtual Honeyfarm}},
	year = {2005}}

@misc{Linux-Oreilly,
	author = {Daniel P.~Bovet and Marco Cesati},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	howpublished = {O'Reilly Media,Inc.},
	title = {{Understanding the LINUX KERNEL (3rd Edition)}},
	year = {2006}}

@inproceedings{AdamsEtAl-Com,
	author = {Keith Adams and Ole Agesen},
	booktitle = {{Proc. of the 12th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '07)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {2--13},
	title = {{A Comparison of Software and Hardware Techniques for x86 Virtualization}},
	year = {2006}}

@inproceedings{YamadaEtAl-DiscNice,
	author = {Hiroshi Yamada and Kenji Kono},
	booktitle = {Proc. of the 10th IEEE/IFIP Network Operations and Management Symposium (NOMS '06)(CDROM)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	title = {{User-level disk-bandwidth contrl for resource-borrowing network applications}},
	year = {2006}}

@inproceedings{KriegerEtAl-K42,
	author = {Orran Krieger and Marc Auslander and Bryan Rosenburg and Robert W. Wisniewski and Jimi Xenidis and Dilma Da Silva and Michal Ostrowski and Jonathan Appavoo and Maria Butrico and Mark Mergen and Amos Waterland and Volkmar Uhlig},
	booktitle = {Proc. of the 1st ACM European Conference on Computer Systems (EuroSys '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	pages = {133--145},
	title = {{K42: Building a Complete Operating System}},
	year = {2006}}

@inproceedings{KingEtAl-Subvirt,
	author = {Samuel T. King and Peter M. Chen and Yi-Min Wang and Chad Verbowski and Helen J. Wang and Jacob R. Lorch},
	booktitle = {{Proc. of the 2006 IEEE Symposium on Security and Privacy (S\&P '06)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {May},
	pages = {314--327},
	title = {{SubVirt: Implementing malware with virtual machines}},
	year = {2006}}

@inproceedings{GuptaEtAl-TDilating,
	author = {Diwaker Gupta and Kenneth Yocum and Marvin McNett and Alex C. Snoeren and Amin Vahdat and Geoffrey M. Voelker},
	booktitle = {Proc. of the 3rd Symposium on Networked Systems Design and Implementation (NSDI '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {May},
	pages = {87--100},
	title = {{To Infinity and Beyond: Time-Warped Network Emulation}},
	year = {2006}}

@techreport{AsaharaEtAl-ExaPeer-sigos,
	author = {Masato Asahara and Akio Shimada and Hiroshi Yamada and Kenji Kono},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	institution = {IPSJ Technical Report, 2006-OS-102},
	month = {May},
	title = {{Repositioning Replica in Content Delivery Network based on Demand Fluctuation}},
	year = {2006}}

@inproceedings{YangEtAl-FVM,
	author = {Yang Yu and Fanglu Guo and Susanta Nanda and Lap-Chung Lam and Tzi-cker Chiueh},
	booktitle = {Proc. of the 2nd ACM International Conference on Virtual Execution Environments (VEE '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {24--34},
	title = {A Feather-weight Virtual Machine for Windows Applications},
	year = {2006}}

@inproceedings{NewhouseEtAl-ALPS,
	author = {Travis Newhouse and Joseph Pasquale},
	booktitle = {Proc. of the 15th IEEE International Symposium on High Performance Distributed Computing (HPDC '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {279--290},
	title = {{ALPS: An Application-Level Proportional-Share Scheduler}},
	year = {2006}}

@inproceedings{MenonEtAl-OPTXEN,
	author = {Aravind Menon and Alan L.~Cox and Willy Zwaenepoel},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {15--28},
	title = {{Optimizing Network Virtualization in Xen}},
	year = {2006}}

@inproceedings{LiuEtAl-XenIB,
	author = {Jiuxing Liu and Wei Huang and Bulent Abali and Dhabaleswar K.~Panda},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {29--42},
	title = {{High Performance VMM-Bypass I/O in Virtual Machine}},
	year = {2006}}

@inproceedings{JonesEtAl-Antfarm,
	author = {Stephen T. Jones and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	title = {{Antfarm: Tracking Processes in a Virtual Machine Environment}},
	year = {2006}}

@inproceedings{ChenEtAl-Lucos,
	author = {Haibo Chen and Rong Chen and Fengzhe Zhang and Binyu Zang and Pen-Chung Yew},
	booktitle = {Proc. of the 2nd ACM International Conference on Virtual Execution Environments (VEE '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {35--44},
	title = {{Live Updating Operating Systems Using Virtualization}},
	year = {2006}}

@inproceedings{HerderEtAl-Minix,
	author = {Jorrit N.~Herder and Herbert Bos and Ben Gras and Philip Homburg and Andrew S.~Tanenbaum},
	booktitle = {{Proc. of the 11th Asia-Pacific Computer Systems Architecture Conference (ACSAC '06)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Sep.},
	pages = {81--94},
	title = {{Reorganizing UNIX for Reliability}},
	year = {2006}}

@inproceedings{JonesEtAl-Geiger,
	author = {Stephen T. Jones and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
	booktitle = {Proc. of the 12th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	title = {{Geiger: Monitoring the Buffer Cache in a Virtual Machine Environment}},
	year = {2006}}

@inproceedings{CrandallEtAl-TimeBomb,
	author = {Jedidiah R. Crandall and Gary Wassermann and Daniela A. S. de Oliveira and Zhendong Su and S. Felix Wu and Frederic T. Chong},
	booktitle = {Proc. of the 12th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {25--36},
	title = {{Temporal Search: Detecting Hidden Malware Timebombs with Virtual Machines}},
	year = {2006}}

@inproceedings{YangEtAl-CRAMM,
	author = {Ting Yang and Emery D.~Berger and Scott F.~Kaplan and J. Eliot B.~Moss},
	booktitle = {Proc. of the 6th USENIX Symposium on Operating Systems Design and Implementation (OSDI '06)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {103--116},
	title = {{CRAMM: Virtual Memory Support for Garbage-Collected Applications}},
	year = {2006}}

@misc{Sun-VMcon,
	author = {{Sun Microsystems}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {{\url{http://www.sun.com/virtualization}}},
	title = {{Sun Consolidation and Virtualization}},
	year = {2007}}

@inproceedings{TamEtAl-TClustering,
	author = {David Tam and Reza Azimi and Michael Stumm},
	booktitle = {Proc. of the 2nd ACM European Conference on Computer Systems (EuroSys '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {47--58},
	title = {{Thread clustering: Sharing-Aware Scheduling on SMP-CMP-SMT Multiprocessors}},
	year = {2007}}

@inproceedings{SolteszEtAl-CBased,
	author = {Stephen Soltesz and Herbert P\"{o}tzl and Marc E. Fiuczynski and Andy Bavier and Larry Peterson},
	booktitle = {Proc. of the 2nd ACM European Conference on Computer Systems (EuroSys '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {275--287},
	title = {{Container-based Operating System Virtualization: A Scalable, High-performance Alternative to Hypervisors}},
	year = {2007}}

@inproceedings{PadalaEtAl-Ascheduling,
	author = {Pradeep Padala and Kang G. Shin and Xiaoyun Zhu and Mustafa Uysal and Zhikui Wang and Sharad Singhal and Arif Merchant and Kenneth Salem},
	booktitle = {Proc. of the 2nd ACM European Conference on Computer Systems (EuroSys'07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {289--302},
	title = {{Adaptive Control of Virtualized Resources in Utility Computing Environments}},
	year = {2007}}

@inproceedings{LiEtAl-CPrefetch,
	author = {Chuanpeng Li and Kai Shen and Athanasios E. Papathanasiou},
	booktitle = {Proc. of the 2nd ACM European Conference on Computer Systems (EuroSys '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {189--202},
	title = {{Competitive Prefetching for Concurrent Sequential I/O}},
	year = {2007}}

@techreport{YamadaEtAl-Foxy-sigos,
	author = {Hiroshi Yamada and Kenji Kono},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	institution = {IPSJ Technical Report, 2007-OS-105},
	month = {Apr.},
	title = {{A Technique for Introducing Resource Management Polices with a Virtual Machine Monitor}},
	year = {2007}}

@techreport{AsaharaEtAl-ExaPeer-sigos2,
	author = {Masato Asahara and Akio Shimada and Hiroshi Yamada and Kenji Kono},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	institution = {IPSJ Technical Report, 2007-OS-105},
	month = {Apr.},
	title = {{Repositioning Replica-Servers based on Demand Fluctuation}},
	year = {2007}}

@inproceedings{YamadaEtAl-Foxy,
	author = {Hiroshi Yamada and Kenji Kono},
	booktitle = {Proc. of the 3rd ACM International Conference on Virtual Execution Environments (VEE '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {55--64},
	title = {{FoxyTechnique: Tricking Operating System Policies with a Virtual Machine Monitor}},
	year = {2007}}

@inproceedings{LuEtAl-Ghost,
	author = {Pin Lu and Kai Shen},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {29--43},
	title = {{Virtual Machine Memory Access Tracing with Hypervisor Exclusive Cache}},
	year = {2007}}

@inproceedings{Lagar-CavillaEtAl-GA,
	author = {H. Andres Lagar-Cavilla and Niraj Tolia and M. Satyanarayanan and Eyal de Lara},
	booktitle = {Proc. of the 3rd ACM International Conference on Virtual Execution Environments (VEE '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {33--43},
	title = {{VMM-Independent Graphics Acceleration}},
	year = {2007}}

@inproceedings{DingEtAl-DiskSeen,
	author = {Xiaoning Ding and Song Jiang and Feng Chen and Kei Davis and Xiaodong Zhang},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {261--274},
	title = {{DiskSeen: Exploiting Disk Layout and Access History to Enhance I/O Prefetch}},
	year = {2007}}

@manual{AMD-manual,
	author = {{AMD}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Sep.},
	note = {{\url{http://www.amd.com/us-en/assets/content_type/white_papers_andtech_docs/24593.pdf}}},
	title = {{AMD64 Programmer's Manual Volume2: System Programming}},
	year = {2007}}

@inproceedings{SeshadriEtAl-Secvisor,
	author = {Arvind Seshadri and Mark Luk and Ning Qu and Adrian Perrig},
	booktitle = {Proc. of the 21st ACM Symposium on Operating Systems Principles (SOSP '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {335--350},
	title = {{SecVisor: A Tiny Hypervisor to Provide Lifetime Kernel Code Integrity for Commodity OSes}},
	year = {2007}}

@inproceedings{JiangEtAl-VMwatcher,
	author = {Xuxian Jiang and Xinyuan Wang and Dongyan Xu},
	booktitle = {Proc. of the 14th ACM Conference on Computer and Communications Security (CCS '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Oct.},
	pages = {128--138},
	title = {{Stealthy Malware Detection Through VMM-based "Out-of-the-Box" Semantic View Reconstruction}},
	year = {2007}}

@inproceedings{YamadaEtAl-DiscNice-acs,
	author = {Hiroshi Yamada and Kenji Kono},
	booktitle = {IPSJ Transaction on Advanced Computing Systems (ACS 20)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {55--64},
	title = {{DiscNice: User-level Regulation of Disk Bandwidth}},
	year = {2007}}

@inproceedings{AsaharaEtAl-Exapeer-icpads,
	author = {Masato Asahara and Akio Shimada and Hiroshi Yamada and Kenji Kono},
	booktitle = {Proc. of the 13th IEEE International Conference on Parallel and Distributed Systems (ICPADS '07)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {55--64},
	title = {{Finding Candidate Spots for Replica-Servers based on Demand Fluctuation}},
	year = {2007}}

@misc{Sun-VBox,
	author = {{Sun Microsystems}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {{\url{http://www.virualbox.org}}},
	title = {VirtualBox},
	year = {2008}}

@misc{PradhanEtAl-Daytona,
	author = {Prashant Pradhan and Srikanth Kandula and Wen Xu and Anees Shaikh and Erich Nahum},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {{\url{http://nms.lcs.mit.edu/~kandula/data/daytona.pdf}}},
	title = {{Daytona: A User-Level TCP Stack}},
	year = {2008}}

@manual{Microsoft-API,
	author = {{Microsoft}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	note = {\url{http://msdn.microsoft.com/en-us/library/ms724953(VS.85).aspx}},
	title = {{System Information Functions (Windows)}},
	year = {2008}}

@techreport{KobayashiEtAl-sigos,
	author = {Takashi Kobayashi and Hiroshi Yamada and Kenji Kono},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	institution = {IPSJ Technical Report, 2008-OS-107},
	month = {Jan.},
	title = {{A Keylogger Detection System based on Virtual Machine Technology}},
	year = {2008}}

@inproceedings{OngaroEtAl-Sched,
	author = {Diego Ongaro and Alan L. Cox and Scott Rixner},
	booktitle = {Proc. of the 4th ACM International Conference on Virtual Execution Environments (VEE '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {1--10},
	title = {{Scheduling I/O in Virtual Machine Monitors}},
	year = {2008}}

@inproceedings{JonesEtAl-Lycosid,
	author = {Stephen T. Jones and Andrea C. Arpaci-Dusseau and Remzi H. Arpaci-Dusseau},
	booktitle = {Proc. of the 4th ACM International Conference on Virtual Execution Environments (VEE '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	pages = {91--100},
	title = {{VMM-based Hidden Process Detection and Identification using Lycosid}},
	year = {2008}}

@inproceedings{ChenEtAl-Overshadow,
	author = {Xiaoxin Chen and Tal Garfinkel and E. Christopher Lewis and Pratap Subrahmanyam and Carl A. Waldspurger and Dan Boneh and Jeffrey Dwoskin and Dan R. K. Ports},
	booktitle = {{Proc. of the 13th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '08)}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Mar.},
	title = {{Overshadow: A Virtualization-Based Approach to Retrofitting Protection in Commodity Operating Systems}},
	year = {2008}}

@inproceedings{PovznerEtAl-Fahrrad,
	author = {Anna Povzner and Tim Kaldewey and Scott Brandt and Richard Golding and Theodore M. Wong and Carlos Maltzahn},
	booktitle = {Proc. of the 3rd ACM European Conference on Computer Systems (EuroSys '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	pages = {13--25},
	title = {{Efficient Guaranteed Disk Request Scheduling with Fahrrad}},
	year = {2008}}

@inproceedings{MerkelEtAl-TAscheduling,
	author = {Andreas Merkel and Frank Bellosa},
	booktitle = {Proc. of the 3rd ACM European Conference on Computer Systems (EuroSys '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	pages = {1--12},
	title = {{Task Activity Vectors: A New Metric for Temperature-Aware Scheduling}},
	year = {2008}}

@inproceedings{GuptaEtAl-DieCast,
	author = {Diwaker Gupta and Kashi V. Vishwanath and Amin Vahdat},
	booktitle = {Proc. of the 5th Symposium on Networked Systems Design and Implementation (NSDI '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	pages = {407--421},
	title = {{DieCast: Testing Distributed Systems with an Accurate Scale Model}},
	year = {2008}}

@inproceedings{CullyEtAl-Remus,
	author = {Brendan Cully and Geoffrey Lefebvre and Dutch Meyer and Mike Feeley and Norm Hutchinson and Andrew Warfield},
	booktitle = {Proc. of the 5th USENIX Symposium on Networked Systems Design and implementation (NSDI '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	pages = {161--174},
	title = {{Remus: High Availability via Asynchronous Virtual Machine Replication}},
	year = {2008}}

@inproceedings{AbeEtAl-eurosys,
	author = {Yoshihisa Abe and Hiroshi Yamada and Kenji Kono},
	booktitle = {Proc. of the 3rd ACM European Conference on Computer Systems (EuroSys '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Apr.},
	pages = {55--64},
	title = {{Enforcing Appropriate Process Execution for Exploiting Idle Resources from Outside Operating Systems}},
	year = {2008}}

@inproceedings{SantosEtAl-Bridge,
	author = {Jose Renato Santos and Yoshio Turner and G.(John) Janakiraman and Ian Pratt},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {29--42},
	title = {{Bridging the Gap between Software and Hardware Techniques for I/O Virtualization}},
	year = {2008}}

@inproceedings{ChowEtAl-Aftersight,
	author = {Jim Chow and Tal Garfinkel and Peter M.~Chen},
	booktitle = {Proc. of the USENIX Annual Technical Conference (USENIX '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Jun.},
	pages = {1--14},
	title = {{Decoupling Dynamic Program Analysis from Execution in Virtual Environments}},
	year = {2008}}

@manual{Intel-manual,
	author = {{Intel Corporation}},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Nov.},
	note = {{\url{http://download.intel.com/design/processor/manuals/253669.pdf}}},
	title = {{Intel64 and IA-32 Architechtures Software Developer's Manual Volume 3B: System Programming Guide, Part 2}},
	year = {2008}}

@inproceedings{YangEtAl-Redline,
	author = {Ting Yang and Tongping Liu and Emery D.~Berger and Scott F.~Kaplan and J. Eliot B.~Moss},
	booktitle = {Proc. of the 8th USENIX Symposium on Operating Systems Design and Implementation (OSDI '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {73--86},
	title = {{Redline: First Class Support for Interactivity in Commodity Operating Systems}},
	year = {2008}}

@inproceedings{GuptaEtAl-DEngine,
	author = {Diwaker Gupta and Sangmin Lee and Michael Vrable and Stefan Savage and Alex C.~Snoeren and George Varghese and Geoffrey M.~Voelker and Amin Vahdat},
	booktitle = {Proc. of the 8th USENIX Symposium on Operating Systems Design and Implementation (OSDI '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {309--322},
	title = {{Difference Engine: Harnessing Memory Redundancy in Virtual Machines}},
	year = {2008}}

@inproceedings{DavidEtAl-CuriOS,
	author = {Francis M.~David and Ellick M.~Chan and Jeffrey C.~Carlyle and Roy H.~Campbell},
	booktitle = {Proc. of the 8th USENIX Symposium on Operating Systems Design and Implementation (OSDI '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {59--72},
	title = {{CuriOS: Improving Reliability through Operating System Structure}},
	year = {2008}}

@inproceedings{AnandEtAl-RWrite,
	author = {Ashok Anand and Sayandeep Sen and Andrew Krioukov and Florentina Popovici and Aditya Akella and Andrea Arpaci-Dusseau and Remzi Arpaci-Dusseau and Suman Banerjee},
	booktitle = {Proc. of the 8th USENIX Symposium on Operating Systems Design and Implementation (OSDI '08)},
	date-added = {2021-10-22 08:18:50 +0900},
	date-modified = {2021-10-22 08:18:50 +0900},
	month = {Dec.},
	pages = {161--176},
	title = {{Avoiding File System Micromanagement with Range Writes}},
	year = {2008}}

@inproceedings{ZhuEtAl-ATC20,
	author = {Weixi Zhu and Alan L. Cox and Scott Rixner},
	booktitle = {{Proc. of the 2020 USENIX Annual Technical Conference (USENIX ATC '20)}},
	date-added = {2021-10-21 12:39:17 +0900},
	date-modified = {2021-10-21 12:39:50 +0900},
	pages = {829--842},
	title = {{A Comprehensive Analysis of Superpage Management Mechanisms and Policies}},
	year = {2020}}

@inproceedings{ParkEtAl-ISCA20,
	abstract = {The availability of large pages has dramatically improved the efficiency of address
translation for applications that use large contiguous regions of memory. However,
large pages can be difficult to allocate due to fragmented memory, non-movable pages,
or the need to split a large page into regular pages when part of the large page is
forced to have a different permission status from the rest of the page. Furthermore,
they can also be expensive due to memory bloating caused by sparse accesses to application
data. In this work, we enable the allocation of large 2MB pages even in the presence
of fragmented physical memory via perforated pages. Perforated pages permit the OS
to punch 4KB page-sized holes in the physical address range allocated to a large page
and re-map them to other addresses as needed. This not only enables the system to
benefit from large pages in the presence of fragmentation, but also allows for different
permissions to exist within a large page, enhancing sharing flexibility. In addition,
it allows unused parts of a large page to be used elsewhere, mitigating memory bloating.
To minimize changes to the system, perforated pages reuse the 4KB-level page table
entries to store the hole locations and translates holes into regular 4KB pages. For
performance, the proposed technique caches the translations for hole pages in the
TLBs and track holes via cached bitmaps in the L2 TLB.By enabling large pages in the
presence of physical memory fragmentation, perforated pages increase the applicability
and resulting benefits of large pages with only minor changes to the hardware and
OS. In this work, we evaluate the effectiveness of perforated pages with timing simulations
under diverse and realistic fragmentation scenarios. Our results show that even with
fragmented memory, perforated pages accomplish 93.2% to 99.9% of the performance achievable
by ideal memory allocation, and 2.0% to 11.5% better performance over the conventional
system running with fragmented memory.},
	author = {Park, Chang Hyun and Cha, Sanghoon and Kim, Bokyeong and Kwon, Youngjin and Black-Schaffer, David and Huh, Jaehyuk},
	booktitle = {{Proc. of the ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA '20)}},
	date-added = {2021-10-21 12:37:28 +0900},
	date-modified = {2021-10-21 12:38:00 +0900},
	pages = {913--925},
	title = {{Perforated Page: Supporting Fragmented Memory Allocation for Large Pages}},
	year = {2020}}

@inproceedings{PanwarEtAl-ASPLOS18,
	abstract = {The virtual-to-physical address translation overhead, a major performance bottleneck
for modern workloads, can be effectively alleviated with huge pages. However, since
huge pages must be mapped contiguously, OSs have not been able to use them well because
of the memory fragmentation problem despite hardware support for huge pages being
available for nearly two decades. This paper presents a comprehensive study of the
interaction of fragmentation with huge pages in the Linux kernel. We observe that
when huge pages are used, problems such as high CPU utilization and latency spikes
occur because of unnecessary work (e.g., useless page migration) performed by memory
management related subsystems due to the poor handling of unmovable (i.e., kernel)
pages. This behavior is even more harmful in virtualized systems where unnecessary
work may be performed in both guest and host OSs. We present Illuminator, an efficient
memory manager that provides various subsystems, such as the page allocator, the ability
to track all unmovable pages. It allows subsystems to make informed decisions and
eliminate unnecessary work which in turn leads to cost-effective huge page allocations.
Illuminator reduces the cost of compaction (up to 99%), improves application performance
(up to 2.3x) and reduces the maximum latency of MySQL database server (by 30x). Importantly,
this work shows the effectiveness of a simple solution for long-standing huge page
related problems.},
	author = {Panwar, Ashish and Prasad, Aravinda and Gopinath, K.},
	booktitle = {{Proc. of the 23rd International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '18)}},
	date-added = {2021-10-21 12:34:36 +0900},
	date-modified = {2021-10-21 12:35:24 +0900},
	pages = {679--692},
	title = {{Making Huge Pages Actually Useful}},
	year = {2018}}

@inproceedings{GaudEtAl-ATC14,
	author = {Fabien Gaud and Baptiste Lepers and Jeremie Decouchant and Justin Funston and Alexandra Fedorova and Vivien Quema},
	booktitle = {{Proc. of the 2014 USENIX Annual Technical Conference (USENIX ATC '14)}},
	date-added = {2021-10-21 12:32:28 +0900},
	date-modified = {2021-10-21 12:33:18 +0900},
	pages = {231--242},
	title = {{Large Pages May Be Harmful on NUMA Systems}},
	year = {2014}}

@inproceedings{RamEtAl-Micro21,
	abstract = {Intel and AMD processors have long supported more than one large page sizes -- 1GB
and 2MB, to reduce address translation overheads for applications with large memory
footprints. However, previous works on large pages have primarily focused on 2MB pages,
partly due to a lack of evidence on the usefulness of 1GB pages to real-world applications.
Consequently, micro-architectural resources devoted to 1GB pages have gone underutilized
for a decade. We quantitatively demonstrate where 1GB pages can be valuable, especially
when employed in conjunction with 2MB pages. Unfortunately, the lack of application-transparent
dynamic allocation of 1GB pages is to blame for the under-utilization of 1GB pages
on today's systems. Toward this, we design and implement Trident in Linux to fully
harness micro-architectural resources devoted for all page sizes in the current x86
hardware by transparently allocating 1GB, 2MB, and 4KB pages as suitable at runtime.
Trident speeds up eight memory-intensive applications by 18%, on average, over Linux's
use of 2MB pages. We then propose Tridentpv, an extension to Trident that virtualizes
1GB pages via copy-less promotion and compaction in the guest OS. Overall, this paper
shows that adequate software enablement brings practical relevance to even GB-sized
pages, and motivates micro-architects to continue enhancing hardware support for all
large page sizes. },
	author = {Ram, Venkat Sri Sai and Panwar, Ashish and Basu, Arkaprava},
	booktitle = {{Proc. of the 54th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO '21)}},
	date-added = {2021-10-21 12:29:43 +0900},
	date-modified = {2021-10-21 12:30:21 +0900},
	pages = {1106--1120},
	title = {{Trident: Harnessing Architectural Resources for All Page Sizes in X86 Processors}},
	year = {2021}}

@inproceedings{MassEtAl-ISMM21,
	abstract = {Modern C++ server workloads rely on 2 MB huge pages to improve memory system performance
via higher TLB hit rates. Huge pages have traditionally been supported at the kernel
level, but recent work has shown that user-level, huge page-aware memory allocators
can achieve higher huge page coverage and thus performance. These memory allocators
deal with a trade-off: 1) allocate memory from the operating system (OS) at the granularity
of a huge page, achieve high performance, but potentially waste memory due to fragmentation,
or 2) limit fragmentation by breaking up huge pages into smaller 4 KB pages and returning
them to the OS, but reduce performance due to lower huge page coverage. For example,
the state-of-the-art TCMalloc allocator handles this trade-off by releasing memory
to the OS at a configurable release rate, breaking up huge pages as necessary.  This
approach balances performance and fragmentation well for machines running one workload.
For multiple applications on the same machine however, the reduction in memory usage
is only useful to overall performance if another workload uses this memory. In warehouse-scale
computers, when an application releases and then reacquires the same amount or more
memory quickly, but no other application uses the memory in the meantime, the release
causes poorer huge page coverage without any system-wide benefit.  We introduce a
metric, realized fragmentation, to capture this effect. We then present an adaptive
release policy that dynamically determines when to break up huge pages and return
them to the OS to optimize system-wide performance. We built this policy into TCMalloc
and deployed it fleet-wide in our data centers, leading to an estimated 1% fleet-wide
throughput improvement at negligible memory overhead.},
	author = {Maas, Martin and Kennelly, Chris and Nguyen, Khanh and Gove, Darryl and McKinley, Kathryn S. and Turner, Paul},
	booktitle = {{Proc. of the 2021 ACM SIGPLAN International Symposium on Memory Management (ISMM '21)}},
	date-added = {2021-10-21 11:00:12 +0900},
	date-modified = {2021-10-21 11:00:52 +0900},
	pages = {28--38},
	title = {{Adaptive Huge-Page Subrelease for Non-Moving Memory Allocators in Warehouse-Scale Computers}},
	year = {2021}}

@inproceedings{HunterEtAl-OSDI21,
	author = {A.H. Hunter and Chris Kennelly and Paul Turner and Darryl Gove and Tipp Moseley and Parthasarathy Ranganathan},
	booktitle = {{Proc. of the 15th USENIX Symposium on Operating Systems Design and Implementation (OSDI '21)}},
	date-added = {2021-10-21 10:56:45 +0900},
	date-modified = {2021-10-21 10:58:13 +0900},
	pages = {257--273},
	title = {{Beyond malloc efficiency to fleet efficiency: a hugepage-aware memory allocator}},
	year = {2021}}

@inproceedings{Karakostas-RMM,
	abstract = {Page-based virtual memory improves programmer productivity, security, and memory utilization,
but incurs performance overheads due to costly page table walks after TLB misses.
This overhead can reach 50% for modern workloads that access increasingly vast memory
with stagnating TLB sizes.To reduce the overhead of virtual memory, this paper proposes
Redundant Memory Mappings (RMM), which leverage ranges of pages and provides an efficient,
alternative representation of many virtual-to-physical mappings. We define a range
be a subset of process's pages that are virtually and physically contiguous. RMM translates
each range with a single range table entry, enabling a modest number of entries to
translate most of the process's address space. RMM operates in parallel with standard
paging and uses a software range table and hardware range TLB with arbitrarily large
reach. We modify the operating system to automatically detect ranges and to increase
their likelihood with eager page allocation. RMM is thus transparent to applications.We
prototype RMM software in Linux and emulate the hardware. RMM performs substantially
better than paging alone and huge pages, and improves a wider variety of workloads
than direct segments (one range per program), reducing the overhead of virtual memory
to less than 1% on average.},
	author = {Karakostas, Vasileios and Gandhi, Jayneel and Ayar, Furkan and Cristal, Adri\'{a}n and Hill, Mark D. and McKinley, Kathryn S. and Nemirovsky, Mario and Swift, Michael M. and \"{U}nsal, Osman},
	booktitle = {{Proc. of the 42nd Annual International Symposium on Computer Architecture (ISCA '15)}},
	date-added = {2021-10-21 10:26:19 +0900},
	date-modified = {2021-10-21 10:27:06 +0900},
	pages = {66--78},
	title = {{Redundant Memory Mappings for Fast Access to Large Memories}},
	year = {2015}}

@inproceedings{CoxEtAl-MIXTLBs,
	abstract = {Processors and operating systems (OSes) support multiple memory page sizes. Superpages
increase Translation Lookaside Buffer (TLB) hits, while small pages provide fine-grained
memory protection. Ideally, TLBs should perform well for any distribution of page
sizes. In reality, set-associative TLBs -- used frequently for their energy efficiency
compared to fully-associative TLBs -- cannot (easily) support multiple page sizes
concurrently. Instead, commercial systems typically implement separate set-associative
TLBs for different page sizes. This means that when superpages are allocated aggressively,
TLB misses may, counter intuitively, increase even if entries for small pages remain
unused (and vice-versa). We invent MIX TLBs, energy-frugal set-associative structures
that concurrently support all page sizes by exploiting superpage allocation patterns.
MIX TLBs boost the performance (often by 10-30%) of big-memory applications on native
CPUs, virtualized CPUs, and GPUs. MIX TLBs are simple and require no OS or program
changes.},
	author = {Cox, Guilherme and Bhattacharjee, Abhishek},
	booktitle = {{Proc. of the 22nd International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '17)}},
	date-added = {2021-10-21 10:24:22 +0900},
	date-modified = {2021-10-21 10:25:11 +0900},
	pages = {435--448},
	title = {{Efficient Address Translation for Architectures with Multiple Page Sizes}},
	year = {2017}}

@inproceedings{RyooEtAl-ISCA17,
	abstract = {With increasing deployment of virtual machines for cloud services and server applications,
memory address translation overheads in virtualized environments have received great
attention. In the radix-4 type of page tables used in x86 architectures, a TLB-miss
necessitates up to 24 memory references for one guest to host translation. While dedicated
page walk caches and such recent enhancements eliminate many of these memory references,
our measurements on the Intel Skylake processors indicate that many programs in virtualized
mode of execution still spend hundreds of cycles for translations that do not hit
in the TLBs.This paper presents an innovative scheme to reduce the cost of address
translations by using a very large Translation Lookaside Buffer that is part of memory,
the POM-TLB. In the POM-TLB, only one access is required instead of up to 24 accesses
required in commonly used 2D walks with radix-4 type of page tables. Even if many
of the 24 accesses may hit in the page walk caches, the aggregated cost of the many
hits plus the overhead of occasional misses from page walk caches still exceeds the
cost of one access to the POM-TLB. Since the POM-TLB is part of the memory space,
TLB entries (as opposed to multiple page table entries) can be cached in large L2
and L3 data caches, yielding significant benefits. Through detailed evaluation running
SPEC, PARSEC and graph workloads, we demonstrate that the proposed POM-TLB improves
performance by approximately 10% on average. The improvement is more than 16% for
5 of the benchmarks. It is further seen that a POM-TLB of 16MB size can eliminate
nearly all TLB misses in 8-core systems.},
	author = {Ryoo, Jee Ho and Gulur, Nagendra and Song, Shuang and John, Lizy K.},
	booktitle = {{Proc. of the 44th Annual International Symposium on Computer Architecture (ISCA '17)}},
	date-added = {2021-10-21 10:22:51 +0900},
	date-modified = {2021-10-21 10:23:29 +0900},
	pages = {469--480},
	title = {{Rethinking TLB Designs in Virtualized Environments: A Very Large Part-of-Memory TLB}},
	year = {2017}}

@inproceedings{MichailidisEtAl-MEGA,
	abstract = {Modern computer systems now feature memory banks whose aggregate size ranges from
tens to hundreds of GBs. In this context, contemporary workloads can and do often
consume vast amounts of main memory. This upsurge in memory consumption routinely
results in increased virtual-to-physical address translations, and consequently and
more importantly, more translation misses. Both of these aspects collectively do hamper
the performance of workload execution. A solution aimed at dramatically reducing the
number of address translation misses has been to provide hardware support for pages
with bigger sizes, termed huge pages. In this paper, we empirically demonstrate the
benefits and drawbacks of using such huge pages. In particular, we show that it is
essential for modern OS to refine their software mechanisms to more effectively manage
huge pages. Based on our empirical observations, we propose and implement MEGA, a
framework for huge page support for the Linux kernel. MEGA deploys basic tracking
mechanisms and a novel memory compaction algorithm that jointly provide for the effective
management of huge pages. We experimentally evaluate MEGA using an array of both synthetic
and real workloads and demonstrate that our framework tackles known problems associated
with huge pages including increased page fault latency, memory bloating as well as
memory fragmentation, while at the same time it delivers all huge pages benefits.},
	author = {Michailidis, Theodore and Delis, Alex and Roussopoulos, Mema},
	booktitle = {{Proc. of the 12th ACM International Conference on Systems and Storage (SYSTOR '19)}},
	date-added = {2021-10-21 10:21:35 +0900},
	date-modified = {2021-10-21 10:22:09 +0900},
	pages = {121--131},
	title = {{MEGA: Overcoming Traditional Problems with OS Huge Page Management}},
	year = {2019}}

@inproceedings{GuoEtAl-SmartMD,
	author = {Fan Guo and Yongkun Li and Yinlong Xu and Song Jiang and John C. S. Lui},
	booktitle = {{Proc. of the 2017 USENIX Annual Technical Conference (USENIX ATC '17)}},
	date-added = {2021-10-21 10:20:07 +0900},
	date-modified = {2021-10-21 10:20:57 +0900},
	pages = {733--744},
	title = {{SmartMD: A High Performance Deduplication Engine with Mixed Pages}},
	year = {2017}}

@inproceedings{PanwarEtAl-HawkEye,
	abstract = {Effective huge page management in operating systems is necessary for mitigation of
address translation overheads. However, this continues to remain a difficult area
in OS design. Recent work on Ingens uncovered some interesting pitfalls in current
huge page management strategies. Using both page access patterns discovered by the
OS kernel and fine-grained data from hardware performance counters, we expose problematic
aspects of current huge page management strategies. In our system, called HawkEye/Linux,
we demonstrate alternate ways to address issues related to performance, page fault
latency and memory bloat; the primary ideas behind HawkEye management algorithms are
async page pre-zeroing, de-duplication of zero-filled pages, fine-grained page access
tracking and measurement of address translation overheads through hardware performance
counters. Our evaluation shows that HawkEye is more performant, robust and better-suited
to handle diverse workloads when compared with current state-of-the-art systems.},
	author = {Panwar, Ashish and Bansal, Sorav and Gopinath, K.},
	booktitle = {{Proc. of the 24th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '19)}},
	date-added = {2021-10-21 10:18:33 +0900},
	date-modified = {2021-10-21 10:19:20 +0900},
	pages = {347--360},
	title = {{HawkEye: Efficient Fine-Grained OS Support for Huge Pages}},
	year = {2019}}

@inproceedings{KwonEtAl-Ingens,
	author = {Youngjin Kwon and Hangchen Yu and Simon Peter and Christopher J. Rossbach and Emmett Witchel},
	booktitle = {{Proc. of 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI '16)}},
	date-added = {2021-10-21 10:16:06 +0900},
	date-modified = {2021-10-21 10:16:52 +0900},
	pages = {705--721},
	title = {{Coordinated and Efficient Huge Page Management with Ingens}},
	year = {2016},
	bdsk-url-1 = {https://www.usenix.org/conference/osdi16/technical-sessions/presentation/kwon}}

@inproceedings{GuoEtAl-VEE15,
	author = {Guo, Fei and Kim, Seongbeom and Baskakov, Yury and Banerjee, Ishan},
	booktitle = {{Proc. of the 11th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments (VEE '15)}},
	date-added = {2021-10-21 10:14:34 +0900},
	date-modified = {2021-10-21 10:15:18 +0900},
	pages = {39--51},
	title = {{Proactively Breaking Large Pages to Improve Memory Overcommitment Performance in VMware ESXi}},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2731186.2731187}}

@inproceedings{xsbench,
	address = {Kyoto},
	author = {Tramm, John R and Siegel, Andrew R and Islam, Tanzima and Schulz, Martin},
	booktitle = {{PHYSOR} 2014 - The Role of Reactor Physics toward a Sustainable Future},
	title = {{XSBench} - The Development and Verification of a Performance Abstraction for {M}onte {C}arlo Reactor Analysis},
	url = {https://www.mcs.anl.gov/papers/P5064-0114.pdf},
	year = 2014,
	bdsk-url-1 = {https://www.mcs.anl.gov/papers/P5064-0114.pdf}}

@misc{gap,
	author = {Scott Beamer and Krste Asanovi{\'c} and David Patterson},
	date-added = {2021-10-21 10:06:49 +0900},
	date-modified = {2021-10-21 10:09:41 +0900},
	note = {\url{https://github.com/sbeamer/gapbs}},
	title = {{The GAP Benchmark Suite}},
	year = {2015}}

@misc{redis,
	author = {{Redis Ltd.}},
	date-added = {2021-10-21 10:03:07 +0900},
	date-modified = {2021-10-21 10:12:58 +0900},
	note = {\url{http://redis.io/}},
	title = {{Redis}},
	year = {Accessed: 2021-10-21},
	bdsk-url-1 = {http://redis.io/}}

@inproceedings{MargaritovEtAl-PTEMagnet,
	author = {Margaritov, Artemiy and Ustiugov, Dmitrii and Shahab, Amna and Grot, Boris},
	booktitle = {{Proc. of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '21)}},
	date-added = {2021-10-21 09:49:27 +0900},
	date-modified = {2021-10-21 09:50:54 +0900},
	pages = {211--223},
	title = {{PTEMagnet: Fine-Grained Physical Memory Reservation for Faster Page Walks in Public Clouds}},
	year = {2021}}

@misc{pmem-container,
	author = {Docker Hub},
	date-added = {2021-10-09 07:43:01 +0900},
	date-modified = {2021-10-09 07:50:21 +0900},
	note = {\url{https://hub.docker.com/u/pmem}},
	title = {pmem's Profile},
	year = {2015},
	bdsk-url-1 = {https://hub.docker.com/u/pmem}}

@misc{dell-optane,
	date-added = {2021-10-01 10:30:22 +0900},
	date-modified = {2021-10-01 10:32:24 +0900},
	note = {\url{https://kb.vmware.com/s/article/70874}},
	title = {DELL EMC PowerEdge Servers with Intel{\textregistered} Optane{\texttrademark} DC Persistent Memory Module Support (70874)},
	year = {2020}}

@misc{google-optane,
	date-added = {2021-10-01 10:23:26 +0900},
	date-modified = {2021-10-01 10:25:24 +0900},
	note = {\url{https://cloud.google.com/blog/topics/partners/available-first-on-google-cloud-intel-optane-dc-persistent-memory}},
	title = {Available first on Google Cloud: Intel Optane DC Persistent Memory},
	year = {2018}}

@inproceedings{Waldspurger-Balloon,
	author = {Carl A.~Waldspurger},
	booktitle = {{Proc. of the 5th USENIX Symposium on Operating System Design and Implementation (OSDI '02)}},
	date-added = {2021-09-30 09:23:18 +0900},
	date-modified = {2021-09-30 09:23:18 +0900},
	pages = {181--194},
	title = {{Memory Resource Management in VMware ESX Server}},
	year = {2002}}

@inproceedings{AminEtAl-VSwapper,
	abstract = {The number of guest virtual machines that can be consolidated on one physical host
is typically limited by the memory size, motivating memory overcommitment. Guests
are given a choice to either install a "balloon" driver to coordinate the overcommitment
activity, or to experience degraded performance due to uncooperative swapping. Ballooning,
however, is not a complete solution, as hosts must still fall back on uncooperative
swapping in various circumstances. Additionally, ballooning takes time to accommodate
change, and so guests might experience degraded performance under changing conditions.Our
goal is to improve the performance of hosts when they fall back on uncooperative swapping
and/or operate under changing load conditions. We carefully isolate and characterize
the causes for the associated poor performance, which include various types of superfluous
swap operations, decayed swap file sequentiality, and ineffective prefetch decisions
upon page faults. We address these problems by implementing VSwapper, a guest-agnostic
memory swapper for virtual environments that allows efficient, uncooperative overcommitment.
With inactive ballooning, VSwapper yields up to an order of magnitude performance
improvement. Combined with ballooning, VSwapper can achieve up to double the performance
under changing load conditions.},
	author = {Amit, Nadav and Tsafrir, Dan and Schuster, Assaf},
	booktitle = {{Proc. of the 19th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS '14)}},
	date-added = {2021-09-30 09:22:30 +0900},
	date-modified = {2021-09-30 09:22:30 +0900},
	pages = {349--366},
	title = {{VSwapper: A Memory Swapper for Virtualized Environments}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2541940.2541969}}

@inproceedings{SalomieEtAl-AppBalloon,
	author = {Tudor-Ioan Salomie and Gustavo Alonso and Timothy Roscoe and Kevin Elphinstone},
	booktitle = {{Proc. of the 8th ACM European Conference on Computer Systems (EuroSys '13)}},
	date-added = {2021-09-30 08:41:53 +0900},
	date-modified = {2021-09-30 08:41:53 +0900},
	pages = {337--350},
	title = {{Application Level Ballooning for Efficient Server Consolidation}},
	year = {2013}}

@misc{3d_xpoint,
	author = {Intel and Micron},
	note = {\url{https://newsroom.intel.com/news-releases/intel-and-micron-produce-breakthrough-memory-technology/}},
	title = {Intel and Micron Produce Breakthrough Memory Technology},
	year = {2021}}

@article{pcm,
	author = {Raoux, Simone and Burr, Geoffrey W and Breitwisch, Matthew J and Rettner, Charles T and Chen, Y-C and Shelby, Robert M and Salinga, Martin and Krebs, Daniel and Chen, S-H and Lung, H-L and others},
	journal = {IBM Journal of Research and Development},
	number = {4.5},
	pages = {465--479},
	title = {Phase-change random access memory: A scalable technology},
	volume = {52},
	year = {2008}}

@misc{optane_dc_pm,
	note = {\url{https://www.intel.com/optane}},
	title = {Intel\textregistered Optane\texttrademark Technology},
	year = {2021}}

@misc{intel_optane_technology,
	note = {\url{https://www.intel.com/content/www/us/en/architecture-and-technology/intel-optane-technology.html}},
	title = {Intel Optane Technology.},
	year = {2021}}

@article{wu1994envy,
	author = {Wu, Michael and Zwaenepoel, Willy},
	journal = {ACM SIGOPS Operating Systems Review},
	number = {5},
	pages = {86--97},
	publisher = {ACM New York, NY, USA},
	title = {eNVy: a non-volatile, main memory storage system},
	volume = {28},
	year = {1994}}

@misc{gcp,
	author = {Google},
	note = {\url{https://cloud.google.com/why-google-cloud}},
	title = {Google Cloud Platform},
	year = {2021}}

@misc{pmem_rocksdb,
	author = {Persistent Memory Programming},
	note = {\url{https://github.com/pmem/pmem-rocksdb}},
	title = {pmem-rocksdb},
	year = {2021}}

@misc{memcached_pm,
	author = {Lenovo Corporation},
	note = {\url{https://github.com/lenovo/memcached-pmem}},
	title = {Memcached},
	year = {2021}}

@misc{redis_pmem,
	author = {Intel Corporation},
	note = {\url{https://github.com/pmem/redis/tree/3.2-nvml}},
	title = {Redis},
	year = {2021}}

@inproceedings{mynvm,
	author = {Eisenman, Assaf and Gardner, Darryl and AbdelRahman, Islam and Axboe, Jens and Dong, Siying and Hazelwood, Kim and Petersen, Chris and Cidon, Asaf and Katti, Sachin},
	booktitle = {Proc. of the Thirteenth EuroSys Conference},
	pages = {1--13},
	title = {Reducing DRAM footprint with NVM in Facebook},
	year = {2018}}

@inproceedings{slm_db,
	author = {Kaiyrakhmet, Olzhas and Lee, Songyi and Nam, Beomseok and Noh, Sam H and Choi, Young-ri},
	booktitle = {17th USENIX Conference on File and Storage Technologies (FAST 19)},
	pages = {191--205},
	title = {SLM-DB: single-level key-value store with persistent memory},
	year = {2019}}

@inproceedings{yang2020empirical,
	author = {Yang, Jian and Kim, Juno and Hoseinzadeh, Morteza and Izraelevitz, Joseph and Swanson, Steve},
	booktitle = {18th USENIX Conference on File and Storage Technologies (FAST 20)},
	pages = {169--182},
	title = {An empirical guide to the behavior and use of scalable persistent memory},
	year = {2020}}

@misc{pmdk,
	note = {\url{http://pmem.io/pmdk/}},
	title = {Persistent Memory Development Kit},
	year = {2021}}

@inproceedings{gogte2019kevlar,
	author = {Gogte, Vaibhav and Wang, William and Diestelhorst, Stephan and Kolli, Aasheesh and Chen, Peter M and Narayanasamy, Satish and Wenisch, Thomas F},
	booktitle = {17th USENIX Conference on File and Storage Technologies (FAST 19)},
	pages = {45--63},
	title = {Software wear management for persistent memories},
	year = {2019}}

@inproceedings{zhang2019pangolin,
	author = {Zhang, Lu and Swanson, Steven},
	booktitle = {2019 USENIX Annual Technical Conference (USENIX ATC 19)},
	pages = {897--912},
	title = {Pangolin: A fault-tolerant persistent memory programming library},
	year = {2019}}

@inproceedings{espresso,
	author = {Wu, Mingyu and Zhao, Ziming and Li, Haoyu and Li, Heting and Chen, Haibo and Zang, Binyu and Guan, Haibing},
	booktitle = {Proc. of the Twenty-Third International Conference on Architectural Support for Programming Languages and Operating Systems},
	pages = {70--83},
	title = {Espresso: Brewing java for more non-volatility with non-volatile memory},
	year = {2018}}

@inproceedings{shull2019autopersist,
	author = {Shull, Thomas and Huang, Jian and Torrellas, Josep},
	booktitle = {Proc. of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
	pages = {316--332},
	title = {AutoPersist: An easy-to-use java nvm framework based on reachability},
	year = {2019}}

@inproceedings{george2020go_pmem,
	author = {George, Jerrin Shaji and Verma, Mohit and Venkatasubramanian, Rajesh and Subrahmanyam, Pratap},
	booktitle = {2020 USENIX Annual Technical Conference (USENIXATC 20)},
	pages = {859--872},
	title = {go-pmem: Native support for programming persistent memory in go},
	year = {2020}}

@misc{jpa,
	author = {Oracle},
	note = {\url{https://www.oracle.com/technetwork/jp/java/javaee/tech/persistence-jsp-140049.html}},
	title = {Java Persistence API},
	year = {2020}}

@inproceedings{nvmcached,
	author = {Wu, Xingbo and Ni, Fan and Zhang, Li and Wang, Yandong and Ren, Yufei and Hack, Michel and Shao, Zili and Jiang, Song},
	booktitle = {Proc. of the 7th ACM SIGOPS Asia-Pacific Workshop on Systems},
	pages = {1--7},
	title = {NVMcached: An NVM-based Key-Value Cache},
	year = {2016}}

@misc{nvmrocks,
	author = {Li, Jianhong and Pavlo, Andrew and Dong, Siying},
	note = {\url{http://istcbigdata.org/index.php/nvmrocks-rocksdb-on-non-volatilememory-systems/}},
	title = {NVMRocks: RocksDB on non-volatile memory systems},
	year = {2017}}

@inproceedings{fast_fair,
	author = {Hwang, Deukyeon and Kim, Wook-Hee and Won, Youjip and Nam, Beomseok},
	booktitle = {16th USENIX Conference on File and Storage Technologies (FAST 18)},
	pages = {187--200},
	title = {Endurable transient inconsistency in byte-addressable persistent b+-tree},
	year = {2018}}

@article{chen2020utree,
	author = {Chen, Youmin and Lu, Youyou and Fang, Kedong and Wang, Qing and Shu, Jiwu},
	journal = {Proc. of the VLDB Endowment},
	number = {12},
	pages = {2634--2648},
	publisher = {VLDB Endowment},
	title = {uTree: a persistent B+-tree with low tail latency},
	volume = {13},
	year = {2020}}

@inproceedings{lee2019recipe,
	author = {Lee, Se Kwon and Mohan, Jayashree and Kashyap, Sanidhya and Kim, Taesoo and Chidambaram, Vijay},
	booktitle = {Proc. of the 27th ACM Symposium on Operating Systems Principles},
	pages = {462--477},
	title = {Recipe: Converting concurrent dram indexes to persistent-memory indexes},
	year = {2019}}

@inproceedings{nove_lsm,
	author = {Kannan, Sudarsun and Bhat, Nitish and Gavrilovska, Ada and Arpaci-Dusseau, Andrea and Arpaci-Dusseau, Remzi},
	booktitle = {2018 USENIX Annual Technical Conference (USENIX ATC '18)},
	pages = {993--1005},
	title = {Redesigning LSMs for nonvolatile memory with NoveLSM},
	year = {2018}}

@inproceedings{van2018managing,
	author = {van Renen, Alexander and Leis, Viktor and Kemper, Alfons and Neumann, Thomas and Hashida, Takushi and Oe, Kazuichi and Doi, Yoshiyasu and Harada, Lilian and Sato, Mitsuru},
	booktitle = {Proc. of the 2018 International Conference on Management of Data},
	pages = {1541--1555},
	title = {Managing non-volatile memory in database systems},
	year = {2018}}

@inproceedings{chauhan2016nvmove,
	author = {Chauhan, Himanshu and Calciu, Irina and Chidambaram, Vijay and Schkufza, Eric and Mutlu, Onur and Subrahmanyam, Pratap},
	booktitle = {4th Workshop on Interactions of NVM/Flash with Operating Systems and Workloads (INFLOW 16)},
	title = {NVMOVE: Helping Programmers Move to Byte-Based Persistence},
	year = {2016}}

@inproceedings{neal2020agamotto,
	author = {Neal, Ian and Reeves, Ben and Stoler, Ben and Quinn, Andrew and Kwon, Youngjin and Peter, Simon and Kasikci, Baris},
	booktitle = {14th USENIX Symposium on Operating Systems Design and Implementation (OSDI 20)},
	pages = {1047--1064},
	title = {AGAMOTTO: How Persistent is your Persistent Memory Application?},
	year = {2020}}

@inproceedings{nvm_as_scalable_dram,
	author = {Lee, Benjamin C and Ipek, Engin and Mutlu, Onur and Burger, Doug},
	booktitle = {Proc. of the 36th annual international symposium on Computer architecture},
	pages = {2--13},
	title = {Architecting phase change memory as a scalable dram alternative},
	year = {2009}}

@inproceedings{qureshi2009scalable,
	author = {Qureshi, Moinuddin K and Srinivasan, Vijayalakshmi and Rivers, Jude A},
	booktitle = {Proc. of the 36th annual international symposium on Computer architecture},
	pages = {24--33},
	title = {Scalable high performance main memory system using phase-change memory technology},
	year = {2009}}

@article{saphana,
	author = {Lee, Juchang and Muehle, Michael and May, Norman and Faerber, Franz and Sikka, Vishal and Plattner, Hasso and Krueger, Jens and Grund, Martin},
	journal = {IEEE Data Engineering Bulletin},
	number = {2},
	pages = {28--33},
	title = {High-Performance Transaction Processing in SAP HANA},
	volume = {36},
	year = {2013}}

@inproceedings{new_nvm_db,
	author = {Arulraj, Joy and Pavlo, Andrew and Dulloor, Subramanya R},
	booktitle = {Proc. of the 2015 ACM SIGMOD International Conference on Management of Data},
	pages = {707--722},
	title = {Let's talk about storage \& recovery methods for non-volatile memory database systems},
	year = {2015}}

@inproceedings{zhang2021chameleondb,
	author = {Zhang, Wenhui and Zhao, Xingsheng and Jiang, Song and Jiang, Hong},
	booktitle = {Proc. of the Sixteenth European Conference on Computer Systems},
	pages = {194--209},
	title = {ChameleonDB: a key-value store for optane persistent memory},
	year = {2021}}

@misc{rocksdb,
	note = {\url{https://github.com/facebook/rocksdb/wiki}},
	title = {RocksDB wiki},
	year = {2021}}

@article{lsm_tree,
	author = {O'Neil, Patrick and Cheng, Edward and Gawlick, Dieter and O'Neil, Elizabeth},
	journal = {Acta Informatica},
	number = {4},
	pages = {351--385},
	publisher = {Springer},
	title = {The log-structured merge-tree (LSM-tree)},
	volume = {33},
	year = {1996}}

@article{luo2018efficient,
	author = {Luo, Chen and Carey, Michael J},
	journal = {arXiv preprint arXiv:1808.08896},
	title = {Efficient data ingestion and query processing for LSM-based storage systems},
	year = {2018}}

@inproceedings{wu2020lessons,
	author = {Wu, Yinjun and Park, Kwanghyun and Sen, Rathijit and Kroth, Brian and Do, Jaeyoung},
	booktitle = {Proc. of the 16th International Workshop on Data Management on New Hardware},
	pages = {1--3},
	title = {Lessons learned from the early performance evaluation of Intel Optane DC Persistent Memory in DBMS},
	year = {2020}}

@misc{libpmemobj,
	note = {\url{https://pmem.io/libpmemobj-cpp/}},
	title = {libpmemobj},
	year = {2021}}

@inproceedings{mem_persistency,
	author = {Pelley, Steven and Chen, Peter M and Wenisch, Thomas F},
	booktitle = {2014 ACM/IEEE 41st International Symposium on Computer Architecture (ISCA)},
	pages = {265--276},
	title = {Memory persistency},
	year = {2014}}

@inproceedings{nvm_prog_is_hard,
	author = {Ren, Jinglei and Hu, Qingda and Khan, Samira and Moscibroda, Thomas},
	booktitle = {Proc. of the 8th Asia-Pacific Workshop on Systems},
	pages = {1--8},
	title = {Programming for non-volatile main memory is hard},
	year = {2017}}

@inproceedings{xu2019finding,
	author = {Xu, Jian and Kim, Juno and Memaripour, Amirsaman and Swanson, Steven},
	booktitle = {Proc. of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
	pages = {427--439},
	title = {Finding and fixing performance pathologies in persistent memory software stacks},
	year = {2019}}

@inproceedings{song2021first,
	author = {Song, Hyunsub and Kim, Shean and Kim, J Hyun and Park, Ethan JH and Noh, Sam H},
	booktitle = {2021 USENIX Annual Technical Conference (USENIX ATC 21)},
	pages = {839--853},
	title = {First Responder: Persistent Memory Simultaneously as High Performance Buffer Cache and Storage},
	year = {2021}}

@inproceedings{CooperEtAl-SoCC,
	author = {Cooper, Brian F and Silberstein, Adam and Tam, Erwin and Ramakrishnan, Raghu and Sears, Russell},
	booktitle = {Proc. of the 1st ACM symposium on Cloud computing (SoCC '10)},
	date-modified = {2022-01-28 11:41:32 +0900},
	pages = {143--154},
	title = {Benchmarking cloud serving systems with YCSB},
	year = {2010}}

@inproceedings{dong2021evolution,
	author = {Dong, Siying and Kryczka, Andrew and Jin, Yanqin and Stumm, Michael},
	booktitle = {19th USENIX Conference on File and Storage Technologies (FAST 21)},
	pages = {33--49},
	title = {Evolution of Development Priorities in Key-value Stores Serving Large-scale Applications: The RocksDB Experience},
	year = {2021}}

@inproceedings{marathe2017persistent,
	author = {Marathe, Virendra J and Seltzer, Margo and Byan, Steve and Harris, Tim},
	booktitle = {9th USENIX Workshop on Hot Topics in Storage and File Systems (HotStorage 17)},
	title = {Persistent memcached: Bringing legacy code to byte-addressable persistent memory},
	year = {2017}}

@inproceedings{zhou2021spitfire,
	author = {Zhou, Xinjing and Arulraj, Joy and Pavlo, Andrew and Cohen, David},
	booktitle = {Proc. of the 2021 International Conference on Management of Data},
	pages = {2195--2207},
	title = {Spitfire: A Three-Tier Buffer Manager for Volatile and Non-Volatile Memory},
	year = {2021}}

@inproceedings{daase2021maximizing,
	author = {Daase, Bj{\"o}rn and Bollmeier, Lars Jonas and Benson, Lawrence and Rabl, Tilmann},
	booktitle = {Proc. of the 2021 International Conference on Management of Data},
	pages = {339--351},
	title = {Maximizing persistent memory bandwidth utilization for OLAP workloads},
	year = {2021}}

@article{wang2014scalable,
	author = {Wang, Tianzheng and Johnson, Ryan},
	journal = {Proc. of the VLDB Endowment},
	number = {10},
	pages = {865--876},
	publisher = {VLDB Endowment},
	title = {Scalable logging through emerging non-volatile memory},
	volume = {7},
	year = {2014}}

@inproceedings{wu2021archtm,
	author = {Wu, Kai and Ren, Jie and Peng, Ivy and Li, Dong},
	booktitle = {19th USENIX Conference on File and Storage Technologies (FAST 21)},
	pages = {141--153},
	title = {ArchTM: Architecture-Aware, High Performance Transaction for Persistent Memory},
	year = {2021}}

@inproceedings{condit2009better,
	author = {Condit, Jeremy and Nightingale, Edmund B and Frost, Christopher and Ipek, Engin and Lee, Benjamin and Burger, Doug and Coetzee, Derrick},
	booktitle = {Proc. of the ACM SIGOPS 22nd symposium on Operating systems principles},
	pages = {133--146},
	title = {Better I/O through byte-addressable, persistent memory},
	year = {2009}}

@article{kim2016nvwal,
	author = {Kim, Wook-Hee and Kim, Jinwoong and Baek, Woongki and Nam, Beomseok and Won, Youjip},
	journal = {ACM SIGPLAN Notices},
	number = {4},
	pages = {385--398},
	publisher = {ACM New York, NY, USA},
	title = {NVWAL: Exploiting NVRAM in write-ahead logging},
	volume = {51},
	year = {2016}}

@inproceedings{leis2018leanstore,
	author = {Leis, Viktor and Haubenschild, Michael and Kemper, Alfons and Neumann, Thomas},
	booktitle = {2018 IEEE 34th International Conference on Data Engineering (ICDE)},
	organization = {IEEE},
	pages = {185--196},
	title = {LeanStore: In-memory data management beyond main memory},
	year = {2018}}

@inproceedings{memaripour2018breeze,
	author = {Memaripour, Amirsaman and Swanson, Steven},
	booktitle = {2018 IEEE 36th International Conference on Computer Design (ICCD)},
	organization = {IEEE},
	pages = {413--422},
	title = {Breeze: User-level access to non-volatile main memories for legacy software},
	year = {2018}}

@article{liu2020lb+,
	author = {Liu, Jihang and Chen, Shimin and Wang, Lujun},
	journal = {Proc. of the VLDB Endowment},
	number = {7},
	pages = {1078--1090},
	publisher = {VLDB Endowment},
	title = {Lb+ trees: optimizing persistent index performance on 3dxpoint memory},
	volume = {13},
	year = {2020}}

@article{lu2020dash,
	author = {Lu, Baotong and Hao, Xiangpeng and Wang, Tianzheng and Lo, Eric},
	journal = {arXiv preprint arXiv:2003.07302},
	title = {Dash: Scalable hashing on persistent memory},
	year = {2020}}

@article{dulong2021nvcache,
	author = {Dulong, R{\'e}mi and Pires, Rafael and Correia, Andreia and Schiavoni, Valerio and Ramalhete, Pedro and Felber, Pascal and Thomas, Ga{\"e}l},
	journal = {arXiv preprint arXiv:2105.10397},
	title = {NVCache: A Plug-and-Play NVMM-based I/O Booster for Legacy Systems},
	year = {2021}}

@article{lersch2019evaluating,
	author = {Lersch, Lucas and Hao, Xiangpeng and Oukid, Ismail and Wang, Tianzheng and Willhalm, Thomas},
	journal = {Proc. of the VLDB Endowment},
	number = {4},
	pages = {574--587},
	publisher = {VLDB Endowment},
	title = {Evaluating persistent memory range indexes},
	volume = {13},
	year = {2019}}

@inproceedings{kadekodi2019splitfs,
	author = {Kadekodi, Rohan and Lee, Se Kwon and Kashyap, Sanidhya and Kim, Taesoo and Kolli, Aasheesh and Chidambaram, Vijay},
	booktitle = {Proc. of the 27th ACM Symposium on Operating Systems Principles (SOSP '19)},
	pages = {494--508},
	title = {SplitFS: Reducing software overhead in file systems for persistent memory},
	year = {2019}}

@misc{pm-fs-support,
	note = {\url{https://pmem.io/2018/05/15/using_persistent_memory_devices_with_the_linux_device_mapper.html}},
	title = {Using Persistent Memory Devices with the Linux Device Mapper},
	year = {2021}}

@misc{pm-modes,
	note = {\url{https://www.intel.co.jp/content/www/jp/ja/products/docs/memory-storage/optane-persistent-memory/optane-dc-persistent-memory-brief.html}},
	title = {Intel\textregistered Optane\texttrademark Persistent Memory Product Brief},
	year = {2021}}
