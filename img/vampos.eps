%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 787.000000 282.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 787 282
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 787 282
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /A put
dup 34 /p put
dup 35 /period put
dup 36 /L put
dup 37 /W put
dup 38 /I put
dup 39 /P put
dup 40 /N put
dup 41 /E put
dup 42 /T put
dup 43 /D put
dup 44 /V put
dup 45 /F put
dup 46 /S put
dup 47 /M put
dup 48 /R put
dup 49 /e put
dup 50 /j put
dup 51 /u put
dup 52 /v put
dup 53 /n put
dup 54 /a put
dup 55 /t put
dup 56 /space put
dup 57 /h put
dup 58 /c put
dup 59 /o put
dup 60 /m put
dup 61 /s put
dup 62 /b put
dup 63 /y put
dup 64 /i put
dup 65 /l put
dup 66 /z put
dup 67 /g put
dup 68 /d put
dup 69 /r put
dup 70 /f put
dup 71 /parenleft put
dup 72 /ellipsis put
dup 73 /parenright put
dup 74 /x put
dup 75 /underscore put
dup 76 /quoteright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<









2BB800002B000000
00>] def
/CharStrings 45 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/period 4 def
/A 5 def
/D 6 def
/E 7 def
/F 8 def
/I 9 def
/L 10 def
/M 11 def
/N 12 def
/P 13 def
/R 14 def
/S 15 def
/T 16 def
/V 17 def
/W 18 def
/underscore 19 def
/a 20 def
/b 21 def
/c 22 def
/d 23 def
/e 24 def
/f 25 def
/g 26 def
/h 27 def
/i 28 def
/j 29 def
/l 30 def
/m 31 def
/n 32 def
/o 33 def
/p 34 def
/r 35 def
/s 36 def
/t 37 def
/u 38 def
/v 39 def
/x 40 def
/y 41 def
/z 42 def
/ellipsis 43 def
/quoteright 44 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2879C4282F9760756B5968A381BD47A0FAADC149B80009F7A146266134675216C6D9BC5A46466CB744C954EF7DDA5393790ED4805C04054F776E1DC74B28A5336769CF0F932008E702CCEF390BFB8A4D547809E809F17366EA3225DC4027F1204C31A602C0382C796958169ADF0B4EACA751E074BD00620BA06A8E5D096AB12EA1C86BE610EE4A5D69BBF7063754ABCAE8B7839C621CF903A4188CE0ED3A8008B8670370DD62B68C76D444F6FDD7BB34BE791007B729F75B411FF588D3FA1D1E890A3AAA42F93951AEC03C428AF30AD23AB12AD3AE4B55FD7237E68489B69550FAC78F59F2DE191A33BFF5AF4167935A8D3FA7E8AB2B778C30174CA8265BEBE3535006DC696075C010FEE36A4F45940078A83DA656931FE5E7DED26725F840530CBF637C6EAB7375455F00057EB76592001FDC014C344DFEFB8567E47B7701777E8986F21BAADDAD318A8433C9B811C0C94BF2FACE3A347242BA9FA3EA6F5AD0473DC01F19A000516791DE7AC9C996A0F94B45127D538F82DE4B8E269E51271085B26135DD8DA9F78A2154BA90FB84052766C93FA35434807B165D1B808EA8BCE8ECE67FA172E787A8BFDB20093B6D331CD2DD02D04C681ACD645178FCA4D4CE690DF281AD278A365F3EE6348EA62AA5B979AB4B91AEB89889A295583C692754BAEA274D4FC0E36FBF75E693B2FEA2A1B32E9F034445347C70F886625040A9CD76E0989E83138A77859AED74B0BC3E333F9F9A52C46701DBAE413F416A358695F9EB8965E

DDDDECB61D430D7703A915E227449A096CA5C1D321B44686A66C55C586DCAC1F637D6D43AD9AB4D8F609D9A01CAA0F36DAE84DE03DC4E1FF73103733B0A05F1AD0D2149C8219BEC27E14F09BA8F0A408B7BE6B0DF98395CEB67E34040B7848C068B7240C32E22693910433829F8BA32E0CCDA14E78020373B7E7453CE1B17BA922C51B8D08E174F79C85A6904AC788841755B6F8ECC2B2CEE4CD87167C5AA4B79359C0A1F3958373059D65268E77DB36816553AD266B1BDB1CC077F3FA0C6E3A976D44A0A6D360AAFF02052AE47FD2FFFA9DD43944D256C2901165C90882BB971B3078C47BF898B34044F9ED04DCA41F2169E068BC61FDB28CB993A9B87D76D25C305F33CFD317817EB4D26D41BF684844ABDEA0DE63AB22BAE38FBAA345EF5A3BC9F5AF610533943A23F02C20F3D2F4CAA410A26D602C40ED434F14C0051886F57851240DCCA47B5F6AD64CF2ED077392BFEEB65422EF56DF5901BB7C2BEF01D5039C6FB040F4D79487669B02C1888B50001F3289704BD3C25F42E5014E58FF6582259DCDE3016FC962A35F32738F7D0C4F9FDA38A1D66856BC3E56FB306977AF4ECBFA4519CDA0A87FA987328DAA3814C811D3436D04DCAB16DF237AD346DDEC94665E5EA8BA4D2C3B28DFA7F203540C67CF74B489C357239B132577A1FD5A13040848C56330A3C242EC61D42B47B2DD35808860C7A31848878DE9EB238E91464FA3B76C7106455D8583A14295DCDFE6DC6C8FE0F2CDFE33077F637789E18F3FFF4F24EB2C710D245A6D7036737A44578FAABFCD9882D06C891D073A0CF0AD6693E6F5CECE7CCAB9F1446983B5078EF52B4EB8CD3EE18F1B2B7085F0CA0A2B2E4044FD84C24552D93E30110860CADF5404F9AD77E9265386D7DD9CACEF31595A471655F83C5F849F3E16A3E722E33FECDC62355F2060A66F27E61EAD2B2F3D7D29423336A2E75285977163F61B972FB8B8BDC38150819A23D7D9D29E4C6551B0A0E8FA8BFA244F2D1DDBFD13A7537A05972434897D4BAE1CC3C16EFC63C6F79A2D11FB70A6A83F317A0B12D3002740701B688E71A2763665DBDDAD668DC9A5B6E21FE96CE9C9879C6D62083DF4184F921E16A5984B47EB919B379D6FD2CA9C3EA17DEFC766E22D51762A363FAADF53815FAFFA5BAA6042969B04EA4F537A37163CE4FE80FF8B4AC353393997ACE0CE5E11AE8ACD94F92E1A8254BF7784A6B1B53081C61BF27064ED7491783EF89C8D22F13D7786B1BFA314CDF9F771537229035C84F968E076949CAEDA8A60995E952BA2AF0B120F71E17F53E67CCC9F5C7A1BD3912CCEE9C46F4AA3358388327FD525B4A304C39FA65C75FD3D15F0A8C64ED9B71218319532D0300C399E991BA7428376D99933EAF84879FD13AC0056DC58DBF82615DA963104507E7F32EA14653A59DE821B9CE6A6B811CB3521923D4911
91CDB3449EA5F667C38C2948AC519BA1E0403CD78880599CB68592E589AAF43A7194681D1E4F5A8A979781BBBEF2DAD9F77E4E900163E577E837184CEC53B1580C64C272726381AEEAF7B3BB7B746A6EC44390FC220C647EFA7658A2E4134E4DCB5C153089CDD182A34966CC7662DB533ED5D0A94FE34EDDEF3966466752DA6DF0E4AE3E169D3B8C0EBB753A5CD9CE8F16B735357FE5470D362FA76B5B8D42367B5B3388ADBB02FFBBFAEEB42355B01B318190FB69B0AB0B08BBD6743D05C9EFB44304B705F4041A60440236FB7DC471C2FB573EB53F3EC84BE94B004E78635B000F67C89A480200E941464C96F29DBB6D42D4CB0AF3A12E8AFBD3C50D711102259F128E5D37E01F91EAA04BD7C993B8940D0B7185FB35F3726A37D81F9CA9BA7DA39BECD2D3038475FE6FB49B5973FC4F341A2F78C36CF4712C36A57140CD5C5D02D21AC18BE818EB9A5BA4720194314AD46E81E59FFD8888F105A8AE204544FE0D65C3F8E56A9F9B99E95EE164860AACBE052073DACD63AAD4191CBC4862F7C22F0594A0667A8846F60102B30B0B180FFA07F2FEECEACD2458DD07C0D73EF80537557F5C009481385386CCE9C0B959C4B53E3F8F68F8E110FC911569CE4825B397A88EC763CB989390BA3B5F42B5BAAABA3278DE84605AA00214C38FA50EF5F1FC438C2719945D4FE0C6947560B82BB81BF9AFEFE836564970885C34281BCE673E88FFB814E4A92B6699582B1F0F129215994D554868EFE276A320902580E4F5A39C73588A3DF501412240EBD2B7FB1BC114CE623071F8D4244FF8FF59A49A339F99C8ACFE6211415284D5AABE7096BD764748670544C6D79E52149F9AAA5E8061A5BF7A2B9353EDBF92B626A4901FC7A79D0C70CA0544DF9227E645FEE72BF26D163C3298D2BA5E8603F5B19DD61866FF5DC090221092D77990C9B193488407AC6AEF38B4AB66508E2BEC3A2B79907AEF231606556829019363060ECD4C3E393A362E4BCAD9F60DA7901C6FC0ECF305B3F80E717B233BA0255D9CF31CACC7462E5C774D7FA61AECCC2F12DBF0891B0F56DE94AC9A52F8F38E5C5F0E2620B65FAC767C9862B304EEDF7CC8C5BE2E1AED963321B6C038A6C2509E898C922B80AEB90915C8E1A4646533BAE8DC5E37A9A9E9549B2FA54C47FA4E5FAEADE2D718432F22BA91ADFD5E075916B6F023A224305254262E69BBC08CD3DE1B5A9BE942FB227EA3C0FCF90145B54AE55730813DD5442BC3FD6B0DE08D281ADAFB1D6E8E0BC8A5727BEEAEA605654945D86011537DE7274735E7CEFD9EB48F3ECC0654884785B21F6B120B83E08294F2B5B81D5D9B1A5DD06EF8AE69EEEDDCC0FEC18487ADC6A34AA19AD36379DFCA00AD0FF08B83612E026E10AE674686C642CBE110623485335ADD9C02E572ABA69FB5DE8A95EAADFA4C10D2066F69C6AF6C08A3A205

A8305128AD755F0278CD362E4D4CFF4F65CC5520621E1F6AD8D5556F3DD9041CC72BB866AC34746029C991B02C2DC8D6DC3EBA153E9FE94D1BB81B882E24DEA3EDB6F41773D5D0EE02354779C7F77D4C185501D7A82F8CF352E5C1737570E08057AEB6B0B05E54EFEF8E65C7BBA04C53397F78F4AD3E3809967FCE5B83AD996EE35D6F05828A5BF19E09E620C41D629A4FF3838B0A8F2AE7A886213F4AE5DC5BE183CACF5915FAF32ABF18572D23F6821901F60D47221FE107ADAB08BEE6DE4C7BEA6C1B43E892C1A21132461165000BCF58BAC8C189E391383ED94F054D97B7A59D7E71074F788DC1060EF612BCE0B493FC6E0E3509DB67D8A7DF1874017EA3B2CB2C8F5F473A46E1040E706059A479027E3802B821EDD28600BB991B3865F3749A3654F94386A0857CC49353373985B10E6BD8F1A7466A058DEED2F2DAD48544902D6AC87EF98D7149EA9994F5AEB857F54775BDBEE0EAC39A821E0F8F6F8529E5CA7EC0CF83B9B005D834F2F9C054B94F61357C1339E56B5590F4659D0DD56243B522E9378A3BB667B785C77E5187FD3B2D82BEA7B8CC082C592AD772210BA81E46AEC4E80DF98EB33644C866D73801D61C0F81AB485D0613B0675A2A4BF93340675EBAAD2F8B244CB88F8DEF76150FAC88B3F64953E0B547FE8864493149FCF90606EF9010BE008CC18916D39ADEBF987700835B84D2F5C19FE80B20FE58C27F2BEDECD94B1DAE2B52A43410E228D9D373F085E6A948B9D513C1127AD4B8B6A582EA95278CCF4282545AED65DE16C0D32DAC5F374C315EE4BA6CA65017B784D0F3BEEEFEE73121F95A0BF50553B7887A562102DACBF6E8963EDBEE2D297185440AD0322C2103352FC4CD4FA02FC8E88D2EDB46723E4448CC96305DD2AE2186AECDEACEE84CBBEF6D05162055A59C987B32E163676596CE73A0F4F57F865E231441BC749BC57DAD7DB2BAE042DDA4ABF81DAD8F69250E9AF6BDBD6C38E2484E806394791FFA5C1F57545B8B1F6675DEEF3013BE4700EB7F4CAC0BD7612940C02903B093705B04E866E39CFFA73F5BB449F1E28F902CD81334EDA2EFE6CB9C5FB4DDB5931DD2FCE8642A7246D0300CC8CBCD6ED890FE42AE53ACFD5D84590432FCF452E69039D00A17E27A8A7186B89BF81BE39FE42071460A88979A65CA95030717F2602C24219FA429EACF2A94610188CE90CA64808DB62786E8F02EE7871EBF767E82BD26B23C523BE82F69484B1079DF9CBCC73335C02415162D65E2E432018D276B8756C971B9FFC77616DBE2F7638B45EF3AC2A5253CB0D10F1546C0D354403FBE140E15409046673F72ACA89C8A7044CF8E743C5A5B9B658B4A8AE522041368FBE15DA85A3BBAAD56B726B9AB5F2D0F74228FE8ACB9B17DB10CC449FCADAC1DB53C8F67E87C54FACDED84F4A2BABCAA4AA1C4D7E82808EF0F8386E3
7C6C09F565932CC076D1B8339FC6B2A6333EA165845D79530DDF96084352CF24ECF8E91321CD9D6D7CA8F2D184733C982258FBC576DD7BB7D407D268BD6E7AE6E7CB9D438589DAAFD15C059989C8ACA010E6E525B3A526E48A164399883386B71CB3ADFC937C90726AAD04E619C407E686DDFD8360A27D44497352A7A0DEE9E38829DDEE879A356D1B315FBB4923F1F21866261A428AD26B9214536A46ED1DA72790A1410C114D14E4DDDC4CB0F8012CE253DB871247AF99A669F76616077B3F3699680509A47F33870C26728D30ED4B3E113478B20E0C3D8A1B4788E7E276018329FFAB7A2038F57D67D5BFC7544395077E3D23679BAD91A3C81F692DA5A51108B1531006DDD214C20AA65A1024CB82C264A42B7A1B4F3E0F50E76D919CF2F06FF90994BBA8847D96D67DC1855DC71BD7B65E79B966DE1AE6368E38B6F2E9E5799F785B7BA6A0985F4F7582260124E6A342718B6E343C99BB40B76E50F9D88BBEF51D0D6752CD3C0D40CA03EF0965DB74B2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 787 282 rc
-130 384 m
1419 384 l
1419 -550 l
-130 -550 l
h
-130 384 m
f
320.03149 279.1181 m
446.11023 279.1181 l
458.2605 279.1181 468.11023 269.26837 468.11023 257.1181 c
468.11023 216.07874 l
468.11023 203.92848 458.2605 194.07874 446.11023 194.07874 c
320.03149 194.07874 l
307.88123 194.07874 298.03149 203.92848 298.03149 216.07874 c
298.03149 257.1181 l
298.03149 269.26837 307.88123 279.1181 320.03149 279.1181 c
h
320.03149 279.1181 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
450.03149 104.88189 m
576.11023 104.88189 l
588.2605 104.88189 598.11023 114.73163 598.11023 126.88189 c
598.11023 167.92126 l
598.11023 180.07152 588.2605 189.92126 576.11023 189.92126 c
450.03149 189.92126 l
437.88123 189.92126 428.03149 180.07152 428.03149 167.92126 c
428.03149 126.88189 l
428.03149 114.73163 437.88123 104.88189 450.03149 104.88189 c
h
450.03149 104.88189 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 383.07086 236.59842 cm
/F1.1[ 30 0 0 -30 0 0]sf
-31.68 11.080002 m
(!""#)[ 19.440000 17.790000 17.790000 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
235.16536 145.88977 m
301.37009 145.88977 l
305.78836 145.88977 309.37009 142.30804 309.37009 137.88977 c
309.37009 111.37008 l
309.37009 106.95181 305.78836 103.37008 301.37009 103.37008 c
235.16536 103.37008 l
230.74707 103.37008 227.16536 106.95181 227.16536 111.37008 c
227.16536 137.88977 l
227.16536 142.30804 230.74707 145.88977 235.16536 145.88977 c
h
235.16536 145.88977 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
365.16534 238.11023 m
431.37009 238.11023 l
435.78836 238.11023 439.37009 241.69196 439.37009 246.11023 c
439.37009 272.62991 l
439.37009 277.04819 435.78836 280.62991 431.37009 280.62991 c
365.16534 280.62991 l
360.74707 280.62991 357.16534 277.04819 357.16534 272.62991 c
357.16534 246.11023 l
357.16534 241.69196 360.74707 238.11023 365.16534 238.11023 c
h
365.16534 238.11023 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 268.2677 124.62992 cm
/F1.1[ 21 0 0 -21 0 0]sf
-24.507 7.7060013 m
($%&')[ 10.521000 19.446000 5.439000 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
235.16536 52.346458 m
301.37009 52.346458 l
305.78836 52.346458 309.37009 48.764736 309.37009 44.346458 c
309.37009 20.661419 l
309.37009 16.243141 305.78836 12.66142 301.37009 12.66142 c
235.16536 12.66142 l
230.74707 12.66142 227.16536 16.243141 227.16536 20.661419 c
227.16536 44.346458 l
227.16536 48.764736 230.74707 52.346458 235.16536 52.346458 c
h
235.16536 52.346458 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
365.16534 331.65353 m
431.37009 331.65353 l
435.78836 331.65353 439.37009 335.23526 439.37009 339.65353 c
439.37009 363.33859 l
439.37009 367.75687 435.78836 371.33859 431.37009 371.33859 c
365.16534 371.33859 l
360.74707 371.33859 357.16534 367.75687 357.16534 363.33859 c
357.16534 339.65353 l
357.16534 335.23526 360.74707 331.65353 365.16534 331.65353 c
h
365.16534 331.65353 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 268.2677 32.503941 cm
/F1.1[ 18 0 0 -18 0 0]sf
-34.497002 6.2480011 m
(\(\)*+\),)[ 12.996000 10.998000 10.332000 12.672000 10.998000 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
422.25195 148.72441 m
482.58652 148.72441 l
487.00479 148.72441 490.58652 145.14268 490.58652 140.72441 c
490.58652 111.37008 l
490.58652 106.95181 487.00479 103.37008 482.58652 103.37008 c
422.25195 103.37008 l
417.83368 103.37008 414.25195 106.95181 414.25195 111.37008 c
414.25195 140.72441 l
414.25195 145.14268 417.83368 148.72441 422.25195 148.72441 c
h
422.25195 148.72441 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
552.25195 235.27559 m
612.58649 235.27559 l
617.00482 235.27559 620.58649 238.85732 620.58649 243.27559 c
620.58649 272.62991 l
620.58649 277.04819 617.00482 280.62991 612.58649 280.62991 c
552.25195 280.62991 l
547.83368 280.62991 544.25195 277.04819 544.25195 272.62991 c
544.25195 243.27559 l
544.25195 238.85732 547.83368 235.27559 552.25195 235.27559 c
h
552.25195 235.27559 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 452.41925 126.04725 cm
/F1.1[ 21 0 0 -21 0 0]sf
-19.2465 7.7060013 m
(,-.)[ 12.831000 12.054000 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
356.78738 140.22047 m
374.80316 140.22047 l
379.22144 140.22047 382.80316 136.63875 382.80316 132.22047 c
382.80316 43.338585 l
382.80316 38.920307 379.22144 35.338585 374.80316 35.338585 c
356.78738 35.338585 l
352.36911 35.338585 348.78738 38.920307 348.78738 43.338585 c
348.78738 132.22047 l
348.78738 136.63875 352.36911 140.22047 356.78738 140.22047 c
h
356.78738 140.22047 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
486.78738 243.77953 m
504.80316 243.77953 l
509.22144 243.77953 512.80316 247.36125 512.80316 251.77953 c
512.80316 340.66141 l
512.80316 345.07968 509.22144 348.66141 504.80316 348.66141 c
486.78738 348.66141 l
482.36911 348.66141 478.78738 345.07968 478.78738 340.66141 c
478.78738 251.77953 l
478.78738 247.36125 482.36911 243.77953 486.78738 243.77953 c
h
486.78738 243.77953 m
S
/Cs2 SC
0 sc
0 i
0 1 1 0 367.21259 91.210487 cm
/F1.1[ 22 0 0 -22 0 0]sf
-33 7.6920013 m
(*&/\)0)[ 12.628000 5.698000 19.162000 13.442000 0.000000 ] xS
1 0 0 -1 653.06299 52.500004 cm
/F1.1[ 20 0 0 -20 0 0]sf
-128 -28.119995 m
(012341567187918:;<";5157=)[ 13.700000 10.740000 4.440000 11.120000 10.000000 10.740000 11.120000 10.740000 6.300000 10.740000 5.560000 6.300000 11.120000 10.740000 5.560000 10.740000 11.480000 17.060000 11.860000 11.480000 11.120000 10.740000 11.120000 6.300000 0.000000 ] xS
-128 -4.5599976 m
(>?8@5@7@6A@B@5C8791<865D8)[ 11.860000 10.000000 5.560000 4.440000 11.120000 4.440000 6.300000 4.440000 10.740000 4.440000 4.440000 9.600000 4.440000 11.120000 11.480000 5.560000 6.300000 11.120000 10.740000 17.060000 5.560000 10.740000 11.120000 11.860000 0.000000 ] xS
-128 19 m
(E1=7;E@5C8791@E8E355@5C8=7671=)[ 6.300000 10.740000 10.000000 6.300000 11.480000 6.660000 4.440000 11.120000 11.480000 5.560000 6.300000 11.120000 10.740000 4.440000 6.660000 5.560000 6.660000 11.120000 11.120000 11.120000 4.440000 11.120000 11.480000 5.560000 10.000000 6.300000 10.740000 6.300000 10.740000 0.000000 ] xS
-128 42.559998 m
(FE;<87918A;C=)[ 5.920000 6.300000 11.480000 17.060000 5.560000 6.300000 11.120000 10.740000 5.560000 4.440000 11.480000 11.480000 0.000000 ] xS
1 0 0 -1 263.66534 178.57874 cm
/F1.1[ 17 0 0 -17 0 0]sf
-31.483999 5.762001 m
(=15DGHI)[ 8.500000 9.129000 9.452000 10.081000 4.403000 17.000000 0.000000 ] xS
1 0 0 -1 245.82677 73.515747 cm
-40.612999 5.762001 m
(7JK<=CGHI)[ 5.355000 8.806000 8.500000 14.501000 8.500000 9.758000 4.403000 17.000000 0.000000 ] xS
1 0 0 -1 110.99606 125.23228 cm
/F1.1[ 20 0 0 -20 0 0]sf
-105.5 -16.339996 m
(/1<;E@B1=87918F35:7@;5)[ 17.420000 10.740000 17.060000 11.480000 6.660000 4.440000 9.600000 10.740000 10.000000 5.560000 6.300000 11.120000 10.740000 5.560000 5.920000 11.120000 11.120000 10.740000 6.300000 4.440000 11.480000 0.000000 ] xS
-105.5 7.2200012 m
(@54;:67@;5=87;8E1=7;E1)[ 4.440000 11.120000 10.000000 11.480000 10.740000 10.740000 6.300000 4.440000 11.480000 11.120000 10.000000 5.560000 6.300000 11.480000 5.560000 6.300000 10.740000 10.000000 6.300000 11.480000 6.300000 0.000000 ] xS
-105.5 30.779999 m
(7918:;<";5157=L8=7671=)[ 6.300000 11.120000 10.740000 5.560000 10.740000 11.480000 17.060000 11.860000 11.480000 11.120000 10.740000 11.120000 6.300000 10.000000 5.560000 5.560000 10.000000 6.300000 10.740000 6.300000 10.740000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
372.73227 158.55511 m
407.58267 158.55511 l
408.13495 158.55511 408.58267 158.10741 408.58267 157.55511 c
408.58267 131.20866 l
408.58267 130.65637 408.13495 130.20866 407.58267 130.20866 c
372.73227 130.20866 l
372.17999 130.20866 371.73227 130.65637 371.73227 131.20866 c
371.73227 157.55511 l
371.73227 158.10741 372.17999 158.55511 372.73227 158.55511 c
h
372.73227 158.55511 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
502.73227 225.44489 m
537.5827 225.44489 l
538.13495 225.44489 538.5827 225.89259 538.5827 226.44489 c
538.5827 252.79134 l
538.5827 253.34363 538.13495 253.79134 537.5827 253.79134 c
502.73227 253.79134 l
502.17999 253.79134 501.73227 253.34363 501.73227 252.79134 c
501.73227 226.44489 l
501.73227 225.89259 502.17999 225.44489 502.73227 225.44489 c
h
502.73227 225.44489 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 389.08267 144.3819 cm
/F1.1[ 17 0 0 -17 0 0]sf
-14.484 5.762001 m
($;C)[ 9.452000 9.758000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
482.59842 158.73622 m
517.44879 158.73622 l
518.0011 158.73622 518.44879 158.28851 518.44879 157.73622 c
518.44879 131.38977 l
518.44879 130.83748 518.0011 130.38977 517.44879 130.38977 c
482.59842 130.38977 l
482.04614 130.38977 481.59842 130.83748 481.59842 131.38977 c
481.59842 157.73622 l
481.59842 158.28851 482.04614 158.73622 482.59842 158.73622 c
h
482.59842 158.73622 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
612.59845 225.26378 m
647.44879 225.26378 l
648.0011 225.26378 648.44879 225.71149 648.44879 226.26378 c
648.44879 252.61023 l
648.44879 253.16252 648.0011 253.61023 647.44879 253.61023 c
612.59845 253.61023 l
612.04614 253.61023 611.59845 253.16252 611.59845 252.61023 c
611.59845 226.26378 l
611.59845 225.71149 612.04614 225.26378 612.59845 225.26378 c
h
612.59845 225.26378 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 498.94882 144.56299 cm
-14.484 5.762001 m
($;C)[ 9.452000 9.758000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -130 384 cm
637.79529 201.4902 m
617.9826 224.0417 l
S
0 J
0 j
0 i
614.35095 233.62978 m
611.64642 231.25372 l
620.68707 226.41776 l
615.27808 221.66565 l
611.64642 231.25372 l
608.94196 228.87767 l
605.3103 238.46574 l
h
614.35095 233.62978 m
S
3 w
1 J
1 j
0.60000002 i
462.04724 189.92126 m
441.15018 203.59106 l
429.85455 210.98007 423.04724 223.56747 423.04724 237.0652 c
423.04724 322.78818 l
S
0 i
CM
293.04724 54.211815 m
297.24725 65.411812 l
293.04724 61.211815 l
293.04724 61.211815 l
288.84723 65.411812 l
h
293.04724 54.211815 m
f
0 J
0 j
1 0 0 -1 -130 384 cm
423.04724 329.78818 m
427.24725 318.5882 l
423.04724 322.78818 l
423.04724 322.78818 l
418.84723 318.5882 l
h
423.04724 329.78818 m
S
1 1 1 sc
CM
301.86615 158.55511 m
336.71652 158.55511 l
337.26883 158.55511 337.71652 158.10741 337.71652 157.55511 c
337.71652 131.20866 l
337.71652 130.65637 337.26883 130.20866 336.71652 130.20866 c
301.86615 130.20866 l
301.31384 130.20866 300.86615 130.65637 300.86615 131.20866 c
300.86615 157.55511 l
300.86615 158.10741 301.31384 158.55511 301.86615 158.55511 c
h
301.86615 158.55511 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
431.86615 225.44489 m
466.71652 225.44489 l
467.26883 225.44489 467.71652 225.89259 467.71652 226.44489 c
467.71652 252.79134 l
467.71652 253.34363 467.26883 253.79134 466.71652 253.79134 c
431.86615 253.79134 l
431.31384 253.79134 430.86615 253.34363 430.86615 252.79134 c
430.86615 226.44489 l
430.86615 225.89259 431.31384 225.44489 431.86615 225.44489 c
h
431.86615 225.44489 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 318.21652 144.3819 cm
-14.484 5.762001 m
($;C)[ 9.452000 9.758000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
301.86615 70.862206 m
336.71652 70.862206 l
337.26883 70.862206 337.71652 70.41449 337.71652 69.862206 c
337.71652 43.515751 l
337.71652 42.963467 337.26883 42.515751 336.71652 42.515751 c
301.86615 42.515751 l
301.31384 42.515751 300.86615 42.963467 300.86615 43.515751 c
300.86615 69.862206 l
300.86615 70.41449 301.31384 70.862206 301.86615 70.862206 c
h
301.86615 70.862206 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
431.86615 313.13779 m
466.71652 313.13779 l
467.26883 313.13779 467.71652 313.58551 467.71652 314.13779 c
467.71652 340.48425 l
467.71652 341.03653 467.26883 341.48425 466.71652 341.48425 c
431.86615 341.48425 l
431.31384 341.48425 430.86615 341.03653 430.86615 340.48425 c
430.86615 314.13779 l
430.86615 313.58551 431.31384 313.13779 431.86615 313.13779 c
h
431.86615 313.13779 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 318.21652 56.68898 cm
-14.484 5.762001 m
($;C)[ 9.452000 9.758000 0.000000 ] xS
/Cs1 SC
0.85490203 0.85490203 0.85490203 sc
CM
422.25195 80.692917 m
482.58652 80.692917 l
487.00479 80.692917 490.58652 77.111191 490.58652 72.692917 c
490.58652 43.338585 l
490.58652 38.920307 487.00479 35.338585 482.58652 35.338585 c
422.25195 35.338585 l
417.83368 35.338585 414.25195 38.920307 414.25195 43.338585 c
414.25195 72.692917 l
414.25195 77.111191 417.83368 80.692917 422.25195 80.692917 c
h
422.25195 80.692917 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
552.25195 303.3071 m
612.58649 303.3071 l
617.00482 303.3071 620.58649 306.88879 620.58649 311.3071 c
620.58649 340.66141 l
620.58649 345.07968 617.00482 348.66141 612.58649 348.66141 c
552.25195 348.66141 l
547.83368 348.66141 544.25195 345.07968 544.25195 340.66141 c
544.25195 311.3071 l
544.25195 306.88879 547.83368 303.3071 552.25195 303.3071 c
h
552.25195 303.3071 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 452.41925 58.015751 cm
/F1.1[ 19 0 0 -19 0 0]sf
-32.547001 6.7340012 m
(0!/-.)[ 13.015000 12.312000 16.549000 10.906000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
482.59842 96.192917 m
517.44879 96.192917 l
518.0011 96.192917 518.44879 95.745201 518.44879 95.192917 c
518.44879 68.846458 l
518.44879 68.294174 518.0011 67.846458 517.44879 67.846458 c
482.59842 67.846458 l
482.04614 67.846458 481.59842 68.294174 481.59842 68.846458 c
481.59842 95.192917 l
481.59842 95.745201 482.04614 96.192917 482.59842 96.192917 c
h
482.59842 96.192917 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -130 384 cm
612.59845 287.8071 m
647.44879 287.8071 l
648.0011 287.8071 648.44879 288.25479 648.44879 288.8071 c
648.44879 315.15353 l
648.44879 315.70584 648.0011 316.15353 647.44879 316.15353 c
612.59845 316.15353 l
612.04614 316.15353 611.59845 315.70584 611.59845 315.15353 c
611.59845 288.8071 l
611.59845 288.25479 612.04614 287.8071 612.59845 287.8071 c
h
612.59845 287.8071 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 498.94882 82.019684 cm
/F1.1[ 17 0 0 -17 0 0]sf
-14.484 5.762001 m
($;C)[ 9.452000 9.758000 0.000000 ] xS
2 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -130 384 cm
632.77325 269.29135 m
612.96057 291.84283 l
S
0 J
0 j
0 i
609.32892 301.43091 m
606.62445 299.05487 l
615.6651 294.2189 l
610.25604 289.46677 l
606.62445 299.05487 l
603.91992 296.6788 l
600.28827 306.26688 l
h
609.32892 301.43091 m
S
ep
end
%%Trailer
%%EOF
